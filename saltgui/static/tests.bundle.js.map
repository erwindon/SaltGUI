{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./saltgui/static/scripts/ParseCommandLine.js","webpack:///./saltgui/static/scripts/Utils.js","webpack:///./saltgui/static/scripts/output/Output.js","webpack:///./saltgui/static/scripts/output/OutputDocumentation.js","webpack:///./saltgui/static/scripts/output/OutputHighstate.js","webpack:///./saltgui/static/scripts/output/OutputJson.js","webpack:///./saltgui/static/scripts/output/OutputNested.js","webpack:///./saltgui/static/scripts/output/OutputSaltGuiHighstate.js","webpack:///./saltgui/static/scripts/output/OutputYaml.js","webpack:///./tests/unit sync .js$","webpack:///./tests/unit/index.js","webpack:///./tests/unit/output.js","webpack:///./tests/unit/parsecmdline.js","webpack:///./tests/unit/utils.js","webpack:///external \"chai\""],"names":["patNull","patBooleanFalse","patBooleanTrue","patJid","patInteger","patFloat","window","parseCommandLine","toRun","args","params","trim","length","name","firstSpaceChar","indexOf","firstEqualSign","substr","endChar","undefined","objType","value","p","n","s","substring","JSON","parse","err","str","test","parseInt","parseFloat","isFinite","push","elapsedToString","date","secondsPassed","Date","getTime","minutes","Math","round","hours","days","createElement","type","className","content","element","document","classList","add","innerHTML","getQueryParam","vars","hashes","location","href","slice","split","hash","hashparts","escape","input","div","appendChild","createTextNode","makeTargetText","targetType","targetPattern","returnText","Output","requestedOutputFormat","supportedOutputFormats","localStorage","getItem","includes","response","command","startsWith","hostname","extraClass","span","innerText","hostResponse","replace","match","a","encodeURIComponent","obj","isOutputFormatAllowed","OutputJson","formatJSON","OutputYaml","formatYAML","OutputNested","formatNESTED","formatObject","props","prop","hasOwnProperty","keys","Object","sort","datetime_fraction_digits_str","datetime_fraction_digits_nr","Number","isNaN","dotPos","outputContainer","minions","addVirtualMinion","Array","isArray","commandArg","isDocumentationOutput","OutputDocumentation","reduceDocumentationOutput","addDocumentationOutput","allDiv","isAsyncOutput","cntResponses","cntMinions","txt","masterTriangle","style","addEventListener","_","childNodes","childs","getElementsByClassName","tr","evt","MouseEvent","dispatchEvent","nrMultiLineBlocks","isSuccess","retCode","hasProperties","return","hostOutput","hostMultiLine","fndRepresentation","hostClass","hostLabel","getHostnameHtml","getTextOutput","getNormalOutput","commandCmd","isHighStateOutput","OutputHighstate","OutputSaltGuiHighstate","getHighStateLabel","getHighStateOutput","cnt","append","triangle","display","key","filterKey","output","result","reduceFilterKey","isDocuKeyMatch","visualKey","selectedMinion","savedDocumentation","out","trimRight","reference","words","console","log","link","target","components","millis","anyFailures","anySkips","task","tasks","forEach","taskKey","___key___","b","__run_num__","indent","succeeded","failed","skipped","total_millis","changes","taskDiv","color","__id__","__sls__","comment","stringify","change","lines","line","old","new","taskkey","start_time","duration","getDurationClause","item","total","indentLevel","indentStep","formatSimpleJSON","separator","elem","repeat","msg","prefix","suffix","ret","ustring","first_line","line_prefix","ind","val","join","idx","addChangesInfo","dateTimeStr","needQuotes","formatSimpleYAML","context","require","module","exports","assert","describe","it","done","outputData","equal","isTrue","isFalse","deepEqual","container","global","isNull","now","setSeconds","getSeconds","setMinutes","getMinutes","setHours","getHours"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"tests.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./tests/unit/index.js\");\n","// Function to parse a commandline\n// The line is broken into individual tokens\n// Each token that is recognized as a JS type will get that type\n// Otherwise the token is considered to be a string\n// name-value pairs in the form \"name=value\" are added to the \"params\" dictionary\n// other parameters are added to the \"args\" array\n// e.g.:\n//   test \"1 2 3\" 4 x=7 {\"a\":1, \"b\":2}\n// is a command line of 5 tokens\n//   string: \"test\"\n//   string: \"1 2 3\"\n//   number: 4\n//   number: 7\n//   dictionary: {\"a\":1, \"b\": 2}\n// the array will be filled with 4 elements\n// the dictionary will be filled with one element named \"x\"\n\n\n// note that \"none\" is not case-insensitive, but \"null\" is\nconst patNull = /^(None|null|Null|NULL)$/;\n\nconst patBooleanFalse = /^(false|False|FALSE)$/;\nconst patBooleanTrue = /^(true|True|TRUE)$/;\n\nconst patJid = /^[2-9][0-9][0-9][0-9][01][0-9][0-3][0-9][0-2][0-9][0-5][0-9][0-5][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/;\n\nconst patInteger = /^((0)|([-+]?[1-9][0-9]*))$/;\n\nconst patFloat = /^([-+]?(([0-9]+)|([0-9]+[.][0-9]*)|([0-9]*[.][0-9]+))([eE][-+]?[0-9]+)?)$/;\n\n\nwindow.parseCommandLine = function(toRun, args, params) {\n  // just in case the user typed some extra whitespace\n  // at the start of the line\n  toRun = toRun.trim();\n\n  while(toRun.length > 0)\n  {\n    let name = null;\n\n    let firstSpaceChar = toRun.indexOf(\" \");\n    if(firstSpaceChar < 0)\n      firstSpaceChar = toRun.length;\n    const firstEqualSign = toRun.indexOf(\"=\");\n    if(firstEqualSign >= 0 && firstEqualSign < firstSpaceChar) {\n      // we have the name of a named parameter\n      name = toRun.substr(0, firstEqualSign);\n      toRun = toRun.substr(firstEqualSign + 1);\n      if(toRun === \"\" || toRun[0] === \" \") {\n        return \"Must have value for named parameter '\" + name + \"'\";\n      }\n    }\n\n    // Determine whether the JSON string starts with a known\n    // character for a JSON type\n    let endChar = undefined;\n    let objType = undefined;\n    if(toRun[0] === \"{\") {\n      endChar = \"}\";\n      objType = \"dictionary\";\n    } else if(toRun[0] === \"[\") {\n      endChar = \"]\";\n      objType = \"array\";\n    } else if(toRun[0] === \"\\\"\") {\n      // note that json does not support single-quoted strings\n      endChar = \"\\\"\";\n      objType = \"double-quoted-string\";\n    }\n\n    let value;\n    if(endChar && objType) {\n      // The string starts with a character for a known JSON type\n      let p = 1;\n      while(true) {\n        // Try until the next closing character\n        let n = toRun.indexOf(endChar, p);\n        if(n < 0) {\n          return \"No valid \" + objType + \" found\";\n        }\n\n        // parse what we have found so far\n        // the string ends with a closing character\n        // but that may not be enough, e.g. \"{a:{}\"\n        const s = toRun.substring(0, n + 1);\n        try {\n          value = JSON.parse(s);\n        }\n        catch(err) {\n          // the string that we tried to parse is not valid json\n          // continue to add more text from the input\n          p = n + 1;\n          continue;\n        }\n\n        // the first part of the string is valid JSON\n        n = n + 1;\n        if(n < toRun.length && toRun[n] !== \" \") {\n          return \"Valid \" + objType + \", but followed by text:\" + toRun.substring(n) + \"...\";\n        }\n\n        // valid JSON and not followed by strange characters\n        toRun = toRun.substring(n);\n        break;\n      }\n    } else {\n      // everything else is a string (without quotes)\n      // when we are done, we'll see whether it actually is a number\n      // or any of the known constants\n      let str = \"\";\n      while(toRun.length > 0 && toRun[0] !== \" \") {\n        str += toRun[0];\n        toRun = toRun.substring(1);\n      }\n\n      // try to find whether the string is actually a known constant\n      // or integer or float\n      if(patNull.test(str)) {\n        value = null;\n      } else if(patBooleanFalse.test(str)) {\n        value = false;\n      } else if(patBooleanTrue.test(str)) {\n        value = true;\n      } else if(patJid.test(str)) {\n        // jids look like numbers but must be strings\n        value = str;\n      } else if(patInteger.test(str)) {\n        value = parseInt(str);\n      } else if(patFloat.test(str)) {\n        value = parseFloat(str);\n        if(!isFinite(value)) {\n          return \"Numeric argument has overflowed or is infinity\";\n        }\n      } else {\n        value = str;\n      }\n    }\n\n    if(name !== null) {\n      // named parameter\n      params[name] = value;\n    } else {\n      // anonymous parameter\n      args.push(value);\n    }\n\n    // ignore the whitespace before the next part\n    toRun = toRun.trim();\n  }\n\n  // succesfull (no error message return)\n  return null;\n};\n","window.elapsedToString = function(date) {\n  try {\n    const secondsPassed = (new Date().getTime() / 1000) - (date.getTime() / 1000);\n\n    if(secondsPassed < 0) return \"Magic happened in the future\";\n    if(secondsPassed < 20) return \"A few moments ago\";\n    if(secondsPassed < 120) return \"A few minutes ago\";\n\n    if(secondsPassed < 60 * 60) {\n      const minutes = Math.round(secondsPassed / 60);\n      return minutes + \" minute(s) ago\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24) {\n      const hours = Math.round(secondsPassed / 60 / 60);\n      return hours + \" hour(s) ago\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24 * 2) {\n      return \"Yesterday\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24 * 30) {\n      const days = Math.round(secondsPassed / 60 / 60 / 24);\n      return days + \" days ago\";\n    }\n\n    return \"A long time ago, in a galaxy far, far away\";\n  }\n  catch(err) {\n    //console.error(err);\n    return \"It did happen, when I don't know\";\n  }\n};\n\nwindow.createElement = function(type, className, content) {\n  const element = document.createElement(type);\n  element.classList.add(className);\n  if(content !== \"\") element.innerHTML = content;\n  return element;\n};\n\nwindow.getQueryParam = function(name) {\n  const vars = [];\n  const hashes = window.location.href.slice(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n  for(const hash of hashes) {\n    const hashparts = hash.split(\"=\");\n    vars.push(hashparts[0]);\n    if(hashparts[0] === name) return hashparts[1];\n  }\n  return undefined;\n};\n\nwindow.escape = function(input) {\n  const div = document.createElement(\"div\");\n  div.appendChild(document.createTextNode(input));\n  return div.innerHTML;\n};\n\nwindow.makeTargetText = function(targetType, targetPattern) {\n  // note that \"glob\" is the most common case\n  // when used from the command-line, that target-type\n  // is not even specified.\n  // therefore we suppress that one\n\n  // note that due to bug in 2018.3, all finished jobs\n  // will be shown as if of type \"list\"\n  // therefore we suppress that one\n\n  let returnText = \"\";\n  if(targetType !== \"glob\" && targetType !== \"list\") {\n    returnText = targetType + \" \";\n  }\n  returnText += targetPattern;\n  return returnText;\n};\n","import {OutputDocumentation} from './OutputDocumentation';\nimport {OutputHighstate} from './OutputHighstate';\nimport {OutputJson} from './OutputJson';\nimport {OutputNested} from './OutputNested';\nimport {OutputSaltGuiHighstate} from './OutputSaltGuiHighstate';\nimport {OutputYaml} from './OutputYaml';\n\n// Functions to turn responses from the salt system into visual information\n// The following variations exist:\n// A) documentation output\n//    one of the responsing nodes is selected\n//    all other nodes are then ignored\n// B) state output\n//    the response is formatted as a list of tasks\n// C) error output\n//    the response is formatted as text\n// D) other output\n//    the response is formatted as json text\n//\n// Additionally the following preparations may be needed:\n// 1) Output from WHEEL functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n// 2) Output from RUNNERS functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n\n\nexport class Output {\n\n  static isOutputFormatAllowed(requestedOutputFormat) {\n    let supportedOutputFormats = null;\n    // window.localStorage is not defined during unit testing\n    if(window.localStorage) supportedOutputFormats = window.localStorage.getItem(\"output_formats\");\n    if(supportedOutputFormats === \"undefined\") supportedOutputFormats = null;\n    if(supportedOutputFormats === null) supportedOutputFormats = \"doc,saltguihighstate,json\";\n    return supportedOutputFormats.includes(requestedOutputFormat);\n  }\n\n  // Re-organize the output to let it appear as if the output comes\n  // from a single node called \"RUNNER\" or \"MASTER\".\n  // This way all responses are organized by minion\n  static addVirtualMinion(response, command) {\n\n    if(command.startsWith(\"runners.\")) {\n      // Add a new level in the object\n      return { \"RUNNER\": response };\n    }\n\n    if(command.startsWith(\"wheel.\")) {\n      // Add a new level in the object\n      return { \"WHEEL\": response };\n    }\n\n    // otherwise return the original\n    return response;\n  }\n\n  // compose the host/minion-name label that is shown with each response\n  static getHostnameHtml(hostname, extraClass=\"\") {\n    const span = document.createElement(\"span\");\n    span.classList.add(\"hostname\");\n    if(extraClass) span.classList.add(extraClass);\n    span.innerText = hostname;\n    return span;\n  }\n\n  // the output is only text\n  // note: do not return a text-node\n  static getTextOutput(hostResponse) {\n    // strip trailing whitespace\n    hostResponse = hostResponse.replace(/[ \\r\\n]+$/g, \"\");\n\n    // replace all returned JIDs to links\n    // typically found in the output of an async job\n    // patJid is defined in scripts/parsecmdline.js\n    if(hostResponse.match(patJid)) {\n      const a = document.createElement(\"a\");\n      a.href = \"/job?id=\" + encodeURIComponent(hostResponse);\n      a.innerText = hostResponse;\n      return a;\n    }\n\n    // all regular text\n    const span = document.createElement(\"span\");\n    span.innerText = hostResponse;\n    return span;\n  }\n\n\n  // format an object in the preferred style\n  static formatObject(obj) {\n    if(Output.isOutputFormatAllowed(\"json\")) {\n      return OutputJson.formatJSON(obj);\n    }\n\n    if(Output.isOutputFormatAllowed(\"yaml\")) {\n      return OutputYaml.formatYAML(obj);\n    }\n\n    if(Output.isOutputFormatAllowed(\"nested\")) {\n      return OutputNested.formatNESTED(obj);\n    }\n\n    // when nothing is allowed, JSON is always allowed\n    return OutputJson.formatJSON(obj);\n  }\n\n\n  // this is the default output form\n  // just format the returned objects\n  // note: do not return a text-node\n  static getNormalOutput(hostResponse) {\n    const content = Output.formatObject(hostResponse);\n    const element = document.createElement(content.includes(\"\\n\") ? \"div\" : \"span\");\n    element.innerText = content;\n    return element;\n  }\n\n\n  static hasProperties(obj, props) {\n    if(!obj || typeof obj !== \"object\") {\n      return false;\n    }\n    for(const prop of props) {\n      if(!obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  static isAsyncOutput(response) {\n    let keys = Object.keys(response);\n    if(keys.length !== 2) return false;\n    keys = keys.sort();\n    if(keys[0] !== \"jid\") return false;\n    if(keys[1] !== \"minions\") return false;\n    return true;\n  }\n\n\n  // reformat a date-time string\n  // supported formats:\n  // (time) 19:05:01.561754\n  // (datetime) 2019, Jan 26 19:05:22.808348\n  // current action is (only):\n  // - reduce the number of digits for the fractional seconds\n  static dateTimeStr(str) {\n\n    // no available setting, then return the original\n    const datetime_fraction_digits_str = window.localStorage.getItem(\"datetime_fraction_digits\");\n    if(datetime_fraction_digits_str === null) return str;\n\n    // setting is not a number, return the original\n    let datetime_fraction_digits_nr = Number.parseInt(datetime_fraction_digits_str);\n    if(isNaN(datetime_fraction_digits_nr)) return str;\n\n    // stick to the min/max values without complaining\n    if(datetime_fraction_digits_nr < 0) datetime_fraction_digits_nr = 0;\n    if(datetime_fraction_digits_nr > 6) datetime_fraction_digits_nr = 6;\n\n    // find the fractional part (assume only one '.' in the string)\n    let dotPos = str.indexOf(\".\");\n    if(dotPos < 0) return str;\n\n    // with no digits, also remove the dot\n    if(datetime_fraction_digits_nr === 0) dotPos -= 1;\n\n    return str.substring(0, dotPos + datetime_fraction_digits_nr + 1);\n  }\n\n\n  // the orchestrator for the output\n  // determines what format should be used and uses that\n  static addResponseOutput(outputContainer, minions, response, command) {\n\n    // remove old content\n    outputContainer.innerText = \"\";\n\n    // reformat runner/wheel output into regular output\n    response = Output.addVirtualMinion(response, command);\n\n    if(typeof response === \"string\") {\n      // do not format a string as an object\n      outputContainer.innerText = response;\n      return;\n    }\n\n    if(typeof response !== \"object\" || Array.isArray(response)) {\n      outputContainer.innerText = Output.formatObject(response);\n      return;\n    }\n\n    // it might be documentation\n    const commandArg = command.trim().replace(/^[a-z.]* */i, \"\");\n    const isDocumentationOutput = OutputDocumentation.isDocumentationOutput(Output, response, commandArg);\n    if(isDocumentationOutput) {\n      OutputDocumentation.reduceDocumentationOutput(response, commandArg, commandArg);\n      OutputDocumentation.addDocumentationOutput(outputContainer, response);\n      return;\n    }\n\n    const allDiv = document.createElement(\"div\");\n\n    if(!command.startsWith(\"runners.\") &&\n       !command.startsWith(\"wheel.\") &&\n       !Output.isAsyncOutput(response)) {\n      // runners/wheel responses are not per minion\n      // Do not produce a #response line for async-start confirmation\n      const span = document.createElement(\"span\");\n\n      const cntResponses = Object.keys(response).length;\n      const cntMinions = minions.length;\n\n      let txt;\n\n      if(cntResponses === 1) {\n        txt = cntResponses + \" response\";\n      } else {\n        txt = cntResponses + \" responses\";\n      }\n\n      if(cntMinions !== cntResponses) {\n        txt = txt + \", \" + (cntMinions - cntResponses) + \" no response\";\n      }\n\n      if(cntResponses > 0 && cntMinions !== cntResponses) {\n        txt = txt + \", \" + cntMinions + \" total\";\n      }\n\n      // some room for the triangle\n      txt = txt + \" \";\n\n      span.innerText = txt;\n      allDiv.appendChild(span);\n    }\n\n    const masterTriangle = document.createElement(\"span\");\n    masterTriangle.innerText = \"\\u25bd\";\n    masterTriangle.style = \"cursor: pointer\";\n    allDiv.appendChild(masterTriangle);\n\n    outputContainer.appendChild(allDiv);\n\n    masterTriangle.addEventListener(\"click\", _ => {\n      // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n      // 25BD = WHITE DOWN-POINTING TRIANGLE\n      if(masterTriangle.innerText !== \"\\u25bd\") {\n        masterTriangle.innerText = \"\\u25bd\";\n      } else {\n        masterTriangle.innerText = \"\\u25b7\";\n      }\n\n      for(const div of outputContainer.childNodes) {\n        // only click on items that are collapsible\n        const childs = div.getElementsByClassName(\"triangle\");\n        if(childs.length !== 1) continue;\n        // do not collapse the \"all\" item again\n        const tr = childs[0];\n        if(tr === masterTriangle) continue;\n        // only click on items that are not already the same as \"all\"\n        if(tr.innerText === masterTriangle.innerText) continue;\n        // (un)collapse the minion\n        const evt = new MouseEvent(\"click\", {});\n        tr.dispatchEvent(evt);\n      }\n    });\n\n    let nrMultiLineBlocks = 0;\n\n    // for all other types we consider the output per minion\n    // this is more generic and it simplifies the handlers\n    for(const hostname of minions.sort()) {\n\n      const isSuccess = true;\n      const retCode = 0;\n\n      let hostResponse = response[hostname];\n      if(Output.hasProperties(hostResponse, [\"retcode\", \"return\", \"success\"])) {\n        hostResponse = hostResponse.return;\n      }\n      else if(command.startsWith(\"runner.\") && hostResponse && hostResponse.hasOwnProperty(\"return\")) {\n        hostResponse = hostResponse.return.return;\n      }\n\n      let hostOutput = null;\n      let hostMultiLine = null;\n      let fndRepresentation = false;\n\n      // the standard label is the hostname,\n      // future: colored based on the successflag\n      // future: colored based on the retcode\n      let hostClass = \"host_success\";\n      if(!isSuccess) hostClass = \"host_failure\";\n      if(!response.hasOwnProperty(hostname)) hostClass = \"host_noresponse\";\n      let hostLabel = Output.getHostnameHtml(hostname, hostClass);\n\n      if(!fndRepresentation && !response.hasOwnProperty(hostname)) {\n        hostOutput = Output.getTextOutput(\"(no response)\");\n        fndRepresentation = true;\n      }\n\n      if(!fndRepresentation && typeof hostResponse === \"string\") {\n        hostOutput = Output.getTextOutput(hostResponse);\n        hostMultiLine = hostResponse.includes(\"\\n\");\n        fndRepresentation = true;\n      }\n\n      if(!fndRepresentation && typeof hostResponse !== \"object\") {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = false;\n        fndRepresentation = true;\n      }\n\n      // null is an object, but treat it separatelly\n      if(!fndRepresentation && hostResponse === null) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = false;\n        fndRepresentation = true;\n      }\n\n      // an array is an object, but treat it separatelly\n      if(!fndRepresentation && Array.isArray(hostResponse)) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = hostResponse.length > 0;\n        fndRepresentation = true;\n      }\n\n      // it might be highstate output\n      const commandCmd = command.trim().replace(/ .*/, \"\");\n      const isHighStateOutput = OutputHighstate.isHighStateOutput(commandCmd, hostResponse);\n      // enhanced highstate display\n      if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"saltguihighstate\")) {\n        hostLabel = OutputSaltGuiHighstate.getHighStateLabel(hostname, hostResponse);\n        hostOutput = OutputSaltGuiHighstate.getHighStateOutput(hostResponse);\n        hostMultiLine = true;\n        fndRepresentation = true;\n      }\n      // regular highstate display\n      if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"highstate\")) {\n        hostLabel = OutputHighstate.getHighStateLabel(hostname, hostResponse);\n        hostOutput = OutputHighstate.getHighStateOutput(hostResponse);\n        hostMultiLine = true;\n        fndRepresentation = true;\n      }\n\n      // nothing special? then it is normal output\n      if(!fndRepresentation) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = Object.keys(hostResponse).length > 0;\n      }\n\n      // one response does not need to be collapsible\n      const cnt = Object.keys(response).length;\n      if(cnt === 1) {\n        hostMultiLine = false;\n      }\n\n      if(hostMultiLine) nrMultiLineBlocks += 1;\n\n      // compose the actual output\n      const div = document.createElement(\"div\");\n\n      div.append(hostLabel);\n\n      div.appendChild(document.createTextNode(\": \"));\n\n      // multiple line, collapsible\n      // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n      // 25BD = WHITE DOWN-POINTING TRIANGLE\n      let triangle = null;\n      if(hostMultiLine) {\n        triangle = document.createElement(\"span\");\n        triangle.innerText = \"\\u25bd\";\n        triangle.style = \"cursor: pointer\";\n        triangle.classList.add(\"triangle\");\n        div.appendChild(triangle);\n        div.appendChild(document.createElement(\"br\"));\n\n        triangle.addEventListener(\"click\", _ => {\n          // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n          // 25BD = WHITE DOWN-POINTING TRIANGLE\n          if(triangle.innerText !== \"\\u25bd\") {\n            triangle.innerText = \"\\u25bd\";\n            hostOutput.style.display = \"\";\n          } else {\n            triangle.innerText = \"\\u25b7\";\n            hostOutput.style.display = \"none\";\n          }\n        });\n      }\n\n      div.append(hostOutput);\n\n      outputContainer.append(div);\n    }\n\n    if(nrMultiLineBlocks <= 1) {\n      // No collapsible elements, hide the master\n      // Also hide with 1 collapsible element\n      masterTriangle.style.display = \"none\";\n    }\n\n  }\n}","export class OutputDocumentation {\n\n  // test whether the returned data matches the requested data\n  static isDocuKeyMatch(key, filterKey) {\n\n    // no filter is always OK\n    if(!filterKey) return true;\n\n    // an exact match is great\n    if(key === filterKey) return true;\n\n    // a true prefix is also ok\n    if(key.startsWith(filterKey + \".\")) return true;\n\n    // no match\n    return false;\n  }\n\n\n  // we only treat output as documentation output when it sticks to strict rules\n  // all minions must return strings\n  // and when its key matches the requested documentation\n  // empty values are allowed due to errors in the documentation\n  // 'output' is needed like this to prevent an error during testing\n  static isDocumentationOutput(output, response, command) {\n\n    if(!output.isOutputFormatAllowed(\"doc\")) return false;\n\n    let result = false;\n\n    // reduce the search key to match the data in the response\n    command = OutputDocumentation.reduceFilterKey(command);\n\n    for(const hostname of Object.keys(response)) {\n\n      const output = response[hostname];\n\n      if(!output) {\n        // some commands do not have help-text\n        // e.g. wheel.key.get_key\n        continue;\n      }\n\n      if(typeof output !== \"object\") {\n        // strange --> no documentation object\n        return false;\n      }\n\n      // arrays are also objects,\n      // but not what we are looking for\n      if(Array.isArray(output)) {\n        return false;\n      }\n\n      for(const key of Object.keys(output)) {\n        // e.g. for \"test.rand_str\"\n        if(output[key] === null) {\n          continue;\n        }\n\n        // but otherwise it must be a (documentation)string\n        if(typeof output[key] !== \"string\") {\n          return false;\n        }\n\n        // is this what we were looking for?\n        if(OutputDocumentation.isDocuKeyMatch(key, command)) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n\n  // reduce the search key to match the data in the response\n  static reduceFilterKey(filterKey) {\n    if(filterKey === \"wheel\") {\n      return \"\";\n    }\n    if(filterKey.startsWith(\"wheel.\")) {\n      // strip the prefix \"wheel.\"\n      return filterKey.substring(6);\n    }\n\n    if(filterKey === \"runners\") {\n      return \"\";\n    }\n    if(filterKey.startsWith(\"runners.\")) {\n      // strip the prefix \"runners.\"\n      return filterKey.substring(8);\n    }\n\n    return filterKey;\n  }\n\n\n  // documentation is requested from all targetted minions\n  // these all return roughly the same output\n  // it is a big waste of screen lines to show the output for each minion\n  // so the output is reduced to the output from a single minion only\n  // this is exactly what the salt commandline also does\n  // Parameters:\n  //   response: the data returned from all minions\n  //   visualKey: the name under which the result must be visualized\n  //              this replaces the traditional minion-name\n  //   filterKey: the prefix (or the full command) that the documentation\n  //              was requested for. The internal functions for WHEEL and\n  //              RUNNERS always return all documentation in that category\n  //              thus that response must be reduced.\n  static reduceDocumentationOutput(response, visualKey, filterKey) {\n    if(!response || typeof response !== \"object\") {\n      // strange --> don't try to fix anything\n      return;\n    }\n\n    // reduce the search key to match the data in the response\n    // i.e. remove the prefixes for \"wheel\" and \"runners\"\n    filterKey = OutputDocumentation.reduceFilterKey(filterKey);\n\n    let selectedMinion = null;\n    for(const hostname of Object.keys(response)) {\n\n      // When we already found the documentation ignore all others\n      if(selectedMinion) {\n        delete response[hostname];\n        continue;\n      }\n\n      // make sure it is an object (instead of e.g. \"false\" for an offline minion)\n      // when it is not, the whole entry is ignored\n      if(!response[hostname] || typeof response[hostname] !== \"object\") {\n        delete response[hostname];\n        continue;\n      }\n\n      // make sure that the entry matches with the requested command or prefix\n      // that's always the case for SYS.DOC output, but not for RUNNERS.DOC.RUNNER\n      // and/or RUNNERS.DOC.WHEEL.\n      const hostResponse = response[hostname];\n      for(const key of Object.keys(hostResponse)) {\n\n        // is this what we were looking for?\n        if(!OutputDocumentation.isDocuKeyMatch(key, filterKey)) {\n          // no match, ignore the whole entry\n          delete hostResponse[key];\n        }\n      }\n\n      // no documentation present (or left) on this minion?\n      // then discard the result of this minion\n      if(Object.keys(hostResponse).length === 0) {\n        delete response[hostname];\n        continue;\n      }\n\n      // we have found documentation output\n      // mark all other documentation for discarding\n      selectedMinion = hostname;\n    }\n\n    if(selectedMinion) {\n      // basically rename the key\n      const savedDocumentation = response[selectedMinion];\n      delete response[selectedMinion];\n      response[visualKey] = savedDocumentation;\n    } else {\n      // prepare a dummy response when no documentation could be found\n      // otherwise leave all documentation responses organized by minion\n      response[\"dummy\"] = { };\n      response[\"dummy\"][visualKey] = \"no documentation found\";\n    }\n  }\n\n  // add the output of a documentation command to the display\n  static addDocumentationOutput(outputContainer, response) {\n\n    // we expect no hostnames present\n    // as it should have been reduced already\n    for(const hostname of Object.keys(response)) {\n\n      const hostResponse = response[hostname];\n\n      for(const key of Object.keys(hostResponse).sort()) {\n\n        let out = hostResponse[key];\n        if(out === null) continue;\n        out = out.trimRight();\n\n        // internal links: remove the \".. rubric::\" prefix\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/[.][.] rubric:: */g, \"\");\n\n        // internal links: remove prefixes like \":mod:\" and \":py:func:\"\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/(:[a-z_]*)*:`/g, \"`\");\n\n        // internal links: remove link indicators in highlighted text\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/[ \\n]*<[^`]*>`/gm, \"`\");\n\n        // turn text into html\n        // e.g. in \"sys.doc cmd.run\"\n        out = out.replace(/&/g, \"&amp;\");\n\n        // turn text into html\n        // e.g. in \"sys.doc state.template\"\n        out = out.replace(/</g, \"&lt;\");\n\n        // turn text into html\n        // e.g. in \"sys.doc state.template\"\n        out = out.replace(/>/g, \"&gt;\");\n\n        // external links\n        // e.g. in \"sys.doc pkg.install\"\n        while(out.includes(\".. _\")) {\n          // take only a line containing \".. _\"\n          const reference = out.\n            replace(/^(.|\\n|\\r)*[.][.] _/m, \"\").\n            replace(/(\\n|\\r)(.|\\n|\\r)*$/m, \"\");\n          const words = reference.split(\": \");\n          if(words.length !== 2) { console.log(\"words\", words); break; }\n          const link = words[0];\n          const target = words[1];\n          // add link to all references\n          while(out.includes(link + \"_\")) {\n            out = out.replace(\n              link + \"_\",\n              \"<a href='\" + target + \"' target='_blank'>\" + link + \"</a>\");\n          }\n          // remove the item from the link table\n          out = out.replace(\".. _\" + reference, \"\");\n        }\n\n        // replace ``......``\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/``([^`]*)``/g, \"<span style='background-color: #575757'>$1</span>\");\n\n        // replace `......`\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/`([^`]*)`/g, \"<span style='color: yellow'>$1</span>\");\n\n        // remove whitespace at end of lines\n        out = out.replace(/  *\\n/gm, \"\");\n\n        // remove duplicate empty lines (usually due to previous rule)\n        out = out.replace(/\\n\\n\\n*/gm, \"\\n\\n\");\n\n        outputContainer.innerHTML +=\n          \"<div><span class='hostname'>\" + key + \"</span>:</br><pre style='height: initial; overflow-y: initial;'>\" + out + \"</pre></div>\";\n      }\n    }\n  }\n\n}","import {Output} from './Output';\n\nexport class OutputHighstate {\n\n  static isHighStateOutput(command, response) {\n\n    if(!Output.isOutputFormatAllowed(\"highstate\")) return false;\n\n    if(typeof response !== \"object\") return false;\n    if(Array.isArray(response)) return false;\n    if(command !== \"state.apply\" && command !== \"state.highstate\") return false;\n    for(const key of Object.keys(response)) {\n      const components = key.split(\"_|-\");\n      if(components.length !== 4) return false;\n    }\n    return true;\n  }\n\n  static getDurationClause(millis) {\n    if(millis === 1) {\n      return `${millis} millisecond`;\n    }\n    if(millis < 1000) {\n      return `${millis} milliseconds`;\n    }\n    if(millis === 1000) {\n      return `${millis/1000} second`;\n    }\n    return `${millis/1000} seconds`;\n  }\n\n  static getHighStateLabel(hostname, hostResponse) {\n    let anyFailures = false;\n    let anySkips = false;\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(hostResponse)) {\n      const task = hostResponse[key];\n      if(task.result === null) anySkips = true;\n      else if(!task.result) anyFailures = true;\n    }\n\n    if(anyFailures) {\n      return Output.getHostnameHtml(hostname, \"host_failure\");\n    }\n    if(anySkips) {\n      return Output.getHostnameHtml(hostname, \"host_skips\");\n    }\n    return Output.getHostnameHtml(hostname, \"host_success\");\n  }\n\n  static getHighStateOutput(hostResponse) {\n\n    // The tasks are in an (unordered) object with uninteresting keys\n    // convert it to an array that is in execution order\n    // first put all the values in an array\n    const tasks = [];\n    Object.keys(hostResponse).forEach(\n      function(taskKey) {\n        hostResponse[taskKey].___key___ = taskKey;\n        tasks.push(hostResponse[taskKey]);\n      }\n    );\n    // then sort the array\n    tasks.sort(function(a, b) { return a.__run_num__ - b.__run_num__; } );\n\n    const indent = \"    \";\n\n    const div = document.createElement(\"div\");\n\n    let succeeded = 0;\n    let failed = 0;\n    let skipped = 0;\n    let total_millis = 0;\n    let changes = 0;\n    for(const task of tasks) {\n\n      const taskDiv = document.createElement(\"div\");\n\n      const span = document.createElement(\"span\");\n      if(task.result === null) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"yellow\";\n        span.innerText = \"\\u2714\";\n        skipped += 1;\n      } else if(task.result) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"green\";\n        span.innerText = \"\\u2714\";\n        succeeded += 1;\n      } else {\n        // 2718 = HEAVY BALLOT X\n        span.style.color = \"red\";\n        span.innerText = \"\\u2718\";\n        failed += 1;\n      }\n      taskDiv.append(span);\n\n      taskDiv.append(document.createTextNode(\" \"));\n\n      if(task.name) {\n        taskDiv.append(document.createTextNode(task.name));\n      } else {\n        // make sure that the checkbox/ballot-x is on a reasonable line\n        // also for the next \"from\" clause (if any)\n        taskDiv.append(document.createTextNode(\"(anonymous task)\"));\n      }\n\n      if(task.__id__ && task.__id__ !== task.name) {\n        taskDiv.append(document.createTextNode(\" id=\" + encodeURIComponent(task.__id__)));\n      }\n\n      if(task.__sls__) {\n        taskDiv.append(document.createTextNode(\n          \" (from \" + task.__sls__.replace(\".\", \"/\") + \".sls)\"));\n      }\n\n      const components = task.___key___.split(\"_|-\");\n      taskDiv.append(document.createElement(\"br\"));\n      taskDiv.append(document.createTextNode(\n        indent + \"Function is \" + components[0] + \".\" + components[3]));\n\n      if(task.comment) {\n        taskDiv.append(document.createElement(\"br\"));\n        let txt = task.comment;\n        // trim extra whitespace\n        txt = txt.replace(/[ \\r\\n]+$/g, \"\");\n        // indent extra lines\n        txt = txt.replace(/[\\n]+/g, \"\\n\" + indent);\n        taskDiv.append(document.createTextNode(indent + txt));\n      }\n\n      if(task.hasOwnProperty(\"changes\")) {\n        if(typeof task.changes !== \"object\" || Array.isArray(task.changes)) {\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(indent + JSON.stringify(task.changes)));\n        } else {\n          for(const key of Object.keys(task.changes).sort()) {\n            changes = changes + 1;\n            const change = task.changes[key];\n            // 25BA = BLACK RIGHT-POINTING POINTER\n            // don't use arrows here, these are higher than a regular\n            // text-line and disturb the text-flow\n            if(typeof change === \"string\" && change.includes(\"\\n\")) {\n              taskDiv.append(document.createElement(\"br\"));\n              // show multi-line text as a separate block\n              taskDiv.append(document.createTextNode(indent + key + \":\"));\n              const lines = change.trim().split(\"\\n\");\n              for(const line of lines) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\"      \" + line));\n              }\n            } else if(typeof change !== \"object\" || Array.isArray(task.change)) {\n              // show all other non-objects in a simple way\n              taskDiv.append(document.createElement(\"br\"));\n              taskDiv.append(document.createTextNode(\n                indent + key + \": \" +\n                JSON.stringify(change)));\n            } else {\n              // treat old->new first\n              if(change.hasOwnProperty(\"old\") && change.hasOwnProperty(\"new\")) {\n                taskDiv.append(document.createElement(\"br\"));\n                // place changes on one line\n                taskDiv.append(document.createTextNode(\n                  indent + key + \": \" +\n                  JSON.stringify(change.old) + \" \\u25BA \" +\n                  JSON.stringify(change.new)));\n                delete change.old;\n                delete change.new;\n              }\n              // then show whatever remains\n              for(const taskkey of Object.keys(change).sort()) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                  indent + key + \": \" + taskkey + \": \" +\n                  JSON.stringify(change[taskkey])));\n              }\n            }\n          }\n        }\n      }\n\n      if(task.hasOwnProperty(\"start_time\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + \"Started at \" + task.start_time));\n      }\n\n      if(task.hasOwnProperty(\"duration\")) {\n        const millis = Math.round(task.duration);\n        total_millis += millis;\n        if(millis >= 10) {\n          // anything below 10ms is not worth reporting\n          // report only the \"slow\" jobs\n          // it still counts for the grand total thought\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\n            indent + \"Duration \" + OutputHighstate.getDurationClause(millis)));\n        }\n      }\n\n      // show any unknown attribute of a task\n      // do not use Object.entries, that is not supported by the test framework\n      for(const key of Object.keys(task)) {\n        const item = task[key];\n        if(key === \"___key___\") continue; // ignored, generated by us\n        if(key === \"__id__\") continue; // handled\n        if(key === \"__sls__\") continue; // handled\n        if(key === \"__run_num__\") continue; // handled, not shown\n        if(key === \"changes\") continue; // handled\n        if(key === \"comment\") continue; // handled\n        if(key === \"duration\") continue; // handled\n        if(key === \"host\") continue; // ignored, same as host\n        if(key === \"name\") continue; // handled\n        if(key === \"pchanges\") continue; // ignored, also ignored by cli\n        if(key === \"result\") continue; // handled\n        if(key === \"start_time\") continue; // handled\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \" = \" + JSON.stringify(item)));\n      }\n\n      div.append(taskDiv);\n    }\n\n    // add a summary line\n    let line = \"\";\n\n    if(succeeded) line += \", \" + succeeded + \" succeeded\";\n    if(skipped) line += \", \" + skipped + \" skipped\";\n    if(failed) line += \", \" + failed + \" failed\";\n    const total = succeeded + skipped + failed;\n    if(total !== succeeded && total !== skipped && total !== failed) {\n      line += \", \" + (succeeded + skipped + failed) + \" total\";\n    }\n\n    // note that the number of changes may be higher or lower\n    // than the number of tasks. tasks may contribute multiple\n    // changes, or tasks may have no changes.\n    if(changes === 1) line += \", \" + changes + \" change\";\n    else if(changes) line += \", \" + changes + \" changes\";\n\n    // multiple durations and significant?\n    if(total > 1 && total_millis >= 10) {\n      line += \", \" + OutputHighstate.getDurationClause(total_millis);\n    }\n\n    if(line) {\n      div.append(document.createTextNode(line.substring(2)));\n    }\n\n\n    return div;\n  }\n\n}","export class OutputJson {\n\n  // format an object as JSON\n  // returns NULL when it is not a simple object\n  // i.e. no multi-line objects, no indentation here\n  static formatSimpleJSON(value) {\n\n    if(value === null) {\n      // null is an object, but not really\n      // leave that to the builtin function\n      return JSON.stringify(value);\n    }\n\n    if(value === undefined) {\n      // JSON.stringify does not return a string for this\n      // but again a value undefined, we need a string\n      return \"undefined\";\n    }\n\n    if(typeof value !== \"object\") {\n      // a simple type\n      // leave that to the builtin function\n      return JSON.stringify(value);\n    }\n\n    if(Array.isArray(value) && value.length === 0) {\n      // show the brackets for an empty array a bit wider apart\n      return \"[ ]\";\n    }\n\n    if(!Array.isArray(value) && Object.keys(value).length === 0) {\n      // show the brackets for an empty object a bit wider apart\n      return \"{ }\";\n    }\n\n    return null;\n  }\n\n  // format an object as JSON\n  // based on an initial indentation and an indentation increment\n  static formatJSON(value, indentLevel=0) {\n\n    // indent each level with 4 spaces\n    const indentStep = 4;\n\n    let str = OutputJson.formatSimpleJSON(value);\n    if(str !== null) {\n      return str;\n    }\n\n    if(Array.isArray(value)) {\n      // an array\n      // put each element on its own line\n      str = \"[\";\n      let separator = \"\";\n      for(const elem of value) {\n        str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) +\n          OutputJson.formatJSON(elem, indentLevel + indentStep);\n        separator = \",\";\n      }\n      str += \"\\n\" + \" \".repeat(indentLevel) + \"]\";\n      return str;\n    }\n\n    // regular object\n    // put each name+value on its own line\n    const keys = Object.keys(value);\n    str = \"{\";\n    let separator = \"\";\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(value).sort()) {\n      const item = value[key];\n      str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) + \"\\\"\" + key + \"\\\": \" +\n        OutputJson.formatJSON(item, indentLevel + indentStep);\n      separator = \",\";\n    }\n    str += \"\\n\" + \" \".repeat(indentLevel) + \"}\";\n    return str;\n  }\n\n}","export class OutputNested {\n\n  // heavily inspired by the implementation for NESTED output\n  // as originally implemented in salt/output/nested.py from Salt\n\n  static ustring(indent, msg, prefix='', suffix='') {\n    return \" \".repeat(indent) + prefix + msg + suffix;\n  }\n\n  static display(ret, indent, prefix, out) {\n    if(ret === null) {\n      out.push(OutputNested.ustring(indent, \"None\", prefix));\n    } else if(ret === undefined) {\n      out.push(OutputNested.ustring(indent, \"undefined\", prefix));\n    } else if(typeof ret === \"boolean\" || typeof ret === \"number\") {\n      out.push(OutputNested.ustring(indent, ret, prefix));\n    } else if(typeof ret === \"string\") {\n      let first_line = true;\n      ret = ret.replace(/\\n$/, \"\");\n      for(const line of ret.split(\"\\n\")) {\n        let line_prefix = prefix;\n        if(!first_line)\n          line_prefix = \".\".repeat(prefix.length);\n        out.push(OutputNested.ustring(indent, line, line_prefix));\n        first_line = false;\n      }\n    } else if(typeof ret === \"object\" && Array.isArray(ret)) {\n      for(const ind of ret) {\n        if(typeof ind === \"object\" /* including array */ ) {\n          out.push(OutputNested.ustring(indent, '|_'));\n          let prefix;\n          if(typeof ind === \"object\" && !Array.isArray(ind))\n            prefix = '';\n          else\n            prefix ='-\\u00A0';\n          OutputNested.display(ind, indent + 2, prefix, out);\n        } else {\n          OutputNested.display(ind, indent, '-\\u00A0', out);\n        }\n      }\n    } else if(typeof ret === \"object\") {\n      if(indent) out.push(OutputNested.ustring(indent, '----------'));\n      for(const key of Object.keys(ret).sort()) {\n        const val = ret[key];\n        out.push(OutputNested.ustring(indent, key, prefix, ':'));\n        if(val !== null && val !== \"\") {\n          OutputNested.display(val, indent + 4, '', out);\n        }\n      }\n    }\n    return out;\n  }\n\n  static formatNESTED(value, indentLevel=0) {\n    const lines = OutputNested.display(value, 0, '', []);\n    return lines.join('\\n');\n  }\n\n}","import {Output} from './Output';\n\nexport class OutputSaltGuiHighstate {\n\n  // no separate `isHighStateOutput` here\n  // the implementation from OutputHighstate is (re)used\n\n  static getDurationClause(millis) {\n    if(millis === 1) {\n      return `${millis} millisecond`;\n    }\n    if(millis < 1000) {\n      return `${millis} milliseconds`;\n    }\n    if(millis === 1000) {\n      return `${millis/1000} second`;\n    }\n    return `${millis/1000} seconds`;\n  }\n\n  static getHighStateLabel(hostname, hostResponse) {\n    let anyFailures = false;\n    let anySkips = false;\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(hostResponse)) {\n      const task = hostResponse[key];\n      if(task.result === null) anySkips = true;\n      else if(!task.result) anyFailures = true;\n    }\n\n    if(anyFailures) {\n      return Output.getHostnameHtml(hostname, \"host_failure\");\n    }\n    if(anySkips) {\n      return Output.getHostnameHtml(hostname, \"host_skips\");\n    }\n    return Output.getHostnameHtml(hostname, \"host_success\");\n  }\n\n  static addChangesInfo(taskDiv, task, indent) {\n    if(!task.hasOwnProperty(\"changes\")) {\n      return 0;\n    }\n\n    if(typeof task.changes !== \"object\" || Array.isArray(task.changes)) {\n      taskDiv.append(document.createElement(\"br\"));\n      taskDiv.append(document.createTextNode(indent + JSON.stringify(task.changes)));\n      return 0;\n    }\n\n    let changes = 0;\n    for(const key of Object.keys(task.changes).sort()) {\n\n      changes = changes + 1;\n\n      const change = task.changes[key];\n\n      if(typeof change === \"string\" && change.includes(\"\\n\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        // show multi-line text as a separate block\n        taskDiv.append(document.createTextNode(indent + key + \":\"));\n        const lines = change.trim().split(\"\\n\");\n        for(const line of lines) {\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\"      \" + line));\n        }\n        continue;\n      }\n\n      if(Array.isArray(change)) {\n        for(const idx in change) {\n          const task = change[idx];\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\n            indent + key + \"[\" + idx + \"]: \" + JSON.stringify(task)));\n        }\n        continue;\n      }\n\n      if(typeof change !== \"object\") {\n        // show all other non-objects in a simple way\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \": \" +\n          JSON.stringify(change)));\n        continue;\n      }\n\n      // treat old->new first\n      if(change.hasOwnProperty(\"old\") && change.hasOwnProperty(\"new\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        // place changes on one line\n        // 25BA = BLACK RIGHT-POINTING POINTER\n        // don't use arrows here, these are higher than a regular\n        // text-line and disturb the text-flow\n        taskDiv.append(document.createTextNode(\n          indent + key + \": \" +\n          JSON.stringify(change.old) + \" \\u25BA \" +\n          JSON.stringify(change.new)));\n        delete change.old;\n        delete change.new;\n      }\n      // then show whatever remains\n      for(const taskkey of Object.keys(change).sort()) {\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \": \" + taskkey + \": \" +\n          JSON.stringify(change[taskkey])));\n      }\n    }\n  }\n\n  static getHighStateOutput(hostResponse) {\n\n    // The tasks are in an (unordered) object with uninteresting keys\n    // convert it to an array that is in execution order\n    // first put all the values in an array\n    const tasks = [];\n    Object.keys(hostResponse).forEach(\n      function(taskKey) {\n        hostResponse[taskKey].___key___ = taskKey;\n        tasks.push(hostResponse[taskKey]);\n      }\n    );\n    // then sort the array\n    tasks.sort(function(a, b) { return a.__run_num__ - b.__run_num__; } );\n\n    const indent = \"    \";\n\n    const div = document.createElement(\"div\");\n\n    let succeeded = 0;\n    let failed = 0;\n    let skipped = 0;\n    let total_millis = 0;\n    let changes = 0;\n    for(const task of tasks) {\n\n      const taskDiv = document.createElement(\"div\");\n\n      const span = document.createElement(\"span\");\n      if(task.result === null) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"yellow\";\n        span.innerText = \"\\u2714\";\n        skipped += 1;\n      } else if(task.result) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"green\";\n        span.innerText = \"\\u2714\";\n        succeeded += 1;\n      } else {\n        // 2718 = HEAVY BALLOT X\n        span.style.color = \"red\";\n        span.innerText = \"\\u2718\";\n        failed += 1;\n      }\n      taskDiv.append(span);\n\n      taskDiv.append(document.createTextNode(\" \"));\n\n      if(task.name) {\n        taskDiv.append(document.createTextNode(task.name));\n      } else {\n        // make sure that the checkbox/ballot-x is on a reasonable line\n        // also for the next \"from\" clause (if any)\n        taskDiv.append(document.createTextNode(\"(anonymous task)\"));\n      }\n\n      if(task.__id__ && task.__id__ !== task.name) {\n        taskDiv.append(document.createTextNode(\" id=\" + encodeURIComponent(task.__id__)));\n      }\n\n      if(task.__sls__) {\n        taskDiv.append(document.createTextNode(\n          \" (from \" + task.__sls__.replace(\".\", \"/\") + \".sls)\"));\n      }\n\n      const components = task.___key___.split(\"_|-\");\n      taskDiv.append(document.createElement(\"br\"));\n      taskDiv.append(document.createTextNode(\n        indent + \"Function is \" + components[0] + \".\" + components[3]));\n\n      if(task.comment) {\n        taskDiv.append(document.createElement(\"br\"));\n        let txt = task.comment;\n        // trim extra whitespace\n        txt = txt.replace(/[ \\r\\n]+$/g, \"\");\n        // indent extra lines\n        txt = txt.replace(/[\\n]+/g, \"\\n\" + indent);\n        taskDiv.append(document.createTextNode(indent + txt));\n      }\n\n      changes += OutputSaltGuiHighstate.addChangesInfo(taskDiv, task, indent);\n\n      if(task.hasOwnProperty(\"start_time\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + \"Started at \" + Output.dateTimeStr(task.start_time)));\n      }\n\n      if(task.hasOwnProperty(\"duration\")) {\n        const millis = Math.round(task.duration);\n        total_millis += millis;\n        if(millis >= 10) {\n          // anything below 10ms is not worth reporting\n          // report only the \"slow\" jobs\n          // it still counts for the grand total thought\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\n            indent + \"Duration \" + OutputSaltGuiHighstate.getDurationClause(millis)));\n        }\n      }\n\n      // show any unknown attribute of a task\n      // do not use Object.entries, that is not supported by the test framework\n      for(const key of Object.keys(task)) {\n        const item = task[key];\n        if(key === \"___key___\") continue; // ignored, generated by us\n        if(key === \"__id__\") continue; // handled\n        if(key === \"__sls__\") continue; // handled\n        if(key === \"__run_num__\") continue; // handled, not shown\n        if(key === \"changes\") continue; // handled\n        if(key === \"comment\") continue; // handled\n        if(key === \"duration\") continue; // handled\n        if(key === \"host\") continue; // ignored, same as host\n        if(key === \"name\") continue; // handled\n        if(key === \"pchanges\") continue; // ignored, also ignored by cli\n        if(key === \"result\") continue; // handled\n        if(key === \"start_time\") continue; // handled\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \" = \" + JSON.stringify(item)));\n      }\n\n      div.append(taskDiv);\n    }\n\n    // add a summary line\n    let line = \"\";\n\n    if(succeeded) line += \", \" + succeeded + \" succeeded\";\n    if(skipped) line += \", \" + skipped + \" skipped\";\n    if(failed) line += \", \" + failed + \" failed\";\n    const total = succeeded + skipped + failed;\n    if(total !== succeeded && total !== skipped && total !== failed) {\n      line += \", \" + (succeeded + skipped + failed) + \" total\";\n    }\n\n    // note that the number of changes may be higher or lower\n    // than the number of tasks. tasks may contribute multiple\n    // changes, or tasks may have no changes.\n    if(changes === 1) line += \", \" + changes + \" change\";\n    else if(changes) line += \", \" + changes + \" changes\";\n\n    // multiple durations and significant?\n    if(total > 1 && total_millis >= 10) {\n      line += \", \" + OutputSaltGuiHighstate.getDurationClause(total_millis);\n    }\n\n    if(line) {\n      div.append(document.createTextNode(line.substring(2)));\n    }\n\n    return div;\n  }\n\n}","export class OutputYaml {\n\n  // format an object as YAML\n  // returns NULL when it is not a simple object\n  // i.e. no multi-line objects, no indentation here\n  static formatSimpleYAML(value) {\n\n    if(value === null) {\n      return \"null\";\n    }\n\n    if(value === undefined) {\n      return \"undefined\";\n    }\n\n    if(typeof value === \"boolean\") {\n      return value ? \"true\" : \"false\";\n    }\n\n    if(typeof value === \"string\") {\n      let needQuotes = false;\n\n      // simple number with extra 0's at the start is still a string\n      if(value.match(/^0[0-9]+$/)) return value;\n\n      if(!isNaN(Number(value))) needQuotes = true;\n\n      if(value.match(/^$/)) needQuotes = true;\n\n      if(value.match(/^ /)) needQuotes = true;\n      if(value.match(/ $/)) needQuotes = true;\n\n      if(value.match(/^@/)) needQuotes = true;\n      if(value.match(/^`/)) needQuotes = true;\n      if(value.match(/^%/)) needQuotes = true;\n\n      if(!value.match(/^[-a-z0-9_()./:+ ]+$/i)) needQuotes = true;\n\n      if(!needQuotes) return value;\n      return \"'\" + value + \"'\";\n    }\n\n    if(typeof value !== \"object\") {\n      return \"\" + value;\n    }\n\n    if(Array.isArray(value) && value.length === 0) {\n      // show the brackets for an empty array a bit wider apart\n      return \"[ ]\";\n    }\n\n    if(!Array.isArray(value) && Object.keys(value).length === 0) {\n      // show the brackets for an empty object a bit wider apart\n      return \"{ }\";\n    }\n\n    return null;\n  }\n\n  // format an object as YAML\n  // based on an initial indentation and an indentation increment\n  static formatYAML(value, indentLevel=0) {\n\n    // indent each level with this number of spaces\n    // note that list items are indented with 2 spaces\n    // independently of this setting to match the prefix \"- \"\n    const indentStep = 2;\n\n    const str = OutputYaml.formatSimpleYAML(value);\n    if(str !== null) {\n      return str;\n    }\n\n    if(Array.isArray(value)) {\n      let out = \"\";\n      let separator = \"\";\n      for(const item of value) {\n        out += separator + \"-\\u00A0\" + OutputYaml.formatYAML(item, indentLevel + 2);\n        separator = \"\\n\" + \" \".repeat(indentLevel);\n      }\n      return out;\n    }\n\n    // regular object\n    let out = \"\";\n    let separator = \"\";\n    for(const key of Object.keys(value).sort()) {\n      const item = value[key];\n      out += separator + key + \":\";\n      const str = OutputYaml.formatSimpleYAML(item);\n      if(str !== null) {\n        out += \" \" + str;\n      } else if(Array.isArray(item)) {\n        out += \"\\n\" + \" \".repeat(indentLevel) + OutputYaml.formatYAML(item, indentLevel);\n      } else if(typeof item === \"object\") {\n        out += \"\\n\" + \" \".repeat(indentLevel + indentStep) + OutputYaml.formatYAML(item, indentLevel + indentStep);\n      } else {\n        out += \"x\" + OutputYaml.formatYAML(item, indentLevel + indentStep);\n      }\n      separator = \"\\n\" + \" \".repeat(indentLevel);\n    }\n    return out;\n  }\n\n}","var map = {\n\t\"./index.js\": \"./tests/unit/index.js\",\n\t\"./output.js\": \"./tests/unit/output.js\",\n\t\"./parsecmdline.js\": \"./tests/unit/parsecmdline.js\",\n\t\"./utils.js\": \"./tests/unit/utils.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./tests/unit sync recursive .js$\";","const context = require.context('./', true, /.js$/);\ncontext.keys().forEach(context);\nmodule.exports = context;","const assert = require('chai').assert;\n\nimport {Output} from '../../saltgui/static/scripts/output/Output';\nimport {OutputDocumentation} from '../../saltgui/static/scripts/output/OutputDocumentation';\nimport {OutputJson} from '../../saltgui/static/scripts/output/OutputJson';\nimport {OutputNested} from '../../saltgui/static/scripts/output/OutputNested';\nimport {OutputYaml} from '../../saltgui/static/scripts/output/OutputYaml';\n\ndescribe('Unittests for output.js', function() {\n\n  it('test formatJSON', done => {\n\n    let outputData, result;\n\n    outputData = null;\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"null\");\n\n    outputData = undefined;\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"undefined\");\n\n    outputData = 123;\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"123\");\n\n    outputData = \"txt\";\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"\\\"txt\\\"\");\n\n    outputData = [];\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"[ ]\");\n\n    outputData = [1];\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"[\\n\" +\n      \"    1\\n\" +\n      \"]\");\n\n    outputData = [1,2,3,4,5];\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result,\n      \"[\\n\" +\n      \"    1,\\n\" +\n      \"    2,\\n\" +\n      \"    3,\\n\" +\n      \"    4,\\n\" +\n      \"    5\\n\" +\n      \"]\");\n\n    outputData = {};\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"{ }\");\n\n    // unordered input\n    outputData = {\"a\":11,\"c\":22,\"b\":33};\n    result = OutputJson.formatJSON(outputData);\n    // ordered output\n    assert.equal(result,\n      \"{\\n\" +\n      \"    \\\"a\\\": 11,\\n\" +\n      \"    \\\"b\\\": 33,\\n\" +\n      \"    \\\"c\\\": 22\\n\" +\n      \"}\");\n\n    // a more complex object, unordered input\n    outputData = {\"ip6_interfaces\":{\"lo\":[\"::1\"],\"eth0\":[\"fe80::20d:3aff:fe38:576b\"]}};\n    result = OutputJson.formatJSON(outputData);\n    // ordered output\n    assert.equal(result, \n      \"{\\n\" +\n      \"    \\\"ip6_interfaces\\\": {\\n\" +\n      \"        \\\"eth0\\\": [\\n\" +\n      \"            \\\"fe80::20d:3aff:fe38:576b\\\"\\n\" +\n      \"        ],\\n\" +\n      \"        \\\"lo\\\": [\\n\" +\n      \"            \\\"::1\\\"\\n\" +\n      \"        ]\\n\" +\n      \"    }\\n\" +\n      \"}\");\n\n    done();\n  });\n\n  it('test formatYAML', done => {\n\n    let outputData, result;\n\n    outputData = null;\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"null\");\n\n    outputData = undefined;\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"undefined\");\n\n    outputData = 123;\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"123\");\n\n    outputData = \"txt\";\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"txt\");\n\n    outputData = [];\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"[ ]\");\n\n    outputData = [1];\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"-\\u00A01\");\n\n    outputData = [1,2,3,4,5];\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result,\n      \"-\\u00A01\\n\" +\n      \"-\\u00A02\\n\" +\n      \"-\\u00A03\\n\" +\n      \"-\\u00A04\\n\" +\n      \"-\\u00A05\");\n\n    outputData = {};\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"{ }\");\n\n    // unordered input\n    outputData = {\"a\":11,\"c\":22,\"b\":33};\n    result = OutputYaml.formatYAML(outputData);\n    // ordered output\n    assert.equal(result,\n      \"a: 11\\n\" +\n      \"b: 33\\n\" +\n      \"c: 22\");\n\n    // a more complex object, unordered input\n    outputData = {\"ip6_interfaces\":{\"lo\":[\"::1\"],\"eth0\":[\"fe80::20d:3aff:fe38:576b\"]}};\n    result = OutputYaml.formatYAML(outputData);\n    // ordered output\n    assert.equal(result, \n      \"ip6_interfaces:\\n\" +\n      \"  eth0:\\n\" +\n      \"  -\\u00A0fe80::20d:3aff:fe38:576b\\n\" +\n      \"  lo:\\n\" +\n      \"  -\\u00A0::1\");\n\n    done();\n  });\n\n  it('test formatNESTED', done => {\n\n    let outputData, result;\n\n    outputData = null;\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"None\");\n\n    outputData = undefined;\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"undefined\");\n\n    outputData = 123;\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"123\");\n\n    outputData = \"txt\";\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"txt\");\n\n    outputData = [];\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"\");\n\n    outputData = [1];\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"-\\u00A01\");\n\n    outputData = [1,2,3,4,5];\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result,\n      \"-\\u00A01\\n\" +\n      \"-\\u00A02\\n\" +\n      \"-\\u00A03\\n\" +\n      \"-\\u00A04\\n\" +\n      \"-\\u00A05\");\n\n    outputData = {};\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"\");\n\n    // unordered input\n    outputData = {\"a\":11,\"c\":22,\"b\":33};\n    result = OutputNested.formatNESTED(outputData);\n    // ordered output\n    assert.equal(result,\n      \"a:\\n\" +\n      \"    11\\n\" +\n      \"b:\\n\" +\n      \"    33\\n\" +\n      \"c:\\n\" +\n      \"    22\");\n\n    // a more complex object, unordered input\n    outputData = {\"ip6_interfaces\":{\"lo\":[\"::1\"],\"eth0\":[\"fe80::20d:3aff:fe38:576b\"]}};\n    result = OutputNested.formatNESTED(outputData);\n    // ordered output\n    assert.equal(result, \n      \"ip6_interfaces:\\n\" +\n      \"    ----------\\n\" +\n      \"    eth0:\\n\" +\n      \"        -\\u00A0fe80::20d:3aff:fe38:576b\\n\" +\n      \"    lo:\\n\" +\n      \"        -\\u00A0::1\");\n\n    done();\n  });\n\n  it('test isDocumentationOutput', done => {\n\n    let outputData, result;\n\n    // ok, normal documentation case\n    outputData = { \"host1\": {\"keyword\": \"explanation\"} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isTrue(result);\n\n    // wrong, does not match requested documentation\n    outputData = { \"host1\": {\"keyword\": \"explanation\"} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"another\");\n    assert.isFalse(result);\n\n    // wrong, no resulting documentation\n    outputData = { \"host1\": {\"keyword\": null} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, value is not text\n    outputData = { \"host1\": {\"keyword\": 123} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, returned structure is not a dict\n    outputData = { \"host1\": [\"something\"] };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, returned structure is not a dict\n    outputData = { \"host1\": 123 };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, returned structure is not a dict\n    outputData = { \"host1\": \"hello\" };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // first host ignored, second host ok\n    outputData = { \"host1\": null, \"host2\": {\"keyword\": \"explanation\"} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isTrue(result);\n\n    done();\n  });\n\n  it('test isDocuKeyMatch', done => {\n\n    let result;\n\n    // all documentation\n    result = OutputDocumentation.isDocuKeyMatch(\"anything\", null);\n    assert.isTrue(result);\n\n    // all documentation\n    result = OutputDocumentation.isDocuKeyMatch(\"anything\", \"\");\n    assert.isTrue(result);\n\n    // match one word\n    result = OutputDocumentation.isDocuKeyMatch(\"foo.bar\", \"foo\");\n    assert.isTrue(result);\n\n    // match two words\n    result = OutputDocumentation.isDocuKeyMatch(\"foo.bar\", \"foo.bar\");\n    assert.isTrue(result);\n\n    // wrong match\n    result = OutputDocumentation.isDocuKeyMatch(\"foo\", \"bar\");\n    assert.isFalse(result);\n\n    // wrong match (even though text prefix)\n    result = OutputDocumentation.isDocuKeyMatch(\"food\", \"foo\");\n    assert.isFalse(result);\n\n    done();\n  });\n\n  it('test reduceDocumentationOutput', done => {\n    let out;\n\n    // normal case, hostname replaced by search key\n    out = {\"host1\": {\"topic\": \"explanation\"}};\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // removed irrelevant documentation parts\n    out = {\"host1\": {\"topic\": \"explanation\", \"othertopic\": \"otherexplanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // removed hosts with same answer\n    out = {\"host1\": {\"topic\": \"explanation\"}, \"host2\": {\"topic\": \"explanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // ignore hosts with incorrectly formatted answer\n    out = {\"host1\": null, \"host2\": {\"topic\": \"explanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // ignore hosts with incorrectly formatted answer\n    out = {\"host1\": 123, \"host2\": {\"topic\": \"explanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    done();\n  });\n\n  it('test documentation external link conversion', done => {\n    // external links will be converted to html\n    const container = {\"innerHTML\": \"\"};\n    const output = {\"host1\": {\"pkg.install\": \"`systemd-run(1)`_\\n .. _`systemd-run(1)`: https://www.freedesktop.org/software/systemd/man/systemd-run.html\"}};\n    OutputDocumentation.addDocumentationOutput(container, output);\n    assert.isTrue(\n      container.innerHTML.includes(\n        \"<a href='https://www.freedesktop.org/software/systemd/man/systemd-run.html' target='_blank'><span style='color: yellow'>systemd-run(1)</span></a>\"));\n\n    done();\n  });\n\n\n});\n","const assert = require('chai').assert;\n\n// create a global window so we can unittest the window.<x> functions\nif (!global.window)\n  global.window = new Object({});\n\nrequire('../../saltgui/static/scripts/ParseCommandLine');\n\n\ndescribe('Unittests for parsecmdline.js', function() {\n\n  it('test parseCommandLine', done => {\n    let args = [], params = {}, result;\n\n    // GENERAL ERROR HANDLING\n\n    // null means: it was all ok\n    args = []; params = {};\n    result = window.parseCommandLine(\"test\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"test\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // broken json will return a readable error message\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"test\\\"\", args, params);\n    assert.equal(result, \"No valid dictionary found\");\n\n    // GENERAL WHITESPACE HANDLING\n\n    args = []; params = {};\n    result = window.parseCommandLine(\" name=true\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 0);\n    assert.equal(Object.keys(params).length, 1);\n    assert.equal(params.name, true);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"name=true \", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 0);\n    assert.equal(Object.keys(params).length, 1);\n    assert.equal(params.name, true);\n\n    // NAMED PARAMETERS\n\n    // name-value-pair without value is not ok\n    args = []; params = {};\n    result = window.parseCommandLine(\"test=\", args, params);\n    assert.equal(result, \"Must have value for named parameter 'test'\");\n\n    // name-value-pair without value is not ok\n    // make sure it does not confuse it with furher parameters\n    args = []; params = {};\n    result = window.parseCommandLine(\"test= arg2 arg3\", args, params);\n    assert.equal(result, \"Must have value for named parameter 'test'\");\n\n    // DICTIONARY\n\n    // a regular dictionary\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a\\\":1}\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.deepEqual(args[0], {\"a\":1});\n    assert.equal(Object.keys(params).length, 0);\n\n    // a broken dictionary\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a}\\\":1\", args, params);\n    assert.equal(result, \"No valid dictionary found\");\n\n    // a regular dictionary with } in its name\n    // test that the parser is not confused\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a}\\\":1}\", args, params);\n    assert.equal(result, null);\n\n    // a regular dictionary with } after its value\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a}\\\":1}}\", args, params);\n    assert.equal(result, \"Valid dictionary, but followed by text:}...\");\n\n    // ARRAYS\n\n    // a simple array\n    args = []; params = {};\n    result = window.parseCommandLine(\"[1,2]\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.deepEqual(args[0], [1,2]);\n    assert.equal(Object.keys(params).length, 0);\n\n    // a simple array that is not closed\n    args = []; params = {};\n    result = window.parseCommandLine(\"[1,2\", args, params);\n    assert.equal(result, \"No valid array found\");\n\n    // STRINGS WITHOUT QUOTES\n\n    // a simple string\n    args = []; params = {};\n    result = window.parseCommandLine(\"string\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"string\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // a number that looks like a jobid\n    args = []; params = {};\n    result = window.parseCommandLine(\"20180820003411338317\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"20180820003411338317\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // DOUBLE-QUOTED-STRINGS\n\n    // a simple string\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\\"string\\\"\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"string\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // an unclosed string\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\\"string\", args, params);\n    assert.equal(result, \"No valid double-quoted-string found\");\n\n    // SINGLE-QUOTED-STRINGS (never supported!)\n\n    // a single-quoted string is not supported\n    // it evalueates as a string (the whole thing)\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\'string\\'\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"\\'string\\'\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // a single-quoted string is not supported\n    // it evalueates as a string (the whole thing)\n    // even when that looks rediculous\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\'string\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"\\'string\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // INTEGER\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0);\n    assert.equal(Object.keys(params).length, 0);\n\n    // an integer that almost looks like a jobid, but one digit less\n    args = []; params = {};\n    result = window.parseCommandLine(\"2018082000341133831\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 2018082000341133831);\n    assert.equal(Object.keys(params).length, 0);\n\n    // an integer that almost looks like a jobid, but one digit more\n    args = []; params = {};\n    result = window.parseCommandLine(\"201808200034113383170\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 201808200034113383170);\n    assert.equal(Object.keys(params).length, 0);\n\n    // an integer that almost looks like a jobid, just not a true date-time\n    args = []; params = {};\n    result = window.parseCommandLine(\"20182820003411338317\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 20182820003411338317);\n    assert.equal(Object.keys(params).length, 0);\n\n    // FLOAT\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0.\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\".0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0.0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0.0);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0.0.0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"0.0.0\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\".\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \".\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"-1e99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], -1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"+1e99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e-99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e-99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e+99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e999\", args, params);\n    assert.equal(result, \"Numeric argument has overflowed or is infinity\");\n\n    // NULL\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"null\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"Null\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NULL\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NUll\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"NUll\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // NONE\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"none\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"none\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"None\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NONE\", args, params);\n\n    // GENERAL WHITESPACE HANDLING\n\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"NONE\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NOne\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"NOne\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // BOOLEAN\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"true\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], true);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"True\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], true);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"TRUE\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], true);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"TRue\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"TRue\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"false\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], false);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"False\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], false);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"FALSE\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], false);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"FAlse\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"FAlse\");\n    assert.equal(Object.keys(params).length, 0);\n\n    done();\n  });\n\n});\n","const assert = require('chai').assert;\n\n// create a global window so we can unittest the window.<x> functions\nif (!global.window)\n  global.window = new Object({});\n\nrequire('../../saltgui/static/scripts/Utils');\n\n\ndescribe('Unittests for utils.js', function() {\n  \n  it('test elapsedToString with valid values', done => {\n    const now = new Date();\n    let result;\n\n    result = window.elapsedToString(now);\n    assert.equal(result, \"A few moments ago\");\n\n    now.setSeconds(now.getSeconds() - 110);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"A few minutes ago\");\n\n    now.setMinutes(now.getMinutes() - 1);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"3 minute(s) ago\");\n\n    now.setHours(now.getHours() - 1);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"1 hour(s) ago\");\n\n    now.setHours(now.getHours() - 1);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"2 hour(s) ago\");\n\n    now.setHours(now.getHours() - 24);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"Yesterday\");\n\n    now.setHours(now.getHours() - 240);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"11 days ago\");\n\n    now.setHours(now.getHours() - 2400);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"A long time ago, in a galaxy far, far away\");\n\n    done();\n  });\n\n  it('test elapsedToString with invalid values', done => {\n    const now = new Date();\n    let result;\n\n    // a time in the future?\n    now.setSeconds(now.getSeconds() + 110);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"Magic happened in the future\");\n\n    // and something which is not a date at all\n    result = window.elapsedToString(\"I'm not a date\");\n    assert.equal(result, \"It did happen, when I don't know\");\n\n    done();\n  });\n\n  it('test makeTargetText', done => {\n\n    let result;\n\n    // list of target-types from:\n    // https://docs.saltstack.com/en/latest/ref/clients/index.html#salt.client.LocalClient.cmd\n\n    // glob - Bash glob completion - Default\n    result = window.makeTargetText(\"glob\", \"*\");\n    assert.equal(result, \"*\");\n\n    // pcre - Perl style regular expression\n    result = window.makeTargetText(\"pcre\", \".*\");\n    assert.equal(result, \"pcre .*\");\n\n    // list - Python list of hosts\n    result = window.makeTargetText(\"list\", \"a,b,c\");\n    assert.equal(result, \"a,b,c\");\n\n    // grain - Match based on a grain comparison\n    result = window.makeTargetText(\"grain\", \"os:*\");\n    assert.equal(result, \"grain os:*\");\n\n    // grain_pcre - Grain comparison with a regex\n    result = window.makeTargetText(\"grain_pcre\", \"os:.*\");\n    assert.equal(result, \"grain_pcre os:.*\");\n\n    // pillar - Pillar data comparison\n    result = window.makeTargetText(\"pillar\", \"p1:*\");\n    assert.equal(result, \"pillar p1:*\");\n\n    // pillar_pcre - Pillar data comparison with a regex\n    result = window.makeTargetText(\"pillar_pcre\", \"p1:.*\");\n    assert.equal(result, \"pillar_pcre p1:.*\");\n\n    // nodegroup - Match on nodegroup\n    result = window.makeTargetText(\"nodegroup\", \"ng3\");\n    assert.equal(result, \"nodegroup ng3\");\n\n    // range - Use a Range server for matching\n    result = window.makeTargetText(\"range\", \"a-z\");\n    assert.equal(result, \"range a-z\");\n\n    // compound - Pass a compound match string\n    result = window.makeTargetText(\"compound\", \"webserv* and G@os:Debian or E@web-dc1-srv.*\");\n    assert.equal(result, \"compound webserv* and G@os:Debian or E@web-dc1-srv.*\");\n\n    // ipcidr - Match based on Subnet (CIDR notation) or IPv4 address.\n    result = window.makeTargetText(\"ipcidr\", \"10.0.0.0/24\");\n    assert.equal(result, \"ipcidr 10.0.0.0/24\");\n\n    done();\n  });\n\n});\n","module.exports = require(\"chai\");"],"sourceRoot":""}