{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./saltgui/static/scripts/output/output.js","webpack:///./saltgui/static/scripts/output/outputDocumentation.js","webpack:///./saltgui/static/scripts/output/outputJson.js","webpack:///./saltgui/static/scripts/output/outputNested.js","webpack:///./saltgui/static/scripts/output/outputYaml.js","webpack:///./saltgui/static/scripts/parsecmdline.js","webpack:///./saltgui/static/scripts/utils.js","webpack:///./tests/unit sync .js$","webpack:///./tests/unit/index.js","webpack:///./tests/unit/output.js","webpack:///./tests/unit/parsecmdline.js","webpack:///./tests/unit/utils.js","webpack:///external \"chai\""],"names":["Output","requestedOutputFormat","supportedOutputFormats","window","localStorage","getItem","includes","response","command","startsWith","hostname","extraClass","span","document","createElement","classList","add","innerText","hostResponse","replace","match","patJid","a","href","encodeURIComponent","obj","isOutputFormatAllowed","OutputJson","formatJSON","OutputYaml","formatYAML","OutputNested","formatNESTED","content","formatObject","element","props","prop","hasOwnProperty","keys","Object","length","sort","str","datetime_fraction_digits_str","datetime_fraction_digits_nr","Number","parseInt","isNaN","dotPos","indexOf","substring","outputContainer","minions","addVirtualMinion","Array","isArray","commandArg","trim","isDocumentationOutput","OutputDocumentation","reduceDocumentationOutput","addDocumentationOutput","allDiv","isAsyncOutput","cntResponses","cntMinions","txt","appendChild","masterTriangle","style","addEventListener","_","childNodes","div","childs","getElementsByClassName","tr","evt","MouseEvent","dispatchEvent","nrMultiLineBlocks","isSuccess","retCode","hasProperties","return","hostOutput","hostMultiLine","fndRepresentation","hostClass","hostLabel","getHostnameHtml","getTextOutput","getNormalOutput","commandCmd","isHighStateOutput","OutputHighstate","OutputSaltGuiHighstate","getHighStateLabel","getHighStateOutput","cnt","append","createTextNode","triangle","display","module","exports","key","filterKey","output","result","reduceFilterKey","isDocuKeyMatch","visualKey","selectedMinion","savedDocumentation","out","trimRight","reference","words","split","console","log","link","target","innerHTML","value","JSON","stringify","undefined","indentLevel","indentStep","formatSimpleJSON","separator","elem","repeat","item","indent","msg","prefix","suffix","ret","push","ustring","first_line","line","line_prefix","ind","val","lines","join","needQuotes","formatSimpleYAML","patNull","patBooleanFalse","patBooleanTrue","patInteger","patFloat","parseCommandLine","toRun","args","params","name","firstSpaceChar","firstEqualSign","substr","endChar","objType","p","n","s","parse","err","test","parseFloat","isFinite","elapsedToString","date","secondsPassed","Date","getTime","minutes","Math","round","hours","days","type","className","getQueryParam","vars","hashes","location","slice","hash","hashparts","escape","input","makeTargetText","targetType","targetPattern","returnText","context","require","forEach","assert","describe","it","done","outputData","equal","isTrue","isFalse","deepEqual","container","global","isNull","now","setSeconds","getSeconds","setMinutes","getMinutes","setHours","getHours"],"mappings":"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","file":"tests.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./tests/unit/index.js\");\n","// Functions to turn responses from the salt system into visual information\n// The following variations exist:\n// A) documentation output\n//    one of the responsing nodes is selected\n//    all other nodes are then ignored\n// B) state output\n//    the response is formatted as a list of tasks\n// C) error output\n//    the response is formatted as text\n// D) other output\n//    the response is formatted as json text\n//\n// Additionally the following preparations may be needed:\n// 1) Output from WHEEL functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n// 2) Output from RUNNERS functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n\n\nclass Output {\n\n  static isOutputFormatAllowed(requestedOutputFormat) {\n    let supportedOutputFormats = null;\n    // window.localStorage is not defined during unit testing\n    if(window.localStorage) supportedOutputFormats = window.localStorage.getItem(\"output_formats\");\n    if(supportedOutputFormats === \"undefined\") supportedOutputFormats = null;\n    if(supportedOutputFormats === null) supportedOutputFormats = \"doc,saltguihighstate,json\";\n    return supportedOutputFormats.includes(requestedOutputFormat);\n  }\n\n  // Re-organize the output to let it appear as if the output comes\n  // from a single node called \"RUNNER\" or \"MASTER\".\n  // This way all responses are organized by minion\n  static addVirtualMinion(response, command) {\n\n    if(command.startsWith(\"runners.\")) {\n      // Add a new level in the object\n      return { \"RUNNER\": response };\n    }\n\n    if(command.startsWith(\"wheel.\")) {\n      // Add a new level in the object\n      return { \"WHEEL\": response };\n    }\n\n    // otherwise return the original\n    return response;\n  }\n\n  // compose the host/minion-name label that is shown with each response\n  static getHostnameHtml(hostname, extraClass=\"\") {\n    const span = document.createElement(\"span\");\n    span.classList.add(\"hostname\");\n    if(extraClass) span.classList.add(extraClass);\n    span.innerText = hostname;\n    return span;\n  }\n\n  // the output is only text\n  // note: do not return a text-node\n  static getTextOutput(hostResponse) {\n    // strip trailing whitespace\n    hostResponse = hostResponse.replace(/[ \\r\\n]+$/g, \"\");\n\n    // replace all returned JIDs to links\n    // typically found in the output of an async job\n    // patJid is defined in scripts/parsecmdline.js\n    if(hostResponse.match(patJid)) {\n      const a = document.createElement(\"a\");\n      a.href = \"/job?id=\" + encodeURIComponent(hostResponse);\n      a.innerText = hostResponse;\n      return a;\n    }\n\n    // all regular text\n    const span = document.createElement(\"span\");\n    span.innerText = hostResponse;\n    return span;\n  }\n\n\n  // format an object in the preferred style\n  static formatObject(obj) {\n    if(Output.isOutputFormatAllowed(\"json\")) {\n      return OutputJson.formatJSON(obj);\n    }\n\n    if(Output.isOutputFormatAllowed(\"yaml\")) {\n      return OutputYaml.formatYAML(obj);\n    }\n\n    if(Output.isOutputFormatAllowed(\"nested\")) {\n      return OutputNested.formatNESTED(obj);\n    }\n\n    // when nothing is allowed, JSON is always allowed\n    return OutputJson.formatJSON(obj);\n  }\n\n\n  // this is the default output form\n  // just format the returned objects\n  // note: do not return a text-node\n  static getNormalOutput(hostResponse) {\n    const content = Output.formatObject(hostResponse);\n    const element = document.createElement(content.includes(\"\\n\") ? \"div\" : \"span\");\n    element.innerText = content;\n    return element;\n  }\n\n\n  static hasProperties(obj, props) {\n    if(!obj || typeof obj !== \"object\") {\n      return false;\n    }\n    for(const prop of props) {\n      if(!obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  static isAsyncOutput(response) {\n    let keys = Object.keys(response);\n    if(keys.length !== 2) return false;\n    keys = keys.sort();\n    if(keys[0] !== \"jid\") return false;\n    if(keys[1] !== \"minions\") return false;\n    return true;\n  }\n\n\n  // reformat a date-time string\n  // supported formats:\n  // (time) 19:05:01.561754\n  // (datetime) 2019, Jan 26 19:05:22.808348\n  // current action is (only):\n  // - reduce the number of digits for the fractional seconds\n  static dateTimeStr(str) {\n\n    // no available setting, then return the original\n    const datetime_fraction_digits_str = window.localStorage.getItem(\"datetime_fraction_digits\");\n    if(datetime_fraction_digits_str === null) return str;\n\n    // setting is not a number, return the original\n    let datetime_fraction_digits_nr = Number.parseInt(datetime_fraction_digits_str);\n    if(isNaN(datetime_fraction_digits_nr)) return str;\n\n    // stick to the min/max values without complaining\n    if(datetime_fraction_digits_nr < 0) datetime_fraction_digits_nr = 0;\n    if(datetime_fraction_digits_nr > 6) datetime_fraction_digits_nr = 6;\n\n    // find the fractional part (assume only one '.' in the string)\n    let dotPos = str.indexOf(\".\");\n    if(dotPos < 0) return str;\n\n    // with no digits, also remove the dot\n    if(datetime_fraction_digits_nr === 0) dotPos -= 1;\n\n    return str.substring(0, dotPos + datetime_fraction_digits_nr + 1);\n  }\n\n\n  // the orchestrator for the output\n  // determines what format should be used and uses that\n  static addResponseOutput(outputContainer, minions, response, command) {\n\n    // remove old content\n    outputContainer.innerText = \"\";\n\n    // reformat runner/wheel output into regular output\n    response = Output.addVirtualMinion(response, command);\n\n    if(typeof response === \"string\") {\n      // do not format a string as an object\n      outputContainer.innerText = response;\n      return;\n    }\n\n    if(typeof response !== \"object\" || Array.isArray(response)) {\n      outputContainer.innerText = Output.formatObject(response);\n      return;\n    }\n\n    // it might be documentation\n    const commandArg = command.trim().replace(/^[a-z.]* */i, \"\");\n    const isDocumentationOutput = OutputDocumentation.isDocumentationOutput(Output, response, commandArg);\n    if(isDocumentationOutput) {\n      OutputDocumentation.reduceDocumentationOutput(response, commandArg, commandArg);\n      OutputDocumentation.addDocumentationOutput(outputContainer, response);\n      return;\n    }\n\n    const allDiv = document.createElement(\"div\");\n\n    if(!command.startsWith(\"runners.\") &&\n       !command.startsWith(\"wheel.\") &&\n       !Output.isAsyncOutput(response)) {\n      // runners/wheel responses are not per minion\n      // Do not produce a #response line for async-start confirmation\n      const span = document.createElement(\"span\");\n\n      const cntResponses = Object.keys(response).length;\n      const cntMinions = minions.length;\n\n      let txt;\n\n      if(cntResponses === 1) {\n        txt = cntResponses + \" response\";\n      } else {\n        txt = cntResponses + \" responses\";\n      }\n\n      if(cntMinions !== cntResponses) {\n        txt = txt + \", \" + (cntMinions - cntResponses) + \" no response\";\n      }\n\n      if(cntResponses > 0 && cntMinions !== cntResponses) {\n        txt = txt + \", \" + cntMinions + \" total\";\n      }\n\n      // some room for the triangle\n      txt = txt + \" \";\n\n      span.innerText = txt;\n      allDiv.appendChild(span);\n    }\n\n    const masterTriangle = document.createElement(\"span\");\n    masterTriangle.innerText = \"\\u25bd\";\n    masterTriangle.style = \"cursor: pointer\";\n    allDiv.appendChild(masterTriangle);\n\n    outputContainer.appendChild(allDiv);\n\n    masterTriangle.addEventListener(\"click\", _ => {\n      // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n      // 25BD = WHITE DOWN-POINTING TRIANGLE\n      if(masterTriangle.innerText !== \"\\u25bd\") {\n        masterTriangle.innerText = \"\\u25bd\";\n      } else {\n        masterTriangle.innerText = \"\\u25b7\";\n      }\n\n      for(const div of outputContainer.childNodes) {\n        // only click on items that are collapsible\n        const childs = div.getElementsByClassName(\"triangle\");\n        if(childs.length !== 1) continue;\n        // do not collapse the \"all\" item again\n        const tr = childs[0];\n        if(tr === masterTriangle) continue;\n        // only click on items that are not already the same as \"all\"\n        if(tr.innerText === masterTriangle.innerText) continue;\n        // (un)collapse the minion\n        const evt = new MouseEvent(\"click\", {});\n        tr.dispatchEvent(evt);\n      }\n    });\n\n    let nrMultiLineBlocks = 0;\n\n    // for all other types we consider the output per minion\n    // this is more generic and it simplifies the handlers\n    for(const hostname of minions.sort()) {\n\n      const isSuccess = true;\n      const retCode = 0;\n\n      let hostResponse = response[hostname];\n      if(Output.hasProperties(hostResponse, [\"retcode\", \"return\", \"success\"])) {\n        hostResponse = hostResponse.return;\n      }\n      else if(command.startsWith(\"runner.\") && hostResponse && hostResponse.hasOwnProperty(\"return\")) {\n        hostResponse = hostResponse.return.return;\n      }\n\n      let hostOutput = null;\n      let hostMultiLine = null;\n      let fndRepresentation = false;\n\n      // the standard label is the hostname,\n      // future: colored based on the successflag\n      // future: colored based on the retcode\n      let hostClass = \"host_success\";\n      if(!isSuccess) hostClass = \"host_failure\";\n      if(!response.hasOwnProperty(hostname)) hostClass = \"host_noresponse\";\n      let hostLabel = Output.getHostnameHtml(hostname, hostClass);\n\n      if(!fndRepresentation && !response.hasOwnProperty(hostname)) {\n        hostOutput = Output.getTextOutput(\"(no response)\");\n        fndRepresentation = true;\n      }\n\n      if(!fndRepresentation && typeof hostResponse === \"string\") {\n        hostOutput = Output.getTextOutput(hostResponse);\n        hostMultiLine = hostResponse.includes(\"\\n\");\n        fndRepresentation = true;\n      }\n\n      if(!fndRepresentation && typeof hostResponse !== \"object\") {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = false;\n        fndRepresentation = true;\n      }\n\n      // null is an object, but treat it separatelly\n      if(!fndRepresentation && hostResponse === null) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = false;\n        fndRepresentation = true;\n      }\n\n      // an array is an object, but treat it separatelly\n      if(!fndRepresentation && Array.isArray(hostResponse)) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = hostResponse.length > 0;\n        fndRepresentation = true;\n      }\n\n      // it might be highstate output\n      const commandCmd = command.trim().replace(/ .*/, \"\");\n      const isHighStateOutput = OutputHighstate.isHighStateOutput(commandCmd, hostResponse);\n      // enhanced highstate display\n      if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"saltguihighstate\")) {\n        hostLabel = OutputSaltGuiHighstate.getHighStateLabel(hostname, hostResponse);\n        hostOutput = OutputSaltGuiHighstate.getHighStateOutput(hostResponse);\n        hostMultiLine = true;\n        fndRepresentation = true;\n      }\n      // regular highstate display\n      if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"highstate\")) {\n        hostLabel = OutputHighstate.getHighStateLabel(hostname, hostResponse);\n        hostOutput = OutputHighstate.getHighStateOutput(hostResponse);\n        hostMultiLine = true;\n        fndRepresentation = true;\n      }\n\n      // nothing special? then it is normal output\n      if(!fndRepresentation) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = Object.keys(hostResponse).length > 0;\n      }\n\n      // one response does not need to be collapsible\n      const cnt = Object.keys(response).length;\n      if(cnt === 1) {\n        hostMultiLine = false;\n      }\n\n      if(hostMultiLine) nrMultiLineBlocks += 1;\n\n      // compose the actual output\n      const div = document.createElement(\"div\");\n\n      div.append(hostLabel);\n\n      div.appendChild(document.createTextNode(\": \"));\n\n      // multiple line, collapsible\n      // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n      // 25BD = WHITE DOWN-POINTING TRIANGLE\n      let triangle = null;\n      if(hostMultiLine) {\n        triangle = document.createElement(\"span\");\n        triangle.innerText = \"\\u25bd\";\n        triangle.style = \"cursor: pointer\";\n        triangle.classList.add(\"triangle\");\n        div.appendChild(triangle);\n        div.appendChild(document.createElement(\"br\"));\n\n        triangle.addEventListener(\"click\", _ => {\n          // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n          // 25BD = WHITE DOWN-POINTING TRIANGLE\n          if(triangle.innerText !== \"\\u25bd\") {\n            triangle.innerText = \"\\u25bd\";\n            hostOutput.style.display = \"\";\n          } else {\n            triangle.innerText = \"\\u25b7\";\n            hostOutput.style.display = \"none\";\n          }\n        });\n      }\n\n      div.append(hostOutput);\n\n      outputContainer.append(div);\n    }\n\n    if(nrMultiLineBlocks <= 1) {\n      // No collapsible elements, hide the master\n      // Also hide with 1 collapsible element\n      masterTriangle.style.display = \"none\";\n    }\n\n  }\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = Output;\n","class OutputDocumentation {\n\n  // test whether the returned data matches the requested data\n  static isDocuKeyMatch(key, filterKey) {\n\n    // no filter is always OK\n    if(!filterKey) return true;\n\n    // an exact match is great\n    if(key === filterKey) return true;\n\n    // a true prefix is also ok\n    if(key.startsWith(filterKey + \".\")) return true;\n\n    // no match\n    return false;\n  }\n\n\n  // we only treat output as documentation output when it sticks to strict rules\n  // all minions must return strings\n  // and when its key matches the requested documentation\n  // empty values are allowed due to errors in the documentation\n  // 'output' is needed like this to prevent an error during testing\n  static isDocumentationOutput(output, response, command) {\n\n    if(!output.isOutputFormatAllowed(\"doc\")) return false;\n\n    let result = false;\n\n    // reduce the search key to match the data in the response\n    command = OutputDocumentation.reduceFilterKey(command);\n\n    for(const hostname of Object.keys(response)) {\n\n      const output = response[hostname];\n\n      if(!output) {\n        // some commands do not have help-text\n        // e.g. wheel.key.get_key\n        continue;\n      }\n\n      if(typeof output !== \"object\") {\n        // strange --> no documentation object\n        return false;\n      }\n\n      // arrays are also objects,\n      // but not what we are looking for\n      if(Array.isArray(output)) {\n        return false;\n      }\n\n      for(const key of Object.keys(output)) {\n        // e.g. for \"test.rand_str\"\n        if(output[key] === null) {\n          continue;\n        }\n\n        // but otherwise it must be a (documentation)string\n        if(typeof output[key] !== \"string\") {\n          return false;\n        }\n\n        // is this what we were looking for?\n        if(OutputDocumentation.isDocuKeyMatch(key, command)) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n\n  // reduce the search key to match the data in the response\n  static reduceFilterKey(filterKey) {\n    if(filterKey === \"wheel\") {\n      return \"\";\n    }\n    if(filterKey.startsWith(\"wheel.\")) {\n      // strip the prefix \"wheel.\"\n      return filterKey.substring(6);\n    }\n\n    if(filterKey === \"runners\") {\n      return \"\";\n    }\n    if(filterKey.startsWith(\"runners.\")) {\n      // strip the prefix \"runners.\"\n      return filterKey.substring(8);\n    }\n\n    return filterKey;\n  }\n\n\n  // documentation is requested from all targetted minions\n  // these all return roughly the same output\n  // it is a big waste of screen lines to show the output for each minion\n  // so the output is reduced to the output from a single minion only\n  // this is exactly what the salt commandline also does\n  // Parameters:\n  //   response: the data returned from all minions\n  //   visualKey: the name under which the result must be visualized\n  //              this replaces the traditional minion-name\n  //   filterKey: the prefix (or the full command) that the documentation\n  //              was requested for. The internal functions for WHEEL and\n  //              RUNNERS always return all documentation in that category\n  //              thus that response must be reduced.\n  static reduceDocumentationOutput(response, visualKey, filterKey) {\n    if(!response || typeof response !== \"object\") {\n      // strange --> don't try to fix anything\n      return;\n    }\n\n    // reduce the search key to match the data in the response\n    // i.e. remove the prefixes for \"wheel\" and \"runners\"\n    filterKey = OutputDocumentation.reduceFilterKey(filterKey);\n\n    let selectedMinion = null;\n    for(const hostname of Object.keys(response)) {\n\n      // When we already found the documentation ignore all others\n      if(selectedMinion) {\n        delete response[hostname];\n        continue;\n      }\n\n      // make sure it is an object (instead of e.g. \"false\" for an offline minion)\n      // when it is not, the whole entry is ignored\n      if(!response[hostname] || typeof response[hostname] !== \"object\") {\n        delete response[hostname];\n        continue;\n      }\n\n      // make sure that the entry matches with the requested command or prefix\n      // that's always the case for SYS.DOC output, but not for RUNNERS.DOC.RUNNER\n      // and/or RUNNERS.DOC.WHEEL.\n      const hostResponse = response[hostname];\n      for(const key of Object.keys(hostResponse)) {\n\n        // is this what we were looking for?\n        if(!OutputDocumentation.isDocuKeyMatch(key, filterKey)) {\n          // no match, ignore the whole entry\n          delete hostResponse[key];\n        }\n      }\n\n      // no documentation present (or left) on this minion?\n      // then discard the result of this minion\n      if(Object.keys(hostResponse).length === 0) {\n        delete response[hostname];\n        continue;\n      }\n\n      // we have found documentation output\n      // mark all other documentation for discarding\n      selectedMinion = hostname;\n    }\n\n    if(selectedMinion) {\n      // basically rename the key\n      const savedDocumentation = response[selectedMinion];\n      delete response[selectedMinion];\n      response[visualKey] = savedDocumentation;\n    } else {\n      // prepare a dummy response when no documentation could be found\n      // otherwise leave all documentation responses organized by minion\n      response[\"dummy\"] = { };\n      response[\"dummy\"][visualKey] = \"no documentation found\";\n    }\n  }\n\n  // add the output of a documentation command to the display\n  static addDocumentationOutput(outputContainer, response) {\n\n    // we expect no hostnames present\n    // as it should have been reduced already\n    for(const hostname of Object.keys(response)) {\n\n      const hostResponse = response[hostname];\n\n      for(const key of Object.keys(hostResponse).sort()) {\n\n        let out = hostResponse[key];\n        if(out === null) continue;\n        out = out.trimRight();\n\n        // internal links: remove the \".. rubric::\" prefix\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/[.][.] rubric:: */g, \"\");\n\n        // internal links: remove prefixes like \":mod:\" and \":py:func:\"\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/(:[a-z_]*)*:`/g, \"`\");\n\n        // internal links: remove link indicators in highlighted text\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/[ \\n]*<[^`]*>`/gm, \"`\");\n\n        // turn text into html\n        // e.g. in \"sys.doc cmd.run\"\n        out = out.replace(/&/g, \"&amp;\");\n\n        // turn text into html\n        // e.g. in \"sys.doc state.template\"\n        out = out.replace(/</g, \"&lt;\");\n\n        // turn text into html\n        // e.g. in \"sys.doc state.template\"\n        out = out.replace(/>/g, \"&gt;\");\n\n        // external links\n        // e.g. in \"sys.doc pkg.install\"\n        while(out.includes(\".. _\")) {\n          // take only a line containing \".. _\"\n          const reference = out.\n            replace(/^(.|\\n|\\r)*[.][.] _/m, \"\").\n            replace(/(\\n|\\r)(.|\\n|\\r)*$/m, \"\");\n          const words = reference.split(\": \");\n          if(words.length !== 2) { console.log(\"words\", words); break; }\n          const link = words[0];\n          const target = words[1];\n          // add link to all references\n          while(out.includes(link + \"_\")) {\n            out = out.replace(\n              link + \"_\",\n              \"<a href='\" + target + \"' target='_blank'>\" + link + \"</a>\");\n          }\n          // remove the item from the link table\n          out = out.replace(\".. _\" + reference, \"\");\n        }\n\n        // replace ``......``\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/``([^`]*)``/g, \"<span style='background-color: #575757'>$1</span>\");\n\n        // replace `......`\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/`([^`]*)`/g, \"<span style='color: yellow'>$1</span>\");\n\n        // remove whitespace at end of lines\n        out = out.replace(/  *\\n/gm, \"\");\n\n        // remove duplicate empty lines (usually due to previous rule)\n        out = out.replace(/\\n\\n\\n*/gm, \"\\n\\n\");\n\n        outputContainer.innerHTML +=\n          \"<div><span class='hostname'>\" + key + \"</span>:</br><pre style='height: initial; overflow-y: initial;'>\" + out + \"</pre></div>\";\n      }\n    }\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputDocumentation;\n","class OutputJson {\n\n  // format an object as JSON\n  // returns NULL when it is not a simple object\n  // i.e. no multi-line objects, no indentation here\n  static formatSimpleJSON(value) {\n\n    if(value === null) {\n      // null is an object, but not really\n      // leave that to the builtin function\n      return JSON.stringify(value);\n    }\n\n    if(value === undefined) {\n      // JSON.stringify does not return a string for this\n      // but again a value undefined, we need a string\n      return \"undefined\";\n    }\n\n    if(typeof value !== \"object\") {\n      // a simple type\n      // leave that to the builtin function\n      return JSON.stringify(value);\n    }\n\n    if(Array.isArray(value) && value.length === 0) {\n      // show the brackets for an empty array a bit wider apart\n      return \"[ ]\";\n    }\n\n    if(!Array.isArray(value) && Object.keys(value).length === 0) {\n      // show the brackets for an empty object a bit wider apart\n      return \"{ }\";\n    }\n\n    return null;\n  }\n\n  // format an object as JSON\n  // based on an initial indentation and an indentation increment\n  static formatJSON(value, indentLevel=0) {\n\n    // indent each level with 4 spaces\n    const indentStep = 4;\n\n    let str = OutputJson.formatSimpleJSON(value);\n    if(str !== null) {\n      return str;\n    }\n\n    if(Array.isArray(value)) {\n      // an array\n      // put each element on its own line\n      str = \"[\";\n      let separator = \"\";\n      for(const elem of value) {\n        str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) +\n          OutputJson.formatJSON(elem, indentLevel + indentStep);\n        separator = \",\";\n      }\n      str += \"\\n\" + \" \".repeat(indentLevel) + \"]\";\n      return str;\n    }\n\n    // regular object\n    // put each name+value on its own line\n    const keys = Object.keys(value);\n    str = \"{\";\n    let separator = \"\";\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(value).sort()) {\n      const item = value[key];\n      str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) + \"\\\"\" + key + \"\\\": \" +\n        OutputJson.formatJSON(item, indentLevel + indentStep);\n      separator = \",\";\n    }\n    str += \"\\n\" + \" \".repeat(indentLevel) + \"}\";\n    return str;\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputJson;\n","class OutputNested {\n\n  // heavily inspired by the implementation for NESTED output\n  // as originally implemented in salt/output/nested.py from Salt\n\n  static ustring(indent, msg, prefix='', suffix='') {\n    return \" \".repeat(indent) + prefix + msg + suffix;\n  }\n\n  static display(ret, indent, prefix, out) {\n    if(ret === null) {\n      out.push(OutputNested.ustring(indent, \"None\", prefix));\n    } else if(ret === undefined) {\n      out.push(OutputNested.ustring(indent, \"undefined\", prefix));\n    } else if(typeof ret === \"boolean\" || typeof ret === \"number\") {\n      out.push(OutputNested.ustring(indent, ret, prefix));\n    } else if(typeof ret === \"string\") {\n      let first_line = true;\n      ret = ret.replace(/\\n$/, \"\");\n      for(const line of ret.split(\"\\n\")) {\n        let line_prefix = prefix;\n        if(!first_line)\n          line_prefix = \".\".repeat(prefix.length);\n        out.push(OutputNested.ustring(indent, line, line_prefix));\n        first_line = false;\n      }\n    } else if(typeof ret === \"object\" && Array.isArray(ret)) {\n      for(const ind of ret) {\n        if(typeof ind === \"object\" /* including array */ ) {\n          out.push(OutputNested.ustring(indent, '|_'));\n          let prefix;\n          if(typeof ind === \"object\" && !Array.isArray(ind))\n            prefix = '';\n          else\n            prefix ='-\\u00A0';\n          OutputNested.display(ind, indent + 2, prefix, out);\n        } else {\n          OutputNested.display(ind, indent, '-\\u00A0', out);\n        }\n      }\n    } else if(typeof ret === \"object\") {\n      if(indent) out.push(OutputNested.ustring(indent, '----------'));\n      for(const key of Object.keys(ret).sort()) {\n        const val = ret[key];\n        out.push(OutputNested.ustring(indent, key, prefix, ':'));\n        if(val !== null && val !== \"\") {\n          OutputNested.display(val, indent + 4, '', out);\n        }\n      }\n    }\n    return out;\n  }\n\n  static formatNESTED(value, indentLevel=0) {\n    const lines = OutputNested.display(value, 0, '', []);\n    return lines.join('\\n');\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputNested;\n","class OutputYaml {\n\n  // format an object as YAML\n  // returns NULL when it is not a simple object\n  // i.e. no multi-line objects, no indentation here\n  static formatSimpleYAML(value) {\n\n    if(value === null) {\n      return \"null\";\n    }\n\n    if(value === undefined) {\n      return \"undefined\";\n    }\n\n    if(typeof value === \"boolean\") {\n      return value ? \"true\" : \"false\";\n    }\n\n    if(typeof value === \"string\") {\n      let needQuotes = false;\n\n      // simple number with extra 0's at the start is still a string\n      if(value.match(/^0[0-9]+$/)) return value;\n\n      if(!isNaN(Number(value))) needQuotes = true;\n\n      if(value.match(/^$/)) needQuotes = true;\n\n      if(value.match(/^ /)) needQuotes = true;\n      if(value.match(/ $/)) needQuotes = true;\n\n      if(value.match(/^@/)) needQuotes = true;\n      if(value.match(/^`/)) needQuotes = true;\n      if(value.match(/^%/)) needQuotes = true;\n\n      if(!value.match(/^[-a-z0-9_()./:+ ]+$/i)) needQuotes = true;\n\n      if(!needQuotes) return value;\n      return \"'\" + value + \"'\";\n    }\n\n    if(typeof value !== \"object\") {\n      return \"\" + value;\n    }\n\n    if(Array.isArray(value) && value.length === 0) {\n      // show the brackets for an empty array a bit wider apart\n      return \"[ ]\";\n    }\n\n    if(!Array.isArray(value) && Object.keys(value).length === 0) {\n      // show the brackets for an empty object a bit wider apart\n      return \"{ }\";\n    }\n\n    return null;\n  }\n\n  // format an object as YAML\n  // based on an initial indentation and an indentation increment\n  static formatYAML(value, indentLevel=0) {\n\n    // indent each level with this number of spaces\n    // note that list items are indented with 2 spaces\n    // independently of this setting to match the prefix \"- \"\n    const indentStep = 2;\n\n    const str = OutputYaml.formatSimpleYAML(value);\n    if(str !== null) {\n      return str;\n    }\n\n    if(Array.isArray(value)) {\n      let out = \"\";\n      let separator = \"\";\n      for(const item of value) {\n        out += separator + \"-\\u00A0\" + OutputYaml.formatYAML(item, indentLevel + 2);\n        separator = \"\\n\" + \" \".repeat(indentLevel);\n      }\n      return out;\n    }\n\n    // regular object\n    let out = \"\";\n    let separator = \"\";\n    for(const key of Object.keys(value).sort()) {\n      const item = value[key];\n      out += separator + key + \":\";\n      const str = OutputYaml.formatSimpleYAML(item);\n      if(str !== null) {\n        out += \" \" + str;\n      } else if(Array.isArray(item)) {\n        out += \"\\n\" + \" \".repeat(indentLevel) + OutputYaml.formatYAML(item, indentLevel);\n      } else if(typeof item === \"object\") {\n        out += \"\\n\" + \" \".repeat(indentLevel + indentStep) + OutputYaml.formatYAML(item, indentLevel + indentStep);\n      } else {\n        out += \"x\" + OutputYaml.formatYAML(item, indentLevel + indentStep);\n      }\n      separator = \"\\n\" + \" \".repeat(indentLevel);\n    }\n    return out;\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputYaml;\n","// Function to parse a commandline\n// The line is broken into individual tokens\n// Each token that is recognized as a JS type will get that type\n// Otherwise the token is considered to be a string\n// name-value pairs in the form \"name=value\" are added to the \"params\" dictionary\n// other parameters are added to the \"args\" array\n// e.g.:\n//   test \"1 2 3\" 4 x=7 {\"a\":1, \"b\":2}\n// is a command line of 5 tokens\n//   string: \"test\"\n//   string: \"1 2 3\"\n//   number: 4\n//   number: 7\n//   dictionary: {\"a\":1, \"b\": 2}\n// the array will be filled with 4 elements\n// the dictionary will be filled with one element named \"x\"\n\n\n// note that \"none\" is not case-insensitive, but \"null\" is\nconst patNull = /^(None|null|Null|NULL)$/;\n\nconst patBooleanFalse = /^(false|False|FALSE)$/;\nconst patBooleanTrue = /^(true|True|TRUE)$/;\n\nconst patJid = /^[2-9][0-9][0-9][0-9][01][0-9][0-3][0-9][0-2][0-9][0-5][0-9][0-5][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/;\n\nconst patInteger = /^((0)|([-+]?[1-9][0-9]*))$/;\n\nconst patFloat = /^([-+]?(([0-9]+)|([0-9]+[.][0-9]*)|([0-9]*[.][0-9]+))([eE][-+]?[0-9]+)?)$/;\n\n\nwindow.parseCommandLine = function(toRun, args, params) {\n  // just in case the user typed some extra whitespace\n  // at the start of the line\n  toRun = toRun.trim();\n\n  while(toRun.length > 0)\n  {\n    let name = null;\n\n    let firstSpaceChar = toRun.indexOf(\" \");\n    if(firstSpaceChar < 0)\n      firstSpaceChar = toRun.length;\n    const firstEqualSign = toRun.indexOf(\"=\");\n    if(firstEqualSign >= 0 && firstEqualSign < firstSpaceChar) {\n      // we have the name of a named parameter\n      name = toRun.substr(0, firstEqualSign);\n      toRun = toRun.substr(firstEqualSign + 1);\n      if(toRun === \"\" || toRun[0] === \" \") {\n        return \"Must have value for named parameter '\" + name + \"'\";\n      }\n    }\n\n    // Determine whether the JSON string starts with a known\n    // character for a JSON type\n    let endChar = undefined;\n    let objType = undefined;\n    if(toRun[0] === \"{\") {\n      endChar = \"}\";\n      objType = \"dictionary\";\n    } else if(toRun[0] === \"[\") {\n      endChar = \"]\";\n      objType = \"array\";\n    } else if(toRun[0] === \"\\\"\") {\n      // note that json does not support single-quoted strings\n      endChar = \"\\\"\";\n      objType = \"double-quoted-string\";\n    }\n\n    let value;\n    if(endChar && objType) {\n      // The string starts with a character for a known JSON type\n      let p = 1;\n      while(true) {\n        // Try until the next closing character\n        let n = toRun.indexOf(endChar, p);\n        if(n < 0) {\n          return \"No valid \" + objType + \" found\";\n        }\n\n        // parse what we have found so far\n        // the string ends with a closing character\n        // but that may not be enough, e.g. \"{a:{}\"\n        const s = toRun.substring(0, n + 1);\n        try {\n          value = JSON.parse(s);\n        }\n        catch(err) {\n          // the string that we tried to parse is not valid json\n          // continue to add more text from the input\n          p = n + 1;\n          continue;\n        }\n\n        // the first part of the string is valid JSON\n        n = n + 1;\n        if(n < toRun.length && toRun[n] !== \" \") {\n          return \"Valid \" + objType + \", but followed by text:\" + toRun.substring(n) + \"...\";\n        }\n\n        // valid JSON and not followed by strange characters\n        toRun = toRun.substring(n);\n        break;\n      }\n    } else {\n      // everything else is a string (without quotes)\n      // when we are done, we'll see whether it actually is a number\n      // or any of the known constants\n      let str = \"\";\n      while(toRun.length > 0 && toRun[0] !== \" \") {\n        str += toRun[0];\n        toRun = toRun.substring(1);\n      }\n\n      // try to find whether the string is actually a known constant\n      // or integer or float\n      if(patNull.test(str)) {\n        value = null;\n      } else if(patBooleanFalse.test(str)) {\n        value = false;\n      } else if(patBooleanTrue.test(str)) {\n        value = true;\n      } else if(patJid.test(str)) {\n        // jids look like numbers but must be strings\n        value = str;\n      } else if(patInteger.test(str)) {\n        value = parseInt(str);\n      } else if(patFloat.test(str)) {\n        value = parseFloat(str);\n        if(!isFinite(value)) {\n          return \"Numeric argument has overflowed or is infinity\";\n        }\n      } else {\n        value = str;\n      }\n    }\n\n    if(name !== null) {\n      // named parameter\n      params[name] = value;\n    } else {\n      // anonymous parameter\n      args.push(value);\n    }\n\n    // ignore the whitespace before the next part\n    toRun = toRun.trim();\n  }\n\n  // succesfull (no error message return)\n  return null;\n};\n","window.elapsedToString = function(date) {\n  try {\n    const secondsPassed = (new Date().getTime() / 1000) - (date.getTime() / 1000);\n\n    if(secondsPassed < 0) return \"Magic happened in the future\";\n    if(secondsPassed < 20) return \"A few moments ago\";\n    if(secondsPassed < 120) return \"A few minutes ago\";\n\n    if(secondsPassed < 60 * 60) {\n      const minutes = Math.round(secondsPassed / 60);\n      return minutes + \" minute(s) ago\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24) {\n      const hours = Math.round(secondsPassed / 60 / 60);\n      return hours + \" hour(s) ago\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24 * 2) {\n      return \"Yesterday\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24 * 30) {\n      const days = Math.round(secondsPassed / 60 / 60 / 24);\n      return days + \" days ago\";\n    }\n\n    return \"A long time ago, in a galaxy far, far away\";\n  }\n  catch(err) {\n    //console.error(err);\n    return \"It did happen, when I don't know\";\n  }\n};\n\nwindow.createElement = function(type, className, content) {\n  const element = document.createElement(type);\n  element.classList.add(className);\n  if(content !== \"\") element.innerHTML = content;\n  return element;\n};\n\nwindow.getQueryParam = function(name) {\n  const vars = [];\n  const hashes = window.location.href.slice(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n  for(const hash of hashes) {\n    const hashparts = hash.split(\"=\");\n    vars.push(hashparts[0]);\n    if(hashparts[0] === name) return hashparts[1];\n  }\n  return undefined;\n};\n\nwindow.escape = function(input) {\n  const div = document.createElement(\"div\");\n  div.appendChild(document.createTextNode(input));\n  return div.innerHTML;\n};\n\nwindow.makeTargetText = function(targetType, targetPattern) {\n  // note that \"glob\" is the most common case\n  // when used from the command-line, that target-type\n  // is not even specified.\n  // therefore we suppress that one\n\n  // note that due to bug in 2018.3, all finished jobs\n  // will be shown as if of type \"list\"\n  // therefore we suppress that one\n\n  let returnText = \"\";\n  if(targetType !== \"glob\" && targetType !== \"list\") {\n    returnText = targetType + \" \";\n  }\n  returnText += targetPattern;\n  return returnText;\n};\n","var map = {\n\t\"./index.js\": \"./tests/unit/index.js\",\n\t\"./output.js\": \"./tests/unit/output.js\",\n\t\"./parsecmdline.js\": \"./tests/unit/parsecmdline.js\",\n\t\"./utils.js\": \"./tests/unit/utils.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./tests/unit sync recursive .js$\";","const context = require.context('./', true, /.js$/);\ncontext.keys().forEach(context);\nmodule.exports = context;","const assert = require('chai').assert;\n\nconst Output = require('../../saltgui/static/scripts/output/output');\nconst OutputJson = require('../../saltgui/static/scripts/output/outputJson');\nconst OutputYaml = require('../../saltgui/static/scripts/output/outputYaml');\nconst OutputNested = require('../../saltgui/static/scripts/output/outputNested');\nconst OutputDocumentation = require('../../saltgui/static/scripts/output/outputDocumentation');\n\ndescribe('Unittests for output.js', function() {\n\n  it('test formatJSON', done => {\n\n    let outputData, result;\n\n    outputData = null;\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"null\");\n\n    outputData = undefined;\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"undefined\");\n\n    outputData = 123;\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"123\");\n\n    outputData = \"txt\";\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"\\\"txt\\\"\");\n\n    outputData = [];\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"[ ]\");\n\n    outputData = [1];\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"[\\n\" +\n      \"    1\\n\" +\n      \"]\");\n\n    outputData = [1,2,3,4,5];\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result,\n      \"[\\n\" +\n      \"    1,\\n\" +\n      \"    2,\\n\" +\n      \"    3,\\n\" +\n      \"    4,\\n\" +\n      \"    5\\n\" +\n      \"]\");\n\n    outputData = {};\n    result = OutputJson.formatJSON(outputData);\n    assert.equal(result, \"{ }\");\n\n    // unordered input\n    outputData = {\"a\":11,\"c\":22,\"b\":33};\n    result = OutputJson.formatJSON(outputData);\n    // ordered output\n    assert.equal(result,\n      \"{\\n\" +\n      \"    \\\"a\\\": 11,\\n\" +\n      \"    \\\"b\\\": 33,\\n\" +\n      \"    \\\"c\\\": 22\\n\" +\n      \"}\");\n\n    // a more complex object, unordered input\n    outputData = {\"ip6_interfaces\":{\"lo\":[\"::1\"],\"eth0\":[\"fe80::20d:3aff:fe38:576b\"]}};\n    result = OutputJson.formatJSON(outputData);\n    // ordered output\n    assert.equal(result, \n      \"{\\n\" +\n      \"    \\\"ip6_interfaces\\\": {\\n\" +\n      \"        \\\"eth0\\\": [\\n\" +\n      \"            \\\"fe80::20d:3aff:fe38:576b\\\"\\n\" +\n      \"        ],\\n\" +\n      \"        \\\"lo\\\": [\\n\" +\n      \"            \\\"::1\\\"\\n\" +\n      \"        ]\\n\" +\n      \"    }\\n\" +\n      \"}\");\n\n    done();\n  });\n\n  it('test formatYAML', done => {\n\n    let outputData, result;\n\n    outputData = null;\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"null\");\n\n    outputData = undefined;\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"undefined\");\n\n    outputData = 123;\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"123\");\n\n    outputData = \"txt\";\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"txt\");\n\n    outputData = [];\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"[ ]\");\n\n    outputData = [1];\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"-\\u00A01\");\n\n    outputData = [1,2,3,4,5];\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result,\n      \"-\\u00A01\\n\" +\n      \"-\\u00A02\\n\" +\n      \"-\\u00A03\\n\" +\n      \"-\\u00A04\\n\" +\n      \"-\\u00A05\");\n\n    outputData = {};\n    result = OutputYaml.formatYAML(outputData);\n    assert.equal(result, \"{ }\");\n\n    // unordered input\n    outputData = {\"a\":11,\"c\":22,\"b\":33};\n    result = OutputYaml.formatYAML(outputData);\n    // ordered output\n    assert.equal(result,\n      \"a: 11\\n\" +\n      \"b: 33\\n\" +\n      \"c: 22\");\n\n    // a more complex object, unordered input\n    outputData = {\"ip6_interfaces\":{\"lo\":[\"::1\"],\"eth0\":[\"fe80::20d:3aff:fe38:576b\"]}};\n    result = OutputYaml.formatYAML(outputData);\n    // ordered output\n    assert.equal(result, \n      \"ip6_interfaces:\\n\" +\n      \"  eth0:\\n\" +\n      \"  -\\u00A0fe80::20d:3aff:fe38:576b\\n\" +\n      \"  lo:\\n\" +\n      \"  -\\u00A0::1\");\n\n    done();\n  });\n\n  it('test formatNESTED', done => {\n\n    let outputData, result;\n\n    outputData = null;\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"None\");\n\n    outputData = undefined;\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"undefined\");\n\n    outputData = 123;\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"123\");\n\n    outputData = \"txt\";\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"txt\");\n\n    outputData = [];\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"\");\n\n    outputData = [1];\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"-\\u00A01\");\n\n    outputData = [1,2,3,4,5];\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result,\n      \"-\\u00A01\\n\" +\n      \"-\\u00A02\\n\" +\n      \"-\\u00A03\\n\" +\n      \"-\\u00A04\\n\" +\n      \"-\\u00A05\");\n\n    outputData = {};\n    result = OutputNested.formatNESTED(outputData);\n    assert.equal(result, \"\");\n\n    // unordered input\n    outputData = {\"a\":11,\"c\":22,\"b\":33};\n    result = OutputNested.formatNESTED(outputData);\n    // ordered output\n    assert.equal(result,\n      \"a:\\n\" +\n      \"    11\\n\" +\n      \"b:\\n\" +\n      \"    33\\n\" +\n      \"c:\\n\" +\n      \"    22\");\n\n    // a more complex object, unordered input\n    outputData = {\"ip6_interfaces\":{\"lo\":[\"::1\"],\"eth0\":[\"fe80::20d:3aff:fe38:576b\"]}};\n    result = OutputNested.formatNESTED(outputData);\n    // ordered output\n    assert.equal(result, \n      \"ip6_interfaces:\\n\" +\n      \"    ----------\\n\" +\n      \"    eth0:\\n\" +\n      \"        -\\u00A0fe80::20d:3aff:fe38:576b\\n\" +\n      \"    lo:\\n\" +\n      \"        -\\u00A0::1\");\n\n    done();\n  });\n\n  it('test isDocumentationOutput', done => {\n\n    let outputData, result;\n\n    // ok, normal documentation case\n    outputData = { \"host1\": {\"keyword\": \"explanation\"} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isTrue(result);\n\n    // wrong, does not match requested documentation\n    outputData = { \"host1\": {\"keyword\": \"explanation\"} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"another\");\n    assert.isFalse(result);\n\n    // wrong, no resulting documentation\n    outputData = { \"host1\": {\"keyword\": null} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, value is not text\n    outputData = { \"host1\": {\"keyword\": 123} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, returned structure is not a dict\n    outputData = { \"host1\": [\"something\"] };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, returned structure is not a dict\n    outputData = { \"host1\": 123 };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // wrong, returned structure is not a dict\n    outputData = { \"host1\": \"hello\" };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isFalse(result);\n\n    // first host ignored, second host ok\n    outputData = { \"host1\": null, \"host2\": {\"keyword\": \"explanation\"} };\n    result = OutputDocumentation.isDocumentationOutput(Output, outputData, \"keyword\");\n    assert.isTrue(result);\n\n    done();\n  });\n\n  it('test isDocuKeyMatch', done => {\n\n    let result;\n\n    // all documentation\n    result = OutputDocumentation.isDocuKeyMatch(\"anything\", null);\n    assert.isTrue(result);\n\n    // all documentation\n    result = OutputDocumentation.isDocuKeyMatch(\"anything\", \"\");\n    assert.isTrue(result);\n\n    // match one word\n    result = OutputDocumentation.isDocuKeyMatch(\"foo.bar\", \"foo\");\n    assert.isTrue(result);\n\n    // match two words\n    result = OutputDocumentation.isDocuKeyMatch(\"foo.bar\", \"foo.bar\");\n    assert.isTrue(result);\n\n    // wrong match\n    result = OutputDocumentation.isDocuKeyMatch(\"foo\", \"bar\");\n    assert.isFalse(result);\n\n    // wrong match (even though text prefix)\n    result = OutputDocumentation.isDocuKeyMatch(\"food\", \"foo\");\n    assert.isFalse(result);\n\n    done();\n  });\n\n  it('test reduceDocumentationOutput', done => {\n    let out;\n\n    // normal case, hostname replaced by search key\n    out = {\"host1\": {\"topic\": \"explanation\"}};\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // removed irrelevant documentation parts\n    out = {\"host1\": {\"topic\": \"explanation\", \"othertopic\": \"otherexplanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // removed hosts with same answer\n    out = {\"host1\": {\"topic\": \"explanation\"}, \"host2\": {\"topic\": \"explanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // ignore hosts with incorrectly formatted answer\n    out = {\"host1\": null, \"host2\": {\"topic\": \"explanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    // ignore hosts with incorrectly formatted answer\n    out = {\"host1\": 123, \"host2\": {\"topic\": \"explanation\"} };\n    OutputDocumentation.reduceDocumentationOutput(out, \"DUMMY\", \"topic\");\n    assert.deepEqual(out, {\"DUMMY\": {\"topic\": \"explanation\"}});\n\n    done();\n  });\n\n  it('test documentation external link conversion', done => {\n    // external links will be converted to html\n    const container = {\"innerHTML\": \"\"};\n    const output = {\"host1\": {\"pkg.install\": \"`systemd-run(1)`_\\n .. _`systemd-run(1)`: https://www.freedesktop.org/software/systemd/man/systemd-run.html\"}};\n    OutputDocumentation.addDocumentationOutput(container, output);\n    assert.isTrue(\n      container.innerHTML.includes(\n        \"<a href='https://www.freedesktop.org/software/systemd/man/systemd-run.html' target='_blank'><span style='color: yellow'>systemd-run(1)</span></a>\"));\n\n    done();\n  });\n\n\n});\n","const assert = require('chai').assert;\n\n// create a global window so we can unittest the window.<x> functions\nif (!global.window)\n  global.window = new Object({});\n\nrequire('../../saltgui/static/scripts/parsecmdline');\n\n\ndescribe('Unittests for parsecmdline.js', function() {\n\n  it('test parseCommandLine', done => {\n    let args = [], params = {}, result;\n\n    // GENERAL ERROR HANDLING\n\n    // null means: it was all ok\n    args = []; params = {};\n    result = window.parseCommandLine(\"test\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"test\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // broken json will return a readable error message\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"test\\\"\", args, params);\n    assert.equal(result, \"No valid dictionary found\");\n\n    // GENERAL WHITESPACE HANDLING\n\n    args = []; params = {};\n    result = window.parseCommandLine(\" name=true\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 0);\n    assert.equal(Object.keys(params).length, 1);\n    assert.equal(params.name, true);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"name=true \", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 0);\n    assert.equal(Object.keys(params).length, 1);\n    assert.equal(params.name, true);\n\n    // NAMED PARAMETERS\n\n    // name-value-pair without value is not ok\n    args = []; params = {};\n    result = window.parseCommandLine(\"test=\", args, params);\n    assert.equal(result, \"Must have value for named parameter 'test'\");\n\n    // name-value-pair without value is not ok\n    // make sure it does not confuse it with furher parameters\n    args = []; params = {};\n    result = window.parseCommandLine(\"test= arg2 arg3\", args, params);\n    assert.equal(result, \"Must have value for named parameter 'test'\");\n\n    // DICTIONARY\n\n    // a regular dictionary\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a\\\":1}\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.deepEqual(args[0], {\"a\":1});\n    assert.equal(Object.keys(params).length, 0);\n\n    // a broken dictionary\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a}\\\":1\", args, params);\n    assert.equal(result, \"No valid dictionary found\");\n\n    // a regular dictionary with } in its name\n    // test that the parser is not confused\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a}\\\":1}\", args, params);\n    assert.equal(result, null);\n\n    // a regular dictionary with } after its value\n    args = []; params = {};\n    result = window.parseCommandLine(\"{\\\"a}\\\":1}}\", args, params);\n    assert.equal(result, \"Valid dictionary, but followed by text:}...\");\n\n    // ARRAYS\n\n    // a simple array\n    args = []; params = {};\n    result = window.parseCommandLine(\"[1,2]\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.deepEqual(args[0], [1,2]);\n    assert.equal(Object.keys(params).length, 0);\n\n    // a simple array that is not closed\n    args = []; params = {};\n    result = window.parseCommandLine(\"[1,2\", args, params);\n    assert.equal(result, \"No valid array found\");\n\n    // STRINGS WITHOUT QUOTES\n\n    // a simple string\n    args = []; params = {};\n    result = window.parseCommandLine(\"string\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"string\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // a number that looks like a jobid\n    args = []; params = {};\n    result = window.parseCommandLine(\"20180820003411338317\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"20180820003411338317\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // DOUBLE-QUOTED-STRINGS\n\n    // a simple string\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\\"string\\\"\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"string\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // an unclosed string\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\\"string\", args, params);\n    assert.equal(result, \"No valid double-quoted-string found\");\n\n    // SINGLE-QUOTED-STRINGS (never supported!)\n\n    // a single-quoted string is not supported\n    // it evalueates as a string (the whole thing)\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\'string\\'\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"\\'string\\'\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // a single-quoted string is not supported\n    // it evalueates as a string (the whole thing)\n    // even when that looks rediculous\n    args = []; params = {};\n    result = window.parseCommandLine(\"\\'string\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"\\'string\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // INTEGER\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0);\n    assert.equal(Object.keys(params).length, 0);\n\n    // an integer that almost looks like a jobid, but one digit less\n    args = []; params = {};\n    result = window.parseCommandLine(\"2018082000341133831\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 2018082000341133831);\n    assert.equal(Object.keys(params).length, 0);\n\n    // an integer that almost looks like a jobid, but one digit more\n    args = []; params = {};\n    result = window.parseCommandLine(\"201808200034113383170\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 201808200034113383170);\n    assert.equal(Object.keys(params).length, 0);\n\n    // an integer that almost looks like a jobid, just not a true date-time\n    args = []; params = {};\n    result = window.parseCommandLine(\"20182820003411338317\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 20182820003411338317);\n    assert.equal(Object.keys(params).length, 0);\n\n    // FLOAT\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0.\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\".0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0.0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 0.0);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"0.0.0\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"0.0.0\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\".\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \".\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"-1e99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], -1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"+1e99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e-99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e-99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e+99\", args, params);\n    assert.equal(result, null);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], 1e99);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"1e999\", args, params);\n    assert.equal(result, \"Numeric argument has overflowed or is infinity\");\n\n    // NULL\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"null\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"Null\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NULL\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NUll\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"NUll\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // NONE\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"none\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"none\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"None\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], null);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NONE\", args, params);\n\n    // GENERAL WHITESPACE HANDLING\n\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"NONE\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"NOne\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"NOne\");\n    assert.equal(Object.keys(params).length, 0);\n\n    // BOOLEAN\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"true\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], true);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"True\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], true);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"TRUE\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], true);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"TRue\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"TRue\");\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"false\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], false);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"False\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], false);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"FALSE\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], false);\n    assert.equal(Object.keys(params).length, 0);\n\n    args = []; params = {};\n    result = window.parseCommandLine(\"FAlse\", args, params);\n    assert.isNull(result);\n    assert.equal(args.length, 1);\n    assert.equal(args[0], \"FAlse\");\n    assert.equal(Object.keys(params).length, 0);\n\n    done();\n  });\n\n});\n","const assert = require('chai').assert;\n\n// create a global window so we can unittest the window.<x> functions\nif (!global.window)\n  global.window = new Object({});\n\nrequire('../../saltgui/static/scripts/utils');\n\n\ndescribe('Unittests for utils.js', function() {\n  \n  it('test elapsedToString with valid values', done => {\n    const now = new Date();\n    let result;\n\n    result = window.elapsedToString(now);\n    assert.equal(result, \"A few moments ago\");\n\n    now.setSeconds(now.getSeconds() - 110);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"A few minutes ago\");\n\n    now.setMinutes(now.getMinutes() - 1);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"3 minute(s) ago\");\n\n    now.setHours(now.getHours() - 1);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"1 hour(s) ago\");\n\n    now.setHours(now.getHours() - 1);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"2 hour(s) ago\");\n\n    now.setHours(now.getHours() - 24);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"Yesterday\");\n\n    now.setHours(now.getHours() - 240);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"11 days ago\");\n\n    now.setHours(now.getHours() - 2400);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"A long time ago, in a galaxy far, far away\");\n\n    done();\n  });\n\n  it('test elapsedToString with invalid values', done => {\n    const now = new Date();\n    let result;\n\n    // a time in the future?\n    now.setSeconds(now.getSeconds() + 110);\n    result = window.elapsedToString(now);\n    assert.equal(result, \"Magic happened in the future\");\n\n    // and something which is not a date at all\n    result = window.elapsedToString(\"I'm not a date\");\n    assert.equal(result, \"It did happen, when I don't know\");\n\n    done();\n  });\n\n  it('test makeTargetText', done => {\n\n    let result;\n\n    // list of target-types from:\n    // https://docs.saltstack.com/en/latest/ref/clients/index.html#salt.client.LocalClient.cmd\n\n    // glob - Bash glob completion - Default\n    result = window.makeTargetText(\"glob\", \"*\");\n    assert.equal(result, \"*\");\n\n    // pcre - Perl style regular expression\n    result = window.makeTargetText(\"pcre\", \".*\");\n    assert.equal(result, \"pcre .*\");\n\n    // list - Python list of hosts\n    result = window.makeTargetText(\"list\", \"a,b,c\");\n    assert.equal(result, \"a,b,c\");\n\n    // grain - Match based on a grain comparison\n    result = window.makeTargetText(\"grain\", \"os:*\");\n    assert.equal(result, \"grain os:*\");\n\n    // grain_pcre - Grain comparison with a regex\n    result = window.makeTargetText(\"grain_pcre\", \"os:.*\");\n    assert.equal(result, \"grain_pcre os:.*\");\n\n    // pillar - Pillar data comparison\n    result = window.makeTargetText(\"pillar\", \"p1:*\");\n    assert.equal(result, \"pillar p1:*\");\n\n    // pillar_pcre - Pillar data comparison with a regex\n    result = window.makeTargetText(\"pillar_pcre\", \"p1:.*\");\n    assert.equal(result, \"pillar_pcre p1:.*\");\n\n    // nodegroup - Match on nodegroup\n    result = window.makeTargetText(\"nodegroup\", \"ng3\");\n    assert.equal(result, \"nodegroup ng3\");\n\n    // range - Use a Range server for matching\n    result = window.makeTargetText(\"range\", \"a-z\");\n    assert.equal(result, \"range a-z\");\n\n    // compound - Pass a compound match string\n    result = window.makeTargetText(\"compound\", \"webserv* and G@os:Debian or E@web-dc1-srv.*\");\n    assert.equal(result, \"compound webserv* and G@os:Debian or E@web-dc1-srv.*\");\n\n    // ipcidr - Match based on Subnet (CIDR notation) or IPv4 address.\n    result = window.makeTargetText(\"ipcidr\", \"10.0.0.0/24\");\n    assert.equal(result, \"ipcidr 10.0.0.0/24\");\n\n    done();\n  });\n\n});\n","module.exports = require(\"chai\");"],"sourceRoot":""}