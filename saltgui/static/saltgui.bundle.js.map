{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./saltgui/static/scripts/index.js","webpack:///./saltgui/static/scripts sync .js$","webpack:///./saltgui/static/scripts/documentation.js","webpack:///./saltgui/static/scripts/output/output.js","webpack:///./saltgui/static/scripts/output/outputDocumentation.js","webpack:///./saltgui/static/scripts/output/outputHighstate.js","webpack:///./saltgui/static/scripts/output/outputJson.js","webpack:///./saltgui/static/scripts/output/outputNested.js","webpack:///./saltgui/static/scripts/output/outputSaltGuiHighstate.js","webpack:///./saltgui/static/scripts/output/outputYaml.js","webpack:///./saltgui/static/scripts/parsecmdline.js","webpack:///./saltgui/static/scripts/router.js","webpack:///./saltgui/static/scripts/utils.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","context","require","keys","forEach","map","./api.js","./commandbox.js","./documentation.js","./dropdown.js","./index.js","./output/output.js","./output/outputDocumentation.js","./output/outputHighstate.js","./output/outputJson.js","./output/outputNested.js","./output/outputSaltGuiHighstate.js","./output/outputYaml.js","./parsecmdline.js","./router.js","./routes/grains.js","./routes/grainsminion.js","./routes/job.js","./routes/jobs.js","./routes/keys.js","./routes/login.js","./routes/minions.js","./routes/page.js","./routes/pillars.js","./routes/pillarsminion.js","./routes/route.js","./routes/schedules.js","./routes/schedulesminion.js","./routes/templates.js","./runtype.js","./targettype.js","./utils.js","webpackContext","req","id","webpackContextResolve","e","Error","code","resolve","Documentation","commandbox","_classCallCheck","this","_manualRunMenuSysDocRun","cmdmenu","addMenuItem","_manualRunMenuSysDocPrepare","menuitem","target","document","querySelector","command","trim","replace","match","startsWith","substring","innerText","style","display","_this","button","disabled","output","docCommand","dummyCommand","tgtType","TargetType","menuTargetType","_value","_getRunParams","then","response","_onRunReturn","return","Output","requestedOutputFormat","supportedOutputFormats","window","localStorage","getItem","includes","RUNNER","WHEEL","hostname","extraClass","arguments","length","undefined","span","createElement","classList","add","hostResponse","patJid","a","href","encodeURIComponent","obj","isOutputFormatAllowed","OutputJson","formatJSON","OutputYaml","formatYAML","OutputNested","formatNESTED","content","formatObject","element","props","_typeof","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","prop","err","sort","str","datetime_fraction_digits_str","datetime_fraction_digits_nr","Number","parseInt","isNaN","dotPos","indexOf","outputContainer","minions","addVirtualMinion","Array","isArray","commandArg","OutputDocumentation","isDocumentationOutput","reduceDocumentationOutput","addDocumentationOutput","allDiv","isAsyncOutput","txt","cntResponses","cntMinions","appendChild","masterTriangle","addEventListener","_","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","childNodes","childs","getElementsByClassName","tr","evt","MouseEvent","dispatchEvent","nrMultiLineBlocks","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","hasProperties","hostOutput","hostMultiLine","fndRepresentation","hostClass","hostLabel","getHostnameHtml","getTextOutput","getNormalOutput","commandCmd","isHighStateOutput","OutputHighstate","OutputSaltGuiHighstate","getHighStateLabel","getHighStateOutput","div","append","createTextNode","triangle","_iterator3","filterKey","result","reduceFilterKey","_arr","_i","_arr2","_i2","isDocuKeyMatch","visualKey","selectedMinion","_arr3","_i3","_arr4","_i4","savedDocumentation","_arr5","_i5","out","trimRight","reference","words","split","console","log","link","innerHTML","millis","concat","anyFailures","anySkips","task","tasks","taskKey","___key___","push","b","__run_num__","succeeded","failed","skipped","total_millis","changes","taskDiv","color","__id__","__sls__","components","indent","comment","JSON","stringify","change","lines","line","old","new","taskkey","start_time","Math","round","duration","getDurationClause","item","total","indentLevel","formatSimpleJSON","separator","elem","repeat","msg","prefix","suffix","ret","ustring","first_line","line_prefix","ind","val","join","idx","addChangesInfo","dateTimeStr","needQuotes","formatSimpleYAML","patNull","patBooleanFalse","patBooleanTrue","patInteger","patFloat","parseCommandLine","toRun","args","params","firstSpaceChar","firstEqualSign","substr","endChar","objType","parse","test","parseFloat","isFinite","Router","api","API","CommandBox","currentRoute","routes","registerRoute","LoginRoute","MinionsRoute","KeysRoute","GrainsRoute","GrainsMinionRoute","SchedulesRoute","SchedulesMinionRoute","PillarsRoute","PillarsMinionRoute","JobRoute","JobsRoute","TemplatesRoute","templatesText","_registerEventListeners","isAuthenticated","valid_session","goTo","location","pathname","search","catch","error","_this2","router","logout","route","onRegister","path","switchingRoute","getPath","history","pushState","showRoute","getPageElement","minionMenuItem","getElementById","jobsMenuItem","from","querySelectorAll","remove","elem1","getMenuItemElement1","elem2","getMenuItemElement2","afterLoad","hideRoute","title","getName","className","onShow","setTimeout","onHide","elapsedToString","date","secondsPassed","Date","getTime","type","getQueryParam","vars","hashes","slice","hashparts","escape","input","makeTargetText","targetType","targetPattern","returnText"],"mappings":"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","file":"saltgui.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const context = require.context('./', true, /.js$/);\ncontext.keys().forEach(context);\nmodule.exports = context;","var map = {\n\t\"./api.js\": 2,\n\t\"./commandbox.js\": 3,\n\t\"./documentation.js\": 4,\n\t\"./dropdown.js\": 5,\n\t\"./index.js\": 0,\n\t\"./output/output.js\": 6,\n\t\"./output/outputDocumentation.js\": 7,\n\t\"./output/outputHighstate.js\": 8,\n\t\"./output/outputJson.js\": 9,\n\t\"./output/outputNested.js\": 10,\n\t\"./output/outputSaltGuiHighstate.js\": 11,\n\t\"./output/outputYaml.js\": 12,\n\t\"./parsecmdline.js\": 13,\n\t\"./router.js\": 14,\n\t\"./routes/grains.js\": 15,\n\t\"./routes/grainsminion.js\": 16,\n\t\"./routes/job.js\": 17,\n\t\"./routes/jobs.js\": 18,\n\t\"./routes/keys.js\": 19,\n\t\"./routes/login.js\": 20,\n\t\"./routes/minions.js\": 21,\n\t\"./routes/page.js\": 22,\n\t\"./routes/pillars.js\": 23,\n\t\"./routes/pillarsminion.js\": 24,\n\t\"./routes/route.js\": 25,\n\t\"./routes/schedules.js\": 26,\n\t\"./routes/schedulesminion.js\": 27,\n\t\"./routes/templates.js\": 28,\n\t\"./runtype.js\": 29,\n\t\"./targettype.js\": 30,\n\t\"./utils.js\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1;","// documentation utilities\n\nclass Documentation {\n\n  // formatting of the documentation is done as a regular output type\n  // that is therefore in output.js\n\n  constructor (commandbox) {\n    this.commandbox = commandbox;\n    this._manualRunMenuSysDocRun = this._manualRunMenuSysDocRun.bind(this);\n\n    commandbox.cmdmenu.addMenuItem(\n      this._manualRunMenuSysDocPrepare,\n      this._manualRunMenuSysDocRun);\n  }\n\n  _manualRunMenuSysDocPrepare(menuitem) {\n    let target = document.querySelector(\".run-command #target\").value;\n    target = target ? \"target\" : \"all minions\";\n    let command = document.querySelector(\".run-command #command\").value;\n    // remove the command arguments\n    command = command.trim().replace(/ .*/, \"\");\n    command = command.trim().replace(/[.]*$/, \"\");\n    if(!command.match(/^[a-z_][a-z0-9_.]*$/i)) {\n      // When it is not a command, don't treat it as a command.\n      // This RE still allows some illegal command formats, but\n      // that is something that sys.doc/runners.doc can handle.\n      menuitem.style.display = \"none\";\n    } else if(!command) {\n      // this spot was reserved for `sys.doc` without parameters\n      // but that is far too slow for normal use\n      menuitem.style.display = \"none\";\n    } else if(command === \"runners\" || command.startsWith(\"runners.\")) {\n      // actually \"command\" is not passed, but we select that part of the actual result\n      // because `runners.doc.runner` always returns all documentation for \"runners\"\n      command = command.substring(8);\n      if(command) command = \" \" + command;\n      menuitem.innerText = \"Run 'runners.doc.runner\" + command + \"'\";\n      menuitem.style.display = \"block\";\n    } else if(command === \"wheel\" || command.startsWith(\"wheel.\")) {\n      // actually \"command\" is not passed, but we select that part of the actual result\n      // because `runners.doc.wheel` always returns all documentation for \"wheel\"\n      command = command.substring(6);\n      if(command) command = \" \" + command;\n      menuitem.innerText = \"Run 'runners.doc.wheel\" + command + \"'\";\n      menuitem.style.display = \"block\";\n    } else {\n      menuitem.innerText = \"Run 'sys.doc \" + command + \"' on \" + target;\n      menuitem.style.display = \"block\";\n    }\n  }\n\n  _manualRunMenuSysDocRun() {\n    const button = document.querySelector(\".run-command input[type='submit']\");\n    if(button.disabled) return;\n    const output = document.querySelector(\".run-command pre\");\n\n    let target = document.querySelector(\".run-command #target\").value;\n    // the help text is taken from the first minion that answers\n    // when no target is selected, just ask all minions\n    if(target === \"\") target = \"*\";\n\n    // do not use the command-parser\n    let command = document.querySelector(\".run-command #command\").value;\n    // remove arguments\n    command = command.trim().replace(/ .*/, \"\");\n    // remove trailing dots\n    command = command.trim().replace(/[.]*$/, \"\");\n    // command can be empty here (but the gui prevents that)\n\n    button.disabled = true;\n    output.innerText = \"Loading...\";\n\n    let docCommand;\n    let dummyCommand;\n    if(command === \"runners\" || command.startsWith(\"runners.\")) {\n      // runners command. docCommand is WITHOUT further arguments\n      docCommand = \"runners.doc.runner\";\n      dummyCommand = \"runners.doc.runner \" + command;\n    } else if(command === \"wheel\" || command.startsWith(\"wheel.\")) {\n      // wheel command. docCommand is WITHOUT further arguments\n      docCommand = \"runners.doc.wheel\";\n      dummyCommand = \"runners.doc.wheel \" + command;\n    } else {\n      // regular command. docCommand is WITH further argument\n      docCommand = \"sys.doc \" + command;\n      dummyCommand = \"sys.doc \" + command;\n    }\n\n    const tgtType = TargetType.menuTargetType._value;\n\n    this.commandbox._getRunParams(tgtType, target, docCommand).then(\n      response => this.commandbox._onRunReturn(response.return[0], dummyCommand)\n    );\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = Documentation;\n","// Functions to turn responses from the salt system into visual information\n// The following variations exist:\n// A) documentation output\n//    one of the responsing nodes is selected\n//    all other nodes are then ignored\n// B) state output\n//    the response is formatted as a list of tasks\n// C) error output\n//    the response is formatted as text\n// D) other output\n//    the response is formatted as json text\n//\n// Additionally the following preparations may be needed:\n// 1) Output from WHEEL functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n// 2) Output from RUNNERS functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n\n\nclass Output {\n\n  static isOutputFormatAllowed(requestedOutputFormat) {\n    let supportedOutputFormats = null;\n    // window.localStorage is not defined during unit testing\n    if(window.localStorage) supportedOutputFormats = window.localStorage.getItem(\"output_formats\");\n    if(supportedOutputFormats === \"undefined\") supportedOutputFormats = null;\n    if(supportedOutputFormats === null) supportedOutputFormats = \"doc,saltguihighstate,json\";\n    return supportedOutputFormats.includes(requestedOutputFormat);\n  }\n\n  // Re-organize the output to let it appear as if the output comes\n  // from a single node called \"RUNNER\" or \"MASTER\".\n  // This way all responses are organized by minion\n  static addVirtualMinion(response, command) {\n\n    if(command.startsWith(\"runners.\")) {\n      // Add a new level in the object\n      return { \"RUNNER\": response };\n    }\n\n    if(command.startsWith(\"wheel.\")) {\n      // Add a new level in the object\n      return { \"WHEEL\": response };\n    }\n\n    // otherwise return the original\n    return response;\n  }\n\n  // compose the host/minion-name label that is shown with each response\n  static getHostnameHtml(hostname, extraClass=\"\") {\n    const span = document.createElement(\"span\");\n    span.classList.add(\"hostname\");\n    if(extraClass) span.classList.add(extraClass);\n    span.innerText = hostname;\n    return span;\n  }\n\n  // the output is only text\n  // note: do not return a text-node\n  static getTextOutput(hostResponse) {\n    // strip trailing whitespace\n    hostResponse = hostResponse.replace(/[ \\r\\n]+$/g, \"\");\n\n    // replace all returned JIDs to links\n    // typically found in the output of an async job\n    // patJid is defined in scripts/parsecmdline.js\n    if(hostResponse.match(patJid)) {\n      const a = document.createElement(\"a\");\n      a.href = \"/job?id=\" + encodeURIComponent(hostResponse);\n      a.innerText = hostResponse;\n      return a;\n    }\n\n    // all regular text\n    const span = document.createElement(\"span\");\n    span.innerText = hostResponse;\n    return span;\n  }\n\n\n  // format an object in the preferred style\n  static formatObject(obj) {\n    if(Output.isOutputFormatAllowed(\"json\")) {\n      return OutputJson.formatJSON(obj);\n    }\n\n    if(Output.isOutputFormatAllowed(\"yaml\")) {\n      return OutputYaml.formatYAML(obj);\n    }\n\n    if(Output.isOutputFormatAllowed(\"nested\")) {\n      return OutputNested.formatNESTED(obj);\n    }\n\n    // when nothing is allowed, JSON is always allowed\n    return OutputJson.formatJSON(obj);\n  }\n\n\n  // this is the default output form\n  // just format the returned objects\n  // note: do not return a text-node\n  static getNormalOutput(hostResponse) {\n    const content = Output.formatObject(hostResponse);\n    const element = document.createElement(content.includes(\"\\n\") ? \"div\" : \"span\");\n    element.innerText = content;\n    return element;\n  }\n\n\n  static hasProperties(obj, props) {\n    if(!obj || typeof obj !== \"object\") {\n      return false;\n    }\n    for(const prop of props) {\n      if(!obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  static isAsyncOutput(response) {\n    let keys = Object.keys(response);\n    if(keys.length !== 2) return false;\n    keys = keys.sort();\n    if(keys[0] !== \"jid\") return false;\n    if(keys[1] !== \"minions\") return false;\n    return true;\n  }\n\n\n  // reformat a date-time string\n  // supported formats:\n  // (time) 19:05:01.561754\n  // (datetime) 2019, Jan 26 19:05:22.808348\n  // current action is (only):\n  // - reduce the number of digits for the fractional seconds\n  static dateTimeStr(str) {\n\n    // no available setting, then return the original\n    const datetime_fraction_digits_str = window.localStorage.getItem(\"datetime_fraction_digits\");\n    if(datetime_fraction_digits_str === null) return str;\n\n    // setting is not a number, return the original\n    let datetime_fraction_digits_nr = Number.parseInt(datetime_fraction_digits_str);\n    if(isNaN(datetime_fraction_digits_nr)) return str;\n\n    // stick to the min/max values without complaining\n    if(datetime_fraction_digits_nr < 0) datetime_fraction_digits_nr = 0;\n    if(datetime_fraction_digits_nr > 6) datetime_fraction_digits_nr = 6;\n\n    // find the fractional part (assume only one '.' in the string)\n    let dotPos = str.indexOf(\".\");\n    if(dotPos < 0) return str;\n\n    // with no digits, also remove the dot\n    if(datetime_fraction_digits_nr === 0) dotPos -= 1;\n\n    return str.substring(0, dotPos + datetime_fraction_digits_nr + 1);\n  }\n\n\n  // the orchestrator for the output\n  // determines what format should be used and uses that\n  static addResponseOutput(outputContainer, minions, response, command) {\n\n    // remove old content\n    outputContainer.innerText = \"\";\n\n    // reformat runner/wheel output into regular output\n    response = Output.addVirtualMinion(response, command);\n\n    if(typeof response === \"string\") {\n      // do not format a string as an object\n      outputContainer.innerText = response;\n      return;\n    }\n\n    if(typeof response !== \"object\" || Array.isArray(response)) {\n      outputContainer.innerText = Output.formatObject(response);\n      return;\n    }\n\n    // it might be documentation\n    const commandArg = command.trim().replace(/^[a-z.]* */i, \"\");\n    const isDocumentationOutput = OutputDocumentation.isDocumentationOutput(Output, response, commandArg);\n    if(isDocumentationOutput) {\n      OutputDocumentation.reduceDocumentationOutput(response, commandArg, commandArg);\n      OutputDocumentation.addDocumentationOutput(outputContainer, response);\n      return;\n    }\n\n    const allDiv = document.createElement(\"div\");\n\n    if(!command.startsWith(\"runners.\") &&\n       !command.startsWith(\"wheel.\") &&\n       !Output.isAsyncOutput(response)) {\n      // runners/wheel responses are not per minion\n      // Do not produce a #response line for async-start confirmation\n      const span = document.createElement(\"span\");\n\n      const cntResponses = Object.keys(response).length;\n      const cntMinions = minions.length;\n\n      let txt;\n\n      if(cntResponses === 1) {\n        txt = cntResponses + \" response\";\n      } else {\n        txt = cntResponses + \" responses\";\n      }\n\n      if(cntMinions !== cntResponses) {\n        txt = txt + \", \" + (cntMinions - cntResponses) + \" no response\";\n      }\n\n      if(cntResponses > 0 && cntMinions !== cntResponses) {\n        txt = txt + \", \" + cntMinions + \" total\";\n      }\n\n      // some room for the triangle\n      txt = txt + \" \";\n\n      span.innerText = txt;\n      allDiv.appendChild(span);\n    }\n\n    const masterTriangle = document.createElement(\"span\");\n    masterTriangle.innerText = \"\\u25bd\";\n    masterTriangle.style = \"cursor: pointer\";\n    allDiv.appendChild(masterTriangle);\n\n    outputContainer.appendChild(allDiv);\n\n    masterTriangle.addEventListener(\"click\", _ => {\n      // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n      // 25BD = WHITE DOWN-POINTING TRIANGLE\n      if(masterTriangle.innerText !== \"\\u25bd\") {\n        masterTriangle.innerText = \"\\u25bd\";\n      } else {\n        masterTriangle.innerText = \"\\u25b7\";\n      }\n\n      for(const div of outputContainer.childNodes) {\n        // only click on items that are collapsible\n        const childs = div.getElementsByClassName(\"triangle\");\n        if(childs.length !== 1) continue;\n        // do not collapse the \"all\" item again\n        const tr = childs[0];\n        if(tr === masterTriangle) continue;\n        // only click on items that are not already the same as \"all\"\n        if(tr.innerText === masterTriangle.innerText) continue;\n        // (un)collapse the minion\n        const evt = new MouseEvent(\"click\", {});\n        tr.dispatchEvent(evt);\n      }\n    });\n\n    let nrMultiLineBlocks = 0;\n\n    // for all other types we consider the output per minion\n    // this is more generic and it simplifies the handlers\n    for(const hostname of minions.sort()) {\n\n      const isSuccess = true;\n      const retCode = 0;\n\n      let hostResponse = response[hostname];\n      if(Output.hasProperties(hostResponse, [\"retcode\", \"return\", \"success\"])) {\n        hostResponse = hostResponse.return;\n      }\n      else if(command.startsWith(\"runner.\") && hostResponse && hostResponse.hasOwnProperty(\"return\")) {\n        hostResponse = hostResponse.return.return;\n      }\n\n      let hostOutput = null;\n      let hostMultiLine = null;\n      let fndRepresentation = false;\n\n      // the standard label is the hostname,\n      // future: colored based on the successflag\n      // future: colored based on the retcode\n      let hostClass = \"host_success\";\n      if(!isSuccess) hostClass = \"host_failure\";\n      if(!response.hasOwnProperty(hostname)) hostClass = \"host_noresponse\";\n      let hostLabel = Output.getHostnameHtml(hostname, hostClass);\n\n      if(!fndRepresentation && !response.hasOwnProperty(hostname)) {\n        hostOutput = Output.getTextOutput(\"(no response)\");\n        fndRepresentation = true;\n      }\n\n      if(!fndRepresentation && typeof hostResponse === \"string\") {\n        hostOutput = Output.getTextOutput(hostResponse);\n        hostMultiLine = hostResponse.includes(\"\\n\");\n        fndRepresentation = true;\n      }\n\n      if(!fndRepresentation && typeof hostResponse !== \"object\") {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = false;\n        fndRepresentation = true;\n      }\n\n      // null is an object, but treat it separatelly\n      if(!fndRepresentation && hostResponse === null) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = false;\n        fndRepresentation = true;\n      }\n\n      // an array is an object, but treat it separatelly\n      if(!fndRepresentation && Array.isArray(hostResponse)) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = hostResponse.length > 0;\n        fndRepresentation = true;\n      }\n\n      // it might be highstate output\n      const commandCmd = command.trim().replace(/ .*/, \"\");\n      const isHighStateOutput = OutputHighstate.isHighStateOutput(commandCmd, hostResponse);\n      // enhanced highstate display\n      if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"saltguihighstate\")) {\n        hostLabel = OutputSaltGuiHighstate.getHighStateLabel(hostname, hostResponse);\n        hostOutput = OutputSaltGuiHighstate.getHighStateOutput(hostResponse);\n        hostMultiLine = true;\n        fndRepresentation = true;\n      }\n      // regular highstate display\n      if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"highstate\")) {\n        hostLabel = OutputHighstate.getHighStateLabel(hostname, hostResponse);\n        hostOutput = OutputHighstate.getHighStateOutput(hostResponse);\n        hostMultiLine = true;\n        fndRepresentation = true;\n      }\n\n      // nothing special? then it is normal output\n      if(!fndRepresentation) {\n        hostOutput = Output.getNormalOutput(hostResponse);\n        hostMultiLine = Object.keys(hostResponse).length > 0;\n      }\n\n      // one response does not need to be collapsible\n      const cnt = Object.keys(response).length;\n      if(cnt === 1) {\n        hostMultiLine = false;\n      }\n\n      if(hostMultiLine) nrMultiLineBlocks += 1;\n\n      // compose the actual output\n      const div = document.createElement(\"div\");\n\n      div.append(hostLabel);\n\n      div.appendChild(document.createTextNode(\": \"));\n\n      // multiple line, collapsible\n      // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n      // 25BD = WHITE DOWN-POINTING TRIANGLE\n      let triangle = null;\n      if(hostMultiLine) {\n        triangle = document.createElement(\"span\");\n        triangle.innerText = \"\\u25bd\";\n        triangle.style = \"cursor: pointer\";\n        triangle.classList.add(\"triangle\");\n        div.appendChild(triangle);\n        div.appendChild(document.createElement(\"br\"));\n\n        triangle.addEventListener(\"click\", _ => {\n          // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n          // 25BD = WHITE DOWN-POINTING TRIANGLE\n          if(triangle.innerText !== \"\\u25bd\") {\n            triangle.innerText = \"\\u25bd\";\n            hostOutput.style.display = \"\";\n          } else {\n            triangle.innerText = \"\\u25b7\";\n            hostOutput.style.display = \"none\";\n          }\n        });\n      }\n\n      div.append(hostOutput);\n\n      outputContainer.append(div);\n    }\n\n    if(nrMultiLineBlocks <= 1) {\n      // No collapsible elements, hide the master\n      // Also hide with 1 collapsible element\n      masterTriangle.style.display = \"none\";\n    }\n\n  }\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = Output;\n","class OutputDocumentation {\n\n  // test whether the returned data matches the requested data\n  static isDocuKeyMatch(key, filterKey) {\n\n    // no filter is always OK\n    if(!filterKey) return true;\n\n    // an exact match is great\n    if(key === filterKey) return true;\n\n    // a true prefix is also ok\n    if(key.startsWith(filterKey + \".\")) return true;\n\n    // no match\n    return false;\n  }\n\n\n  // we only treat output as documentation output when it sticks to strict rules\n  // all minions must return strings\n  // and when its key matches the requested documentation\n  // empty values are allowed due to errors in the documentation\n  // 'output' is needed like this to prevent an error during testing\n  static isDocumentationOutput(output, response, command) {\n\n    if(!output.isOutputFormatAllowed(\"doc\")) return false;\n\n    let result = false;\n\n    // reduce the search key to match the data in the response\n    command = OutputDocumentation.reduceFilterKey(command);\n\n    for(const hostname of Object.keys(response)) {\n\n      const output = response[hostname];\n\n      if(!output) {\n        // some commands do not have help-text\n        // e.g. wheel.key.get_key\n        continue;\n      }\n\n      if(typeof output !== \"object\") {\n        // strange --> no documentation object\n        return false;\n      }\n\n      // arrays are also objects,\n      // but not what we are looking for\n      if(Array.isArray(output)) {\n        return false;\n      }\n\n      for(const key of Object.keys(output)) {\n        // e.g. for \"test.rand_str\"\n        if(output[key] === null) {\n          continue;\n        }\n\n        // but otherwise it must be a (documentation)string\n        if(typeof output[key] !== \"string\") {\n          return false;\n        }\n\n        // is this what we were looking for?\n        if(OutputDocumentation.isDocuKeyMatch(key, command)) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n\n  // reduce the search key to match the data in the response\n  static reduceFilterKey(filterKey) {\n    if(filterKey === \"wheel\") {\n      return \"\";\n    }\n    if(filterKey.startsWith(\"wheel.\")) {\n      // strip the prefix \"wheel.\"\n      return filterKey.substring(6);\n    }\n\n    if(filterKey === \"runners\") {\n      return \"\";\n    }\n    if(filterKey.startsWith(\"runners.\")) {\n      // strip the prefix \"runners.\"\n      return filterKey.substring(8);\n    }\n\n    return filterKey;\n  }\n\n\n  // documentation is requested from all targetted minions\n  // these all return roughly the same output\n  // it is a big waste of screen lines to show the output for each minion\n  // so the output is reduced to the output from a single minion only\n  // this is exactly what the salt commandline also does\n  // Parameters:\n  //   response: the data returned from all minions\n  //   visualKey: the name under which the result must be visualized\n  //              this replaces the traditional minion-name\n  //   filterKey: the prefix (or the full command) that the documentation\n  //              was requested for. The internal functions for WHEEL and\n  //              RUNNERS always return all documentation in that category\n  //              thus that response must be reduced.\n  static reduceDocumentationOutput(response, visualKey, filterKey) {\n    if(!response || typeof response !== \"object\") {\n      // strange --> don't try to fix anything\n      return;\n    }\n\n    // reduce the search key to match the data in the response\n    // i.e. remove the prefixes for \"wheel\" and \"runners\"\n    filterKey = OutputDocumentation.reduceFilterKey(filterKey);\n\n    let selectedMinion = null;\n    for(const hostname of Object.keys(response)) {\n\n      // When we already found the documentation ignore all others\n      if(selectedMinion) {\n        delete response[hostname];\n        continue;\n      }\n\n      // make sure it is an object (instead of e.g. \"false\" for an offline minion)\n      // when it is not, the whole entry is ignored\n      if(!response[hostname] || typeof response[hostname] !== \"object\") {\n        delete response[hostname];\n        continue;\n      }\n\n      // make sure that the entry matches with the requested command or prefix\n      // that's always the case for SYS.DOC output, but not for RUNNERS.DOC.RUNNER\n      // and/or RUNNERS.DOC.WHEEL.\n      const hostResponse = response[hostname];\n      for(const key of Object.keys(hostResponse)) {\n\n        // is this what we were looking for?\n        if(!OutputDocumentation.isDocuKeyMatch(key, filterKey)) {\n          // no match, ignore the whole entry\n          delete hostResponse[key];\n        }\n      }\n\n      // no documentation present (or left) on this minion?\n      // then discard the result of this minion\n      if(Object.keys(hostResponse).length === 0) {\n        delete response[hostname];\n        continue;\n      }\n\n      // we have found documentation output\n      // mark all other documentation for discarding\n      selectedMinion = hostname;\n    }\n\n    if(selectedMinion) {\n      // basically rename the key\n      const savedDocumentation = response[selectedMinion];\n      delete response[selectedMinion];\n      response[visualKey] = savedDocumentation;\n    } else {\n      // prepare a dummy response when no documentation could be found\n      // otherwise leave all documentation responses organized by minion\n      response[\"dummy\"] = { };\n      response[\"dummy\"][visualKey] = \"no documentation found\";\n    }\n  }\n\n  // add the output of a documentation command to the display\n  static addDocumentationOutput(outputContainer, response) {\n\n    // we expect no hostnames present\n    // as it should have been reduced already\n    for(const hostname of Object.keys(response)) {\n\n      const hostResponse = response[hostname];\n\n      for(const key of Object.keys(hostResponse).sort()) {\n\n        let out = hostResponse[key];\n        if(out === null) continue;\n        out = out.trimRight();\n\n        // internal links: remove the \".. rubric::\" prefix\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/[.][.] rubric:: */g, \"\");\n\n        // internal links: remove prefixes like \":mod:\" and \":py:func:\"\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/(:[a-z_]*)*:`/g, \"`\");\n\n        // internal links: remove link indicators in highlighted text\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/[ \\n]*<[^`]*>`/gm, \"`\");\n\n        // turn text into html\n        // e.g. in \"sys.doc cmd.run\"\n        out = out.replace(/&/g, \"&amp;\");\n\n        // turn text into html\n        // e.g. in \"sys.doc state.template\"\n        out = out.replace(/</g, \"&lt;\");\n\n        // turn text into html\n        // e.g. in \"sys.doc state.template\"\n        out = out.replace(/>/g, \"&gt;\");\n\n        // external links\n        // e.g. in \"sys.doc pkg.install\"\n        while(out.includes(\".. _\")) {\n          // take only a line containing \".. _\"\n          const reference = out.\n            replace(/^(.|\\n|\\r)*[.][.] _/m, \"\").\n            replace(/(\\n|\\r)(.|\\n|\\r)*$/m, \"\");\n          const words = reference.split(\": \");\n          if(words.length !== 2) { console.log(\"words\", words); break; }\n          const link = words[0];\n          const target = words[1];\n          // add link to all references\n          while(out.includes(link + \"_\")) {\n            out = out.replace(\n              link + \"_\",\n              \"<a href='\" + target + \"' target='_blank'>\" + link + \"</a>\");\n          }\n          // remove the item from the link table\n          out = out.replace(\".. _\" + reference, \"\");\n        }\n\n        // replace ``......``\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/``([^`]*)``/g, \"<span style='background-color: #575757'>$1</span>\");\n\n        // replace `......`\n        // e.g. in \"sys.doc state.apply\"\n        out = out.replace(/`([^`]*)`/g, \"<span style='color: yellow'>$1</span>\");\n\n        // remove whitespace at end of lines\n        out = out.replace(/  *\\n/gm, \"\");\n\n        // remove duplicate empty lines (usually due to previous rule)\n        out = out.replace(/\\n\\n\\n*/gm, \"\\n\\n\");\n\n        outputContainer.innerHTML +=\n          \"<div><span class='hostname'>\" + key + \"</span>:</br><pre style='height: initial; overflow-y: initial;'>\" + out + \"</pre></div>\";\n      }\n    }\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputDocumentation;\n","class OutputHighstate {\n\n  static isHighStateOutput(command, response) {\n\n    if(!Output.isOutputFormatAllowed(\"highstate\")) return false;\n\n    if(typeof response !== \"object\") return false;\n    if(Array.isArray(response)) return false;\n    if(command !== \"state.apply\" && command !== \"state.highstate\") return false;\n    for(const key of Object.keys(response)) {\n      const components = key.split(\"_|-\");\n      if(components.length !== 4) return false;\n    }\n    return true;\n  }\n\n  static getDurationClause(millis) {\n    if(millis === 1) {\n      return `${millis} millisecond`;\n    }\n    if(millis < 1000) {\n      return `${millis} milliseconds`;\n    }\n    if(millis === 1000) {\n      return `${millis/1000} second`;\n    }\n    return `${millis/1000} seconds`;\n  }\n\n  static getHighStateLabel(hostname, hostResponse) {\n    let anyFailures = false;\n    let anySkips = false;\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(hostResponse)) {\n      const task = hostResponse[key];\n      if(task.result === null) anySkips = true;\n      else if(!task.result) anyFailures = true;\n    }\n\n    if(anyFailures) {\n      return Output.getHostnameHtml(hostname, \"host_failure\");\n    }\n    if(anySkips) {\n      return Output.getHostnameHtml(hostname, \"host_skips\");\n    }\n    return Output.getHostnameHtml(hostname, \"host_success\");\n  }\n\n  static getHighStateOutput(hostResponse) {\n\n    // The tasks are in an (unordered) object with uninteresting keys\n    // convert it to an array that is in execution order\n    // first put all the values in an array\n    const tasks = [];\n    Object.keys(hostResponse).forEach(\n      function(taskKey) {\n        hostResponse[taskKey].___key___ = taskKey;\n        tasks.push(hostResponse[taskKey]);\n      }\n    );\n    // then sort the array\n    tasks.sort(function(a, b) { return a.__run_num__ - b.__run_num__; } );\n\n    const indent = \"    \";\n\n    const div = document.createElement(\"div\");\n\n    let succeeded = 0;\n    let failed = 0;\n    let skipped = 0;\n    let total_millis = 0;\n    let changes = 0;\n    for(const task of tasks) {\n\n      const taskDiv = document.createElement(\"div\");\n\n      const span = document.createElement(\"span\");\n      if(task.result === null) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"yellow\";\n        span.innerText = \"\\u2714\";\n        skipped += 1;\n      } else if(task.result) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"green\";\n        span.innerText = \"\\u2714\";\n        succeeded += 1;\n      } else {\n        // 2718 = HEAVY BALLOT X\n        span.style.color = \"red\";\n        span.innerText = \"\\u2718\";\n        failed += 1;\n      }\n      taskDiv.append(span);\n\n      taskDiv.append(document.createTextNode(\" \"));\n\n      if(task.name) {\n        taskDiv.append(document.createTextNode(task.name));\n      } else {\n        // make sure that the checkbox/ballot-x is on a reasonable line\n        // also for the next \"from\" clause (if any)\n        taskDiv.append(document.createTextNode(\"(anonymous task)\"));\n      }\n\n      if(task.__id__ && task.__id__ !== task.name) {\n        taskDiv.append(document.createTextNode(\" id=\" + encodeURIComponent(task.__id__)));\n      }\n\n      if(task.__sls__) {\n        taskDiv.append(document.createTextNode(\n          \" (from \" + task.__sls__.replace(\".\", \"/\") + \".sls)\"));\n      }\n\n      const components = task.___key___.split(\"_|-\");\n      taskDiv.append(document.createElement(\"br\"));\n      taskDiv.append(document.createTextNode(\n        indent + \"Function is \" + components[0] + \".\" + components[3]));\n\n      if(task.comment) {\n        taskDiv.append(document.createElement(\"br\"));\n        let txt = task.comment;\n        // trim extra whitespace\n        txt = txt.replace(/[ \\r\\n]+$/g, \"\");\n        // indent extra lines\n        txt = txt.replace(/[\\n]+/g, \"\\n\" + indent);\n        taskDiv.append(document.createTextNode(indent + txt));\n      }\n\n      if(task.hasOwnProperty(\"changes\")) {\n        if(typeof task.changes !== \"object\" || Array.isArray(task.changes)) {\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(indent + JSON.stringify(task.changes)));\n        } else {\n          for(const key of Object.keys(task.changes).sort()) {\n            changes = changes + 1;\n            const change = task.changes[key];\n            // 25BA = BLACK RIGHT-POINTING POINTER\n            // don't use arrows here, these are higher than a regular\n            // text-line and disturb the text-flow\n            if(typeof change === \"string\" && change.includes(\"\\n\")) {\n              taskDiv.append(document.createElement(\"br\"));\n              // show multi-line text as a separate block\n              taskDiv.append(document.createTextNode(indent + key + \":\"));\n              const lines = change.trim().split(\"\\n\");\n              for(const line of lines) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\"      \" + line));\n              }\n            } else if(typeof change !== \"object\" || Array.isArray(task.change)) {\n              // show all other non-objects in a simple way\n              taskDiv.append(document.createElement(\"br\"));\n              taskDiv.append(document.createTextNode(\n                indent + key + \": \" +\n                JSON.stringify(change)));\n            } else {\n              // treat old->new first\n              if(change.hasOwnProperty(\"old\") && change.hasOwnProperty(\"new\")) {\n                taskDiv.append(document.createElement(\"br\"));\n                // place changes on one line\n                taskDiv.append(document.createTextNode(\n                  indent + key + \": \" +\n                  JSON.stringify(change.old) + \" \\u25BA \" +\n                  JSON.stringify(change.new)));\n                delete change.old;\n                delete change.new;\n              }\n              // then show whatever remains\n              for(const taskkey of Object.keys(change).sort()) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                  indent + key + \": \" + taskkey + \": \" +\n                  JSON.stringify(change[taskkey])));\n              }\n            }\n          }\n        }\n      }\n\n      if(task.hasOwnProperty(\"start_time\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + \"Started at \" + task.start_time));\n      }\n\n      if(task.hasOwnProperty(\"duration\")) {\n        const millis = Math.round(task.duration);\n        total_millis += millis;\n        if(millis >= 10) {\n          // anything below 10ms is not worth reporting\n          // report only the \"slow\" jobs\n          // it still counts for the grand total thought\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\n            indent + \"Duration \" + OutputHighstate.getDurationClause(millis)));\n        }\n      }\n\n      // show any unknown attribute of a task\n      // do not use Object.entries, that is not supported by the test framework\n      for(const key of Object.keys(task)) {\n        const item = task[key];\n        if(key === \"___key___\") continue; // ignored, generated by us\n        if(key === \"__id__\") continue; // handled\n        if(key === \"__sls__\") continue; // handled\n        if(key === \"__run_num__\") continue; // handled, not shown\n        if(key === \"changes\") continue; // handled\n        if(key === \"comment\") continue; // handled\n        if(key === \"duration\") continue; // handled\n        if(key === \"host\") continue; // ignored, same as host\n        if(key === \"name\") continue; // handled\n        if(key === \"pchanges\") continue; // ignored, also ignored by cli\n        if(key === \"result\") continue; // handled\n        if(key === \"start_time\") continue; // handled\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \" = \" + JSON.stringify(item)));\n      }\n\n      div.append(taskDiv);\n    }\n\n    // add a summary line\n    let line = \"\";\n\n    if(succeeded) line += \", \" + succeeded + \" succeeded\";\n    if(skipped) line += \", \" + skipped + \" skipped\";\n    if(failed) line += \", \" + failed + \" failed\";\n    const total = succeeded + skipped + failed;\n    if(total !== succeeded && total !== skipped && total !== failed) {\n      line += \", \" + (succeeded + skipped + failed) + \" total\";\n    }\n\n    // note that the number of changes may be higher or lower\n    // than the number of tasks. tasks may contribute multiple\n    // changes, or tasks may have no changes.\n    if(changes === 1) line += \", \" + changes + \" change\";\n    else if(changes) line += \", \" + changes + \" changes\";\n\n    // multiple durations and significant?\n    if(total > 1 && total_millis >= 10) {\n      line += \", \" + OutputHighstate.getDurationClause(total_millis);\n    }\n\n    if(line) {\n      div.append(document.createTextNode(line.substring(2)));\n    }\n\n\n    return div;\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputHighstate;\n","class OutputJson {\n\n  // format an object as JSON\n  // returns NULL when it is not a simple object\n  // i.e. no multi-line objects, no indentation here\n  static formatSimpleJSON(value) {\n\n    if(value === null) {\n      // null is an object, but not really\n      // leave that to the builtin function\n      return JSON.stringify(value);\n    }\n\n    if(value === undefined) {\n      // JSON.stringify does not return a string for this\n      // but again a value undefined, we need a string\n      return \"undefined\";\n    }\n\n    if(typeof value !== \"object\") {\n      // a simple type\n      // leave that to the builtin function\n      return JSON.stringify(value);\n    }\n\n    if(Array.isArray(value) && value.length === 0) {\n      // show the brackets for an empty array a bit wider apart\n      return \"[ ]\";\n    }\n\n    if(!Array.isArray(value) && Object.keys(value).length === 0) {\n      // show the brackets for an empty object a bit wider apart\n      return \"{ }\";\n    }\n\n    return null;\n  }\n\n  // format an object as JSON\n  // based on an initial indentation and an indentation increment\n  static formatJSON(value, indentLevel=0) {\n\n    // indent each level with 4 spaces\n    const indentStep = 4;\n\n    let str = OutputJson.formatSimpleJSON(value);\n    if(str !== null) {\n      return str;\n    }\n\n    if(Array.isArray(value)) {\n      // an array\n      // put each element on its own line\n      str = \"[\";\n      let separator = \"\";\n      for(const elem of value) {\n        str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) +\n          OutputJson.formatJSON(elem, indentLevel + indentStep);\n        separator = \",\";\n      }\n      str += \"\\n\" + \" \".repeat(indentLevel) + \"]\";\n      return str;\n    }\n\n    // regular object\n    // put each name+value on its own line\n    const keys = Object.keys(value);\n    str = \"{\";\n    let separator = \"\";\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(value).sort()) {\n      const item = value[key];\n      str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) + \"\\\"\" + key + \"\\\": \" +\n        OutputJson.formatJSON(item, indentLevel + indentStep);\n      separator = \",\";\n    }\n    str += \"\\n\" + \" \".repeat(indentLevel) + \"}\";\n    return str;\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputJson;\n","class OutputNested {\n\n  // heavily inspired by the implementation for NESTED output\n  // as originally implemented in salt/output/nested.py from Salt\n\n  static ustring(indent, msg, prefix='', suffix='') {\n    return \" \".repeat(indent) + prefix + msg + suffix;\n  }\n\n  static display(ret, indent, prefix, out) {\n    if(ret === null) {\n      out.push(OutputNested.ustring(indent, \"None\", prefix));\n    } else if(ret === undefined) {\n      out.push(OutputNested.ustring(indent, \"undefined\", prefix));\n    } else if(typeof ret === \"boolean\" || typeof ret === \"number\") {\n      out.push(OutputNested.ustring(indent, ret, prefix));\n    } else if(typeof ret === \"string\") {\n      let first_line = true;\n      ret = ret.replace(/\\n$/, \"\");\n      for(const line of ret.split(\"\\n\")) {\n        let line_prefix = prefix;\n        if(!first_line)\n          line_prefix = \".\".repeat(prefix.length);\n        out.push(OutputNested.ustring(indent, line, line_prefix));\n        first_line = false;\n      }\n    } else if(typeof ret === \"object\" && Array.isArray(ret)) {\n      for(const ind of ret) {\n        if(typeof ind === \"object\" /* including array */ ) {\n          out.push(OutputNested.ustring(indent, '|_'));\n          let prefix;\n          if(typeof ind === \"object\" && !Array.isArray(ind))\n            prefix = '';\n          else\n            prefix ='-\\u00A0';\n          OutputNested.display(ind, indent + 2, prefix, out);\n        } else {\n          OutputNested.display(ind, indent, '-\\u00A0', out);\n        }\n      }\n    } else if(typeof ret === \"object\") {\n      if(indent) out.push(OutputNested.ustring(indent, '----------'));\n      for(const key of Object.keys(ret).sort()) {\n        const val = ret[key];\n        out.push(OutputNested.ustring(indent, key, prefix, ':'));\n        if(val !== null && val !== \"\") {\n          OutputNested.display(val, indent + 4, '', out);\n        }\n      }\n    }\n    return out;\n  }\n\n  static formatNESTED(value, indentLevel=0) {\n    const lines = OutputNested.display(value, 0, '', []);\n    return lines.join('\\n');\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputNested;\n","class OutputSaltGuiHighstate {\n\n  // no separate `isHighStateOutput` here\n  // the implementation from OutputHighstate is (re)used\n\n  static getDurationClause(millis) {\n    if(millis === 1) {\n      return `${millis} millisecond`;\n    }\n    if(millis < 1000) {\n      return `${millis} milliseconds`;\n    }\n    if(millis === 1000) {\n      return `${millis/1000} second`;\n    }\n    return `${millis/1000} seconds`;\n  }\n\n  static getHighStateLabel(hostname, hostResponse) {\n    let anyFailures = false;\n    let anySkips = false;\n    // do not use Object.entries, that is not supported by the test framework\n    for(const key of Object.keys(hostResponse)) {\n      const task = hostResponse[key];\n      if(task.result === null) anySkips = true;\n      else if(!task.result) anyFailures = true;\n    }\n\n    if(anyFailures) {\n      return Output.getHostnameHtml(hostname, \"host_failure\");\n    }\n    if(anySkips) {\n      return Output.getHostnameHtml(hostname, \"host_skips\");\n    }\n    return Output.getHostnameHtml(hostname, \"host_success\");\n  }\n\n  static addChangesInfo(taskDiv, task, indent) {\n    if(!task.hasOwnProperty(\"changes\")) {\n      return 0;\n    }\n\n    if(typeof task.changes !== \"object\" || Array.isArray(task.changes)) {\n      taskDiv.append(document.createElement(\"br\"));\n      taskDiv.append(document.createTextNode(indent + JSON.stringify(task.changes)));\n      return 0;\n    }\n\n    let changes = 0;\n    for(const key of Object.keys(task.changes).sort()) {\n\n      changes = changes + 1;\n\n      const change = task.changes[key];\n\n      if(typeof change === \"string\" && change.includes(\"\\n\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        // show multi-line text as a separate block\n        taskDiv.append(document.createTextNode(indent + key + \":\"));\n        const lines = change.trim().split(\"\\n\");\n        for(const line of lines) {\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\"      \" + line));\n        }\n        continue;\n      }\n\n      if(Array.isArray(change)) {\n        for(const idx in change) {\n          const task = change[idx];\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\n            indent + key + \"[\" + idx + \"]: \" + JSON.stringify(task)));\n        }\n        continue;\n      }\n\n      if(typeof change !== \"object\") {\n        // show all other non-objects in a simple way\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \": \" +\n          JSON.stringify(change)));\n        continue;\n      }\n\n      // treat old->new first\n      if(change.hasOwnProperty(\"old\") && change.hasOwnProperty(\"new\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        // place changes on one line\n        // 25BA = BLACK RIGHT-POINTING POINTER\n        // don't use arrows here, these are higher than a regular\n        // text-line and disturb the text-flow\n        taskDiv.append(document.createTextNode(\n          indent + key + \": \" +\n          JSON.stringify(change.old) + \" \\u25BA \" +\n          JSON.stringify(change.new)));\n        delete change.old;\n        delete change.new;\n      }\n      // then show whatever remains\n      for(const taskkey of Object.keys(change).sort()) {\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \": \" + taskkey + \": \" +\n          JSON.stringify(change[taskkey])));\n      }\n    }\n  }\n\n  static getHighStateOutput(hostResponse) {\n\n    // The tasks are in an (unordered) object with uninteresting keys\n    // convert it to an array that is in execution order\n    // first put all the values in an array\n    const tasks = [];\n    Object.keys(hostResponse).forEach(\n      function(taskKey) {\n        hostResponse[taskKey].___key___ = taskKey;\n        tasks.push(hostResponse[taskKey]);\n      }\n    );\n    // then sort the array\n    tasks.sort(function(a, b) { return a.__run_num__ - b.__run_num__; } );\n\n    const indent = \"    \";\n\n    const div = document.createElement(\"div\");\n\n    let succeeded = 0;\n    let failed = 0;\n    let skipped = 0;\n    let total_millis = 0;\n    let changes = 0;\n    for(const task of tasks) {\n\n      const taskDiv = document.createElement(\"div\");\n\n      const span = document.createElement(\"span\");\n      if(task.result === null) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"yellow\";\n        span.innerText = \"\\u2714\";\n        skipped += 1;\n      } else if(task.result) {\n        // 2714 = HEAVY CHECK MARK\n        span.style.color = \"green\";\n        span.innerText = \"\\u2714\";\n        succeeded += 1;\n      } else {\n        // 2718 = HEAVY BALLOT X\n        span.style.color = \"red\";\n        span.innerText = \"\\u2718\";\n        failed += 1;\n      }\n      taskDiv.append(span);\n\n      taskDiv.append(document.createTextNode(\" \"));\n\n      if(task.name) {\n        taskDiv.append(document.createTextNode(task.name));\n      } else {\n        // make sure that the checkbox/ballot-x is on a reasonable line\n        // also for the next \"from\" clause (if any)\n        taskDiv.append(document.createTextNode(\"(anonymous task)\"));\n      }\n\n      if(task.__id__ && task.__id__ !== task.name) {\n        taskDiv.append(document.createTextNode(\" id=\" + encodeURIComponent(task.__id__)));\n      }\n\n      if(task.__sls__) {\n        taskDiv.append(document.createTextNode(\n          \" (from \" + task.__sls__.replace(\".\", \"/\") + \".sls)\"));\n      }\n\n      const components = task.___key___.split(\"_|-\");\n      taskDiv.append(document.createElement(\"br\"));\n      taskDiv.append(document.createTextNode(\n        indent + \"Function is \" + components[0] + \".\" + components[3]));\n\n      if(task.comment) {\n        taskDiv.append(document.createElement(\"br\"));\n        let txt = task.comment;\n        // trim extra whitespace\n        txt = txt.replace(/[ \\r\\n]+$/g, \"\");\n        // indent extra lines\n        txt = txt.replace(/[\\n]+/g, \"\\n\" + indent);\n        taskDiv.append(document.createTextNode(indent + txt));\n      }\n\n      changes += OutputSaltGuiHighstate.addChangesInfo(taskDiv, task, indent);\n\n      if(task.hasOwnProperty(\"start_time\")) {\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + \"Started at \" + Output.dateTimeStr(task.start_time)));\n      }\n\n      if(task.hasOwnProperty(\"duration\")) {\n        const millis = Math.round(task.duration);\n        total_millis += millis;\n        if(millis >= 10) {\n          // anything below 10ms is not worth reporting\n          // report only the \"slow\" jobs\n          // it still counts for the grand total thought\n          taskDiv.append(document.createElement(\"br\"));\n          taskDiv.append(document.createTextNode(\n            indent + \"Duration \" + OutputSaltGuiHighstate.getDurationClause(millis)));\n        }\n      }\n\n      // show any unknown attribute of a task\n      // do not use Object.entries, that is not supported by the test framework\n      for(const key of Object.keys(task)) {\n        const item = task[key];\n        if(key === \"___key___\") continue; // ignored, generated by us\n        if(key === \"__id__\") continue; // handled\n        if(key === \"__sls__\") continue; // handled\n        if(key === \"__run_num__\") continue; // handled, not shown\n        if(key === \"changes\") continue; // handled\n        if(key === \"comment\") continue; // handled\n        if(key === \"duration\") continue; // handled\n        if(key === \"host\") continue; // ignored, same as host\n        if(key === \"name\") continue; // handled\n        if(key === \"pchanges\") continue; // ignored, also ignored by cli\n        if(key === \"result\") continue; // handled\n        if(key === \"start_time\") continue; // handled\n        taskDiv.append(document.createElement(\"br\"));\n        taskDiv.append(document.createTextNode(\n          indent + key + \" = \" + JSON.stringify(item)));\n      }\n\n      div.append(taskDiv);\n    }\n\n    // add a summary line\n    let line = \"\";\n\n    if(succeeded) line += \", \" + succeeded + \" succeeded\";\n    if(skipped) line += \", \" + skipped + \" skipped\";\n    if(failed) line += \", \" + failed + \" failed\";\n    const total = succeeded + skipped + failed;\n    if(total !== succeeded && total !== skipped && total !== failed) {\n      line += \", \" + (succeeded + skipped + failed) + \" total\";\n    }\n\n    // note that the number of changes may be higher or lower\n    // than the number of tasks. tasks may contribute multiple\n    // changes, or tasks may have no changes.\n    if(changes === 1) line += \", \" + changes + \" change\";\n    else if(changes) line += \", \" + changes + \" changes\";\n\n    // multiple durations and significant?\n    if(total > 1 && total_millis >= 10) {\n      line += \", \" + OutputSaltGuiHighstate.getDurationClause(total_millis);\n    }\n\n    if(line) {\n      div.append(document.createTextNode(line.substring(2)));\n    }\n\n    return div;\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputSaltGuiHighstate;\n","class OutputYaml {\n\n  // format an object as YAML\n  // returns NULL when it is not a simple object\n  // i.e. no multi-line objects, no indentation here\n  static formatSimpleYAML(value) {\n\n    if(value === null) {\n      return \"null\";\n    }\n\n    if(value === undefined) {\n      return \"undefined\";\n    }\n\n    if(typeof value === \"boolean\") {\n      return value ? \"true\" : \"false\";\n    }\n\n    if(typeof value === \"string\") {\n      let needQuotes = false;\n\n      // simple number with extra 0's at the start is still a string\n      if(value.match(/^0[0-9]+$/)) return value;\n\n      if(!isNaN(Number(value))) needQuotes = true;\n\n      if(value.match(/^$/)) needQuotes = true;\n\n      if(value.match(/^ /)) needQuotes = true;\n      if(value.match(/ $/)) needQuotes = true;\n\n      if(value.match(/^@/)) needQuotes = true;\n      if(value.match(/^`/)) needQuotes = true;\n      if(value.match(/^%/)) needQuotes = true;\n\n      if(!value.match(/^[-a-z0-9_()./:+ ]+$/i)) needQuotes = true;\n\n      if(!needQuotes) return value;\n      return \"'\" + value + \"'\";\n    }\n\n    if(typeof value !== \"object\") {\n      return \"\" + value;\n    }\n\n    if(Array.isArray(value) && value.length === 0) {\n      // show the brackets for an empty array a bit wider apart\n      return \"[ ]\";\n    }\n\n    if(!Array.isArray(value) && Object.keys(value).length === 0) {\n      // show the brackets for an empty object a bit wider apart\n      return \"{ }\";\n    }\n\n    return null;\n  }\n\n  // format an object as YAML\n  // based on an initial indentation and an indentation increment\n  static formatYAML(value, indentLevel=0) {\n\n    // indent each level with this number of spaces\n    // note that list items are indented with 2 spaces\n    // independently of this setting to match the prefix \"- \"\n    const indentStep = 2;\n\n    const str = OutputYaml.formatSimpleYAML(value);\n    if(str !== null) {\n      return str;\n    }\n\n    if(Array.isArray(value)) {\n      let out = \"\";\n      let separator = \"\";\n      for(const item of value) {\n        out += separator + \"-\\u00A0\" + OutputYaml.formatYAML(item, indentLevel + 2);\n        separator = \"\\n\" + \" \".repeat(indentLevel);\n      }\n      return out;\n    }\n\n    // regular object\n    let out = \"\";\n    let separator = \"\";\n    for(const key of Object.keys(value).sort()) {\n      const item = value[key];\n      out += separator + key + \":\";\n      const str = OutputYaml.formatSimpleYAML(item);\n      if(str !== null) {\n        out += \" \" + str;\n      } else if(Array.isArray(item)) {\n        out += \"\\n\" + \" \".repeat(indentLevel) + OutputYaml.formatYAML(item, indentLevel);\n      } else if(typeof item === \"object\") {\n        out += \"\\n\" + \" \".repeat(indentLevel + indentStep) + OutputYaml.formatYAML(item, indentLevel + indentStep);\n      } else {\n        out += \"x\" + OutputYaml.formatYAML(item, indentLevel + indentStep);\n      }\n      separator = \"\\n\" + \" \".repeat(indentLevel);\n    }\n    return out;\n  }\n\n}\n\n// for unit tests\nif(typeof module !== \"undefined\") module.exports = OutputYaml;\n","// Function to parse a commandline\n// The line is broken into individual tokens\n// Each token that is recognized as a JS type will get that type\n// Otherwise the token is considered to be a string\n// name-value pairs in the form \"name=value\" are added to the \"params\" dictionary\n// other parameters are added to the \"args\" array\n// e.g.:\n//   test \"1 2 3\" 4 x=7 {\"a\":1, \"b\":2}\n// is a command line of 5 tokens\n//   string: \"test\"\n//   string: \"1 2 3\"\n//   number: 4\n//   number: 7\n//   dictionary: {\"a\":1, \"b\": 2}\n// the array will be filled with 4 elements\n// the dictionary will be filled with one element named \"x\"\n\n\n// note that \"none\" is not case-insensitive, but \"null\" is\nconst patNull = /^(None|null|Null|NULL)$/;\n\nconst patBooleanFalse = /^(false|False|FALSE)$/;\nconst patBooleanTrue = /^(true|True|TRUE)$/;\n\nconst patJid = /^[2-9][0-9][0-9][0-9][01][0-9][0-3][0-9][0-2][0-9][0-5][0-9][0-5][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/;\n\nconst patInteger = /^((0)|([-+]?[1-9][0-9]*))$/;\n\nconst patFloat = /^([-+]?(([0-9]+)|([0-9]+[.][0-9]*)|([0-9]*[.][0-9]+))([eE][-+]?[0-9]+)?)$/;\n\n\nwindow.parseCommandLine = function(toRun, args, params) {\n  // just in case the user typed some extra whitespace\n  // at the start of the line\n  toRun = toRun.trim();\n\n  while(toRun.length > 0)\n  {\n    let name = null;\n\n    let firstSpaceChar = toRun.indexOf(\" \");\n    if(firstSpaceChar < 0)\n      firstSpaceChar = toRun.length;\n    const firstEqualSign = toRun.indexOf(\"=\");\n    if(firstEqualSign >= 0 && firstEqualSign < firstSpaceChar) {\n      // we have the name of a named parameter\n      name = toRun.substr(0, firstEqualSign);\n      toRun = toRun.substr(firstEqualSign + 1);\n      if(toRun === \"\" || toRun[0] === \" \") {\n        return \"Must have value for named parameter '\" + name + \"'\";\n      }\n    }\n\n    // Determine whether the JSON string starts with a known\n    // character for a JSON type\n    let endChar = undefined;\n    let objType = undefined;\n    if(toRun[0] === \"{\") {\n      endChar = \"}\";\n      objType = \"dictionary\";\n    } else if(toRun[0] === \"[\") {\n      endChar = \"]\";\n      objType = \"array\";\n    } else if(toRun[0] === \"\\\"\") {\n      // note that json does not support single-quoted strings\n      endChar = \"\\\"\";\n      objType = \"double-quoted-string\";\n    }\n\n    let value;\n    if(endChar && objType) {\n      // The string starts with a character for a known JSON type\n      let p = 1;\n      while(true) {\n        // Try until the next closing character\n        let n = toRun.indexOf(endChar, p);\n        if(n < 0) {\n          return \"No valid \" + objType + \" found\";\n        }\n\n        // parse what we have found so far\n        // the string ends with a closing character\n        // but that may not be enough, e.g. \"{a:{}\"\n        const s = toRun.substring(0, n + 1);\n        try {\n          value = JSON.parse(s);\n        }\n        catch(err) {\n          // the string that we tried to parse is not valid json\n          // continue to add more text from the input\n          p = n + 1;\n          continue;\n        }\n\n        // the first part of the string is valid JSON\n        n = n + 1;\n        if(n < toRun.length && toRun[n] !== \" \") {\n          return \"Valid \" + objType + \", but followed by text:\" + toRun.substring(n) + \"...\";\n        }\n\n        // valid JSON and not followed by strange characters\n        toRun = toRun.substring(n);\n        break;\n      }\n    } else {\n      // everything else is a string (without quotes)\n      // when we are done, we'll see whether it actually is a number\n      // or any of the known constants\n      let str = \"\";\n      while(toRun.length > 0 && toRun[0] !== \" \") {\n        str += toRun[0];\n        toRun = toRun.substring(1);\n      }\n\n      // try to find whether the string is actually a known constant\n      // or integer or float\n      if(patNull.test(str)) {\n        value = null;\n      } else if(patBooleanFalse.test(str)) {\n        value = false;\n      } else if(patBooleanTrue.test(str)) {\n        value = true;\n      } else if(patJid.test(str)) {\n        // jids look like numbers but must be strings\n        value = str;\n      } else if(patInteger.test(str)) {\n        value = parseInt(str);\n      } else if(patFloat.test(str)) {\n        value = parseFloat(str);\n        if(!isFinite(value)) {\n          return \"Numeric argument has overflowed or is infinity\";\n        }\n      } else {\n        value = str;\n      }\n    }\n\n    if(name !== null) {\n      // named parameter\n      params[name] = value;\n    } else {\n      // anonymous parameter\n      args.push(value);\n    }\n\n    // ignore the whitespace before the next part\n    toRun = toRun.trim();\n  }\n\n  // succesfull (no error message return)\n  return null;\n};\n","class Router {\n\n  constructor() {\n    this.api = new API();\n    this.commandbox = new CommandBox(this.api);\n    this.currentRoute = undefined;\n    this.routes = [];\n\n    this.registerRoute(new LoginRoute(this));\n    this.registerRoute(new MinionsRoute(this));\n    this.registerRoute(new KeysRoute(this));\n    this.registerRoute(new GrainsRoute(this));\n    this.registerRoute(new GrainsMinionRoute(this));\n    this.registerRoute(new SchedulesRoute(this));\n    this.registerRoute(new SchedulesMinionRoute(this));\n    this.registerRoute(new PillarsRoute(this));\n    this.registerRoute(new PillarsMinionRoute(this));\n    this.registerRoute(new JobRoute(this));\n    this.registerRoute(new JobsRoute(this));\n    this.registerRoute(new TemplatesRoute(this));\n\n    // show template menu item if templates defined\n    const templatesText = window.localStorage.getItem(\"templates\");\n    if(templatesText && templatesText !== \"undefined\") {\n      const item1 = document.querySelector(\"#button_templates1\");\n      item1.style.display = \"inline-block\";\n      const item2 = document.querySelector(\"#button_templates2\");\n      item2.style.display = \"inline-block\";\n    }\n\n    this._registerEventListeners();\n\n    this.api.isAuthenticated()\n      .then(valid_session => this.goTo(\n        valid_session ? window.location.pathname + window.location.search : \"/login\"))\n      .catch(error => {\n        console.error(error);\n        this.goTo(\"/login\");\n      });\n  }\n\n  _registerEventListeners() {\n    const router = this;\n\n    document.querySelector(\".logo\")\n      .addEventListener(\"click\", _ => {\n        if(window.location.pathname === \"/login\") return;\n        router.goTo(\"/\");\n      });\n\n    document.querySelector(\"#button_minions1\")\n      .addEventListener(\"click\", _ => {\n        window.location.replace(\"/\");\n      });\n    document.querySelector(\"#button_minions2\")\n      .addEventListener(\"click\", _ => {\n        window.location.replace(\"/\");\n      });\n\n    document.querySelector(\"#button_grains1\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/grains\");\n      });\n    document.querySelector(\"#button_grains2\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/grains\");\n      });\n\n    document.querySelector(\"#button_schedules1\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/schedules\");\n      });\n    document.querySelector(\"#button_schedules2\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/schedules\");\n      });\n\n    document.querySelector(\"#button_pillars1\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/pillars\");\n      });\n    document.querySelector(\"#button_pillars2\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/pillars\");\n      });\n\n    document.querySelector(\"#button_keys1\")\n      .addEventListener(\"click\", _ => {\n        window.location.replace(\"/keys\");\n      });\n    document.querySelector(\"#button_keys2\")\n      .addEventListener(\"click\", _ => {\n        window.location.replace(\"/keys\");\n      });\n\n    document.querySelector(\"#button_jobs1\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/jobs\");\n      });\n    document.querySelector(\"#button_jobs2\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/jobs\");\n      });\n\n    document.querySelector(\"#button_templates1\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/templates\");\n      });\n    document.querySelector(\"#button_templates2\")\n      .addEventListener('click', _ => {\n        window.location.replace(\"/templates\");\n      });\n\n    document.querySelector(\"#button_logout1\")\n      .addEventListener(\"click\", _ => {\n        this.api.logout().then(() => {\n          window.location.replace(\"/\");\n        });\n      });\n    document.querySelector(\"#button_logout2\")\n      .addEventListener(\"click\", _ => {\n        this.api.logout().then(() => {\n          window.location.replace(\"/\");\n        });\n      });\n  }\n\n  registerRoute(route) {\n    this.routes.push(route);\n    if(route.onRegister) route.onRegister();\n  }\n\n  goTo(path) {\n    if(this.switchingRoute) return;\n    if(window.location.pathname === path && this.currentRoute) return;\n    for(const route of this.routes) {\n      if(!route.getPath().test(path.split(\"?\")[0])) continue;\n\n      window.history.pushState({}, undefined, path);\n      this.showRoute(route);\n      return;\n    }\n  }\n\n  showRoute(route) {\n    const router = this;\n    route.getPageElement().style.display = \"\";\n\n    const minionMenuItem = document.getElementById(\"button_minions1\");\n    const jobsMenuItem = document.getElementById(\"button_jobs1\");\n\n    Array.from(document.querySelectorAll(\".menu_item_active\")).forEach(\n      function (e){ e.classList.remove(\"menu_item_active\"); }\n    );\n\n    const elem1 = route.getMenuItemElement1();\n    if(elem1) {\n      elem1.classList.add(\"menu_item_active\");\n      // activate also parent menu item if child element is selected\n      if(elem1.id === \"button_pillars1\" || elem1.id === \"button_schedules1\" || elem1.id === \"button_grains1\") {\n        minionMenuItem.classList.add(\"menu_item_active\");\n      }\n      if(elem1.id === \"button_jobs1\" || elem1.id === \"button_templates1\") {\n        jobsMenuItem.classList.add(\"menu_item_active\");\n      }\n    }\n\n    const elem2 = route.getMenuItemElement2();\n    if(elem2) {\n      elem2.classList.add(\"menu_item_active\");\n    }\n\n    router.switchingRoute = true;\n\n    const afterLoad = function(route) {\n      if(router.currentRoute !== undefined) {\n        router.hideRoute(router.currentRoute);\n      }\n\n      router.currentRoute = route;\n      document.title = \"SaltGUI - \" + router.currentRoute.getName();\n      router.currentRoute.getPageElement().className = \"route current\";\n      router.switchingRoute = false;\n    };\n\n    let response;\n    if(route.onShow) response = route.onShow();\n\n    if(response && response.then) response.then(afterLoad(route));\n    else afterLoad(route);\n  }\n\n  hideRoute(route) {\n    route.getPageElement().className = \"route\";\n    setTimeout(function() {\n      //Hide element after fade, so it does not expand the body\n      route.getPageElement().style.display = \"none\";\n    }, 500);\n    if(route.onHide) route.onHide();\n  }\n\n}\n\nwindow.addEventListener(\"load\", () => new Router());\n\n","window.elapsedToString = function(date) {\n  try {\n    const secondsPassed = (new Date().getTime() / 1000) - (date.getTime() / 1000);\n\n    if(secondsPassed < 0) return \"Magic happened in the future\";\n    if(secondsPassed < 20) return \"A few moments ago\";\n    if(secondsPassed < 120) return \"A few minutes ago\";\n\n    if(secondsPassed < 60 * 60) {\n      const minutes = Math.round(secondsPassed / 60);\n      return minutes + \" minute(s) ago\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24) {\n      const hours = Math.round(secondsPassed / 60 / 60);\n      return hours + \" hour(s) ago\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24 * 2) {\n      return \"Yesterday\";\n    }\n\n    if(secondsPassed < 60 * 60 * 24 * 30) {\n      const days = Math.round(secondsPassed / 60 / 60 / 24);\n      return days + \" days ago\";\n    }\n\n    return \"A long time ago, in a galaxy far, far away\";\n  }\n  catch(err) {\n    //console.error(err);\n    return \"It did happen, when I don't know\";\n  }\n};\n\nwindow.createElement = function(type, className, content) {\n  const element = document.createElement(type);\n  element.classList.add(className);\n  if(content !== \"\") element.innerHTML = content;\n  return element;\n};\n\nwindow.getQueryParam = function(name) {\n  const vars = [];\n  const hashes = window.location.href.slice(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n  for(const hash of hashes) {\n    const hashparts = hash.split(\"=\");\n    vars.push(hashparts[0]);\n    if(hashparts[0] === name) return hashparts[1];\n  }\n  return undefined;\n};\n\nwindow.escape = function(input) {\n  const div = document.createElement(\"div\");\n  div.appendChild(document.createTextNode(input));\n  return div.innerHTML;\n};\n\nwindow.makeTargetText = function(targetType, targetPattern) {\n  // note that \"glob\" is the most common case\n  // when used from the command-line, that target-type\n  // is not even specified.\n  // therefore we suppress that one\n\n  // note that due to bug in 2018.3, all finished jobs\n  // will be shown as if of type \"list\"\n  // therefore we suppress that one\n\n  let returnText = \"\";\n  if(targetType !== \"glob\" && targetType !== \"list\") {\n    returnText = targetType + \" \";\n  }\n  returnText += targetPattern;\n  return returnText;\n};\n"],"sourceRoot":""}