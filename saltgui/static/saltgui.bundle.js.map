{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./saltgui/static/sorttable/sorttable.js","webpack:///./saltgui/static/scripts/utils.js","webpack:///./saltgui/static/scripts/routes/Route.js","webpack:///./saltgui/static/scripts/routes/PageRoute.js","webpack:///./saltgui/static/scripts/DropDownMenu.js","webpack:///./saltgui/static/scripts/output/OutputDocumentation.js","webpack:///./saltgui/static/scripts/output/OutputHighstate.js","webpack:///./saltgui/static/scripts/output/OutputJson.js","webpack:///./saltgui/static/scripts/output/OutputNested.js","webpack:///./saltgui/static/scripts/output/OutputSaltGuiHighstate.js","webpack:///./saltgui/static/scripts/output/OutputYaml.js","webpack:///./saltgui/static/scripts/output/Output.js","webpack:///./saltgui/static/scripts/routes/GrainsMinionRoute.js","webpack:///./saltgui/static/scripts/routes/GrainsRoute.js","webpack:///./saltgui/static/scripts/routes/JobRoute.js","webpack:///./saltgui/static/scripts/routes/JobsRoute.js","webpack:///./saltgui/static/scripts/routes/KeysRoute.js","webpack:///./saltgui/static/scripts/routes/LoginRoute.js","webpack:///./saltgui/static/scripts/routes/MinionsRoute.js","webpack:///./saltgui/static/scripts/routes/PillarsMinionRoute.js","webpack:///./saltgui/static/scripts/routes/PillarsRoute.js","webpack:///./saltgui/static/scripts/routes/SchedulesRoute.js","webpack:///./saltgui/static/scripts/routes/SchedulesMinionRoute.js","webpack:///./saltgui/static/scripts/routes/TemplatesRoute.js","webpack:///./saltgui/static/scripts/Api.js","webpack:///./saltgui/static/scripts/Documentation.js","webpack:///./saltgui/static/scripts/RunType.js","webpack:///./saltgui/static/scripts/TargetType.js","webpack:///./saltgui/static/scripts/CommandLineParser.js","webpack:///./saltgui/static/scripts/CommandBox.js","webpack:///./saltgui/static/scripts/Router.js","webpack:///./saltgui/static/scripts/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sorttable","init","arguments","callee","done","_timer","clearInterval","document","createElement","getElementsByTagName","DATE_RE","forEach","table","className","search","makeSortable","length","the","appendChild","rows","insertBefore","firstChild","tHead","sortbottomrows","tFoot","tfo","headrow","cells","match","mtch","override","sorttable_sortfunction","guessType","sorttable_columnindex","sorttable_tbody","tBodies","dean_addEvent","innerSortFunction","e","this","reverse","replace","removeChild","getElementById","sortrevind","id","innerHTML","sortfwdind","theadrow","parentNode","childNodes","cell","nodeType","row_array","col","j","getInnerText","sort","tb","column","sortfn","sort_alpha","text","sort_numeric","possdate","first","parseInt","second","sort_ddmm","sort_mmdd","node","hasInputs","getAttribute","textContent","innerText","nodeName","toLowerCase","nodeValue","tbody","newrows","a","b","aa","parseFloat","isNaN","bb","y","dt1","dt2","shaker_sort","list","comp_func","swap","q","addEventListener","test","navigator","userAgent","setInterval","readyState","element","type","handler","$$guid","guid","events","handlers","handleEvent","event","returnValue","fixEvent","ownerDocument","parentWindow","window","$$handleEvent","preventDefault","stopPropagation","onload","cancelBubble","Array","array","block","context","Function","String","string","split","chr","index","resolve","elapsedToString","date","secondsPassed","Date","getTime","Math","round","err","content","classList","add","getQueryParam","vars","hashes","location","href","slice","indexOf","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","hashparts","push","return","escape","input","div","createTextNode","makeTargetText","targetType","targetPattern","returnText","Route","path","page_selector","menuitem_selector","router","_classCallCheck","RegExp","page_element","querySelector","menuitem_element1","menuitem_element2","td","evt","targetString","commandString","_runFullCommand","targettype","commandbox","_showManualRun","target","command","targetbox","startsWith","endsWith","tt","style","display","TargetType","setTargetType","cmdmenu","verifyAll","rawArguments","rawObject","argumentsText","_typeof","keys","includes","JSON","stringify","PageRoute","_Route","_this","PageRoute_classCallCheck","_getPrototypeOf","_runCommand","_assertThisInitialized","_runningJobs","_updateJobs","_updateMinions","_inherits","data","minions","getPageElement","hostnames","localStorage","setItem","hostname","minion_info","_updateOfflineMinion","_updateMinion","container","_getElement","_createTd","offline","minion","ipv4","fqdn_ip4","isArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_getBestIpNumber","address","ipv4parts","sorttable_customkey","padStart","setAttribute","_copyAddress","accepted","saltversion","os","osrelease","img","prepend","freeColumns","tr","numberOfJobs","detailedJob","jobContainer","jobs","_jobsToArray","_sortJobs","shown","job","_addDetailedJob","_addJob","jobsLoaded","keysLoaded","resolvePromise","jobsStatus","k","targetText","targetField","Target","Running","Returned","remove","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","statusField","_createDiv","functionText","startTimeText","Output","dateTimeStr","StartTime","DropDownMenu","addMenuItem","assign","encodeURIComponent","_createJobListener","jidText","substring","_decodeArgumentsText","Arguments","menu","parentElement","goTo","newArray","_i","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","DropDownMenu_classCallCheck","callback","tagName","nelement","menuDropdown","menuButton","menuDropdownContent","visibleCount","children","chld","verifyCallback","display_visible","title","button","_value","OutputDocumentation","OutputDocumentation_classCallCheck","filterKey","output","response","isOutputFormatAllowed","result","reduceFilterKey","_arr","OutputDocumentation_typeof","_arr2","_i2","isDocuKeyMatch","visualKey","selectedMinion","_arr3","_i3","hostResponse","_arr4","_i4","savedDocumentation","outputContainer","_arr5","_i5","out","trimRight","reference","words","console","log","link","OutputHighstate","OutputHighstate_classCallCheck","OutputHighstate_typeof","millis","concat","anyFailures","anySkips","task","getHostnameHtml","tasks","taskKey","___key___","__run_num__","succeeded","failed","skipped","total_millis","changes","taskDiv","span","color","append","__id__","__sls__","components","indent","comment","txt","change","lines","trim","line","old","new","taskkey","start_time","duration","getDurationClause","item","total","OutputJson","OutputJson_classCallCheck","OutputJson_typeof","indentLevel","str","formatSimpleJSON","separator","elem","repeat","formatJSON","OutputNested","OutputNested_classCallCheck","msg","prefix","suffix","ret","ustring","first_line","line_prefix","OutputNested_typeof","ind","val","join","OutputSaltGuiHighstate","OutputSaltGuiHighstate_classCallCheck","OutputSaltGuiHighstate_typeof","idx","addChangesInfo","OutputYaml","OutputYaml_classCallCheck","needQuotes","Number","OutputYaml_typeof","formatSimpleYAML","formatYAML","Output_classCallCheck","requestedOutputFormat","supportedOutputFormats","getItem","RUNNER","WHEEL","extraClass","patJid","obj","formatNESTED","formatObject","props","Output_typeof","prop","datetime_fraction_digits_str","datetime_fraction_digits_nr","dotPos","addVirtualMinion","commandArg","isDocumentationOutput","reduceDocumentationOutput","addDocumentationOutput","allDiv","isAsyncOutput","cntResponses","cntMinions","masterTriangle","_","childs","getElementsByClassName","MouseEvent","dispatchEvent","nrMultiLineBlocks","_loop","hasProperties","hostOutput","hostMultiLine","fndRepresentation","hostClass","hostLabel","getTextOutput","getNormalOutput","commandCmd","isHighStateOutput","getHighStateLabel","getHighStateOutput","triangle","GrainsMinionRoute","_PageRoute","GrainsMinionRoute_classCallCheck","GrainsMinionRoute_getPrototypeOf","_showGrains","GrainsMinionRoute_assertThisInitialized","GrainsMinionRoute_inherits","decodeURIComponent","Promise","reject","api","getGrainsItems","then","getJobs","getJobsActive","_this2","grains","gmp","deleteRow","grain","grain_value","require","GrainsRoute","GrainsRoute_classCallCheck","GrainsRoute_getPrototypeOf","_updateKeys","GrainsRoute_assertThisInitialized","previewGrainsText","_previewGrains","parse","childElementCount","lastChild","th","GrainsRoute_inherits","getMinions","getKeys","_addMinion","_addMenuItemShowGrains","_get","cnt","grainInfoText","grainInfoTd","grainName","JobRoute","JobRoute_classCallCheck","JobRoute_getPrototypeOf","_onJobData","JobRoute_assertThisInitialized","JobRoute_inherits","getJob","success","retcode","info","commandText","jobinfo","menuSection","minionList","Minions","lst","has1","has2","Result","_isResultOk","addResponseOutput","JobsRoute","JobsRoute_classCallCheck","JobsRoute_possibleConstructorReturn","JobsRoute_getPrototypeOf","JobsRoute_inherits","KeysRoute","KeysRoute_classCallCheck","KeysRoute_getPrototypeOf","KeysRoute_assertThisInitialized","_updateKeysFingerprint","KeysRoute_inherits","p1","p2","getKeysFingerprint","all","hosts","fingerprintElement","fingerprint","hostnames_pre","minions_pre","_addPreMinion","hostnames_accepted","_addMenuItemReject","_addMenuItemDelete","hostnames_denied","minions_denied","_addDeniedMinion","hostnames_rejected","minions_rejected","_addRejectedMinion","summary","KeysRoute_get","rejected","_addMenuItemAccept","denied","pre","extra","LoginRoute","LoginRoute_classCallCheck","LoginRoute_getPrototypeOf","loginPending","onLogin","LoginRoute_assertThisInitialized","onLoginSuccess","onLoginFailure","registerEventListeners","LoginRoute_inherits","eauthSelector","eauthValue","username","password","eauth","toggleForm","login","notice","backgroundColor","replaceChild","disabled","focus","authFailed","allowSubmit","MinionsRoute","MinionsRoute_classCallCheck","MinionsRoute_getPrototypeOf","MinionsRoute_assertThisInitialized","MinionsRoute_inherits","getConfigValues","_configvalues","templates","saltgui_templates","public_pillars","saltgui_public_pillars","preview_grains","saltgui_preview_grains","nodegroups","output_formats","saltgui_output_formats","datetime_fraction_digits","saltgui_datetime_fraction_digits","_addMenuItemStateApply","MinionsRoute_get","_this3","PillarsMinionRoute","PillarsMinionRoute_classCallCheck","PillarsMinionRoute_getPrototypeOf","_showPillars","PillarsMinionRoute_assertThisInitialized","PillarsMinionRoute_inherits","getPillarItems","pillars","pmp","_addMenuItemRefreshPillar","publicPillarsText","pillar","pillar_hidden","value_shown","pillar_shown","noPillarsMsg","PillarsRoute","PillarsRoute_classCallCheck","PillarsRoute_getPrototypeOf","PillarsRoute_assertThisInitialized","PillarsRoute_inherits","getPillarObfuscate","_addMenuItemShowPillars","PillarsRoute_get","pillarInfoText","pillarInfoTd","SchedulesRoute","SchedulesRoute_classCallCheck","SchedulesRoute_getPrototypeOf","SchedulesRoute_assertThisInitialized","SchedulesRoute_inherits","schedules","enabled","getScheduleList","_addMenuItemShowSchedules","SchedulesRoute_get","_fixMinion","scheduleinfo","statusDiv","SchedulesMinionRoute","SchedulesMinionRoute_classCallCheck","SchedulesMinionRoute_getPrototypeOf","_showSchedules","SchedulesMinionRoute_assertThisInitialized","SchedulesMinionRoute_inherits","page","schedule","jid_include","maxrunning","isJobDisabled","cmd","schedule_value","noSchedulesMsg","TemplatesRoute","TemplatesRoute_classCallCheck","TemplatesRoute_getPrototypeOf","_updateTemplates","TemplatesRoute_assertThisInitialized","_applyTemplate","TemplatesRoute_inherits","template","_addTemplate","description","HTTPError","_Error","status","message","Api_classCallCheck","Api_possibleConstructorReturn","Api_getPrototypeOf","Api_inherits","_wrapNativeSuper","Error","Api","apiurl","APIURL","apiRequest","sessionStorage","params","perms","token","removeItem","client","fun","catch","error","tgt_type","tgt","kwarg","return_yaml","method","route","options","url","headers","Accept","X-Auth-Token","Cache-Control","body","fetch","ok","json","statusText","Documentation","Documentation_classCallCheck","_manualRunMenuSysDocRun","_manualRunMenuSysDocPrepare","menuitem","docCommand","dummyCommand","tgtType","menuTargetType","_getRunParams","_onRunReturn","RunType","RunType_classCallCheck","runblock","menuRunType","setTitle","_updateRunTypeText","getRunType","runType","TargetType_classCallCheck","manualUpdateTargetTypeText","_targetTypeNodeGroupPrepare","setTargetTypeDefault","_system","_updateTargetTypeText","getTargetType","patNull","patBooleanFalse","patBooleanTrue","patInteger","patFloat","CommandLineParser","CommandLineParser_classCallCheck","toRun","args","firstSpaceChar","firstEqualSign","substr","endChar","objType","isFinite","CommandBox","CommandBox_classCallCheck","commandLineParser","_onRun","_hideManualRun","cmdbox","documentation","_registerEventListeners","createMenu","templatesText","_addKeyEventListener","autoSelectTargetType","selector","func","setRunTypeDefault","targetlist","nodegroup","option","reload","_showError","kwargs","functionToRun","shift","CommandBox_typeof","arg","Router","Router_classCallCheck","currentRoute","routes","registerRoute","isAuthenticated","valid_session","pathname","logout","onRegister","switchingRoute","getPath","history","pushState","showRoute","minionMenuItem","jobsMenuItem","from","querySelectorAll","elem1","getMenuItemElement1","elem2","getMenuItemElement2","afterLoad","hideRoute","getName","onShow","setTimeout","onHide","bootstrap"],"mappings":"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","file":"saltgui.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*\n  SortTable\n  version 2\n  7th April 2007\n  Stuart Langridge, http://www.kryogenix.org/code/browser/sorttable/\n\n  Instructions:\n  Download this file\n  Add <script src=\"sorttable.js\"></script> to your HTML\n  Add class=\"sortable\" to any table you'd like to make sortable\n  Click on the headers to sort\n\n  Thanks to many, many people for contributions and suggestions.\n  Licenced as X11: http://www.kryogenix.org/code/browser/licence.html\n  This basically means: do what you want with it.\n*/\n\n\nvar stIsIE = /*@cc_on!@*/false;\n\nsorttable = {\n  init: function() {\n    // quit if this function has already been called\n    if (arguments.callee.done) return;\n    // flag this function so we don't do the same thing twice\n    arguments.callee.done = true;\n    // kill the timer\n    if (_timer) clearInterval(_timer);\n\n    if (!document.createElement || !document.getElementsByTagName) return;\n\n    sorttable.DATE_RE = /^(\\d\\d?)[\\/\\.-](\\d\\d?)[\\/\\.-]((\\d\\d)?\\d\\d)$/;\n\n    forEach(document.getElementsByTagName('table'), function(table) {\n      if (table.className.search(/\\bsortable\\b/) != -1) {\n        sorttable.makeSortable(table);\n      }\n    });\n\n  },\n\n  makeSortable: function(table) {\n    if (table.getElementsByTagName('thead').length == 0) {\n      // table doesn't have a tHead. Since it should have, create one and\n      // put the first table row in it.\n      the = document.createElement('thead');\n      the.appendChild(table.rows[0]);\n      table.insertBefore(the,table.firstChild);\n    }\n    // Safari doesn't support table.tHead, sigh\n    if (table.tHead == null) table.tHead = table.getElementsByTagName('thead')[0];\n\n    if (table.tHead.rows.length != 1) return; // can't cope with two header rows\n\n    // Sorttable v1 put rows with a class of \"sortbottom\" at the bottom (as\n    // \"total\" rows, for example). This is B&R, since what you're supposed\n    // to do is put them in a tfoot. So, if there are sortbottom rows,\n    // for backwards compatibility, move them to tfoot (creating it if needed).\n    sortbottomrows = [];\n    for (var i=0; i<table.rows.length; i++) {\n      if (table.rows[i].className.search(/\\bsortbottom\\b/) != -1) {\n        sortbottomrows[sortbottomrows.length] = table.rows[i];\n      }\n    }\n    if (sortbottomrows) {\n      if (table.tFoot == null) {\n        // table doesn't have a tfoot. Create one.\n        tfo = document.createElement('tfoot');\n        table.appendChild(tfo);\n      }\n      for (var i=0; i<sortbottomrows.length; i++) {\n        tfo.appendChild(sortbottomrows[i]);\n      }\n      delete sortbottomrows;\n    }\n\n    // work through each column and calculate its type\n    headrow = table.tHead.rows[0].cells;\n    for (var i=0; i<headrow.length; i++) {\n      // manually override the type with a sorttable_type attribute\n      if (!headrow[i].className.match(/\\bsorttable_nosort\\b/)) { // skip this col\n        mtch = headrow[i].className.match(/\\bsorttable_([a-z0-9]+)\\b/);\n        if (mtch) { override = mtch[1]; }\n\t      if (mtch && typeof sorttable[\"sort_\"+override] == 'function') {\n\t        headrow[i].sorttable_sortfunction = sorttable[\"sort_\"+override];\n\t      } else {\n\t        headrow[i].sorttable_sortfunction = sorttable.guessType(table,i);\n\t      }\n\t      // make it clickable to sort\n\t      headrow[i].sorttable_columnindex = i;\n\t      headrow[i].sorttable_tbody = table.tBodies[0];\n\t      dean_addEvent(headrow[i],\"click\", sorttable.innerSortFunction = function(e) {\n\n          if (this.className.search(/\\bsorttable_sorted\\b/) != -1) {\n            // if we're already sorted by this column, just\n            // reverse the table, which is quicker\n            sorttable.reverse(this.sorttable_tbody);\n            this.className = this.className.replace('sorttable_sorted',\n                                                    'sorttable_sorted_reverse');\n            this.removeChild(document.getElementById('sorttable_sortfwdind'));\n            sortrevind = document.createElement('span');\n            sortrevind.id = \"sorttable_sortrevind\";\n            sortrevind.innerHTML = stIsIE ? '&nbsp<font face=\"webdings\">5</font>' : '&nbsp;\\u2191';\n            this.appendChild(sortrevind);\n            return;\n          }\n          if (this.className.search(/\\bsorttable_sorted_reverse\\b/) != -1) {\n            // if we're already sorted by this column in reverse, just\n            // re-reverse the table, which is quicker\n            sorttable.reverse(this.sorttable_tbody);\n            this.className = this.className.replace('sorttable_sorted_reverse',\n                                                    'sorttable_sorted');\n            this.removeChild(document.getElementById('sorttable_sortrevind'));\n            sortfwdind = document.createElement('span');\n            sortfwdind.id = \"sorttable_sortfwdind\";\n            sortfwdind.innerHTML = stIsIE ? '&nbsp<font face=\"webdings\">6</font>' : '&nbsp;\\u2193';\n            this.appendChild(sortfwdind);\n            return;\n          }\n\n          // remove sorttable_sorted classes\n          theadrow = this.parentNode;\n          forEach(theadrow.childNodes, function(cell) {\n            if (cell.nodeType == 1) { // an element\n              cell.className = cell.className.replace('sorttable_sorted_reverse','');\n              cell.className = cell.className.replace('sorttable_sorted','');\n            }\n          });\n          sortfwdind = document.getElementById('sorttable_sortfwdind');\n          if (sortfwdind) { sortfwdind.parentNode.removeChild(sortfwdind); }\n          sortrevind = document.getElementById('sorttable_sortrevind');\n          if (sortrevind) { sortrevind.parentNode.removeChild(sortrevind); }\n\n          this.className += ' sorttable_sorted';\n          sortfwdind = document.createElement('span');\n          sortfwdind.id = \"sorttable_sortfwdind\";\n          sortfwdind.innerHTML = stIsIE ? '&nbsp<font face=\"webdings\">6</font>' : '&nbsp;\\u2193';\n          this.appendChild(sortfwdind);\n\n\t        // build an array to sort. This is a Schwartzian transform thing,\n\t        // i.e., we \"decorate\" each row with the actual sort key,\n\t        // sort based on the sort keys, and then put the rows back in order\n\t        // which is a lot faster because you only do getInnerText once per row\n\t        row_array = [];\n\t        col = this.sorttable_columnindex;\n\t        rows = this.sorttable_tbody.rows;\n\t        for (var j=0; j<rows.length; j++) {\n\t          row_array[row_array.length] = [sorttable.getInnerText(rows[j].cells[col]), rows[j]];\n\t        }\n\t        /* If you want a stable sort, uncomment the following line */\n\t        //sorttable.shaker_sort(row_array, this.sorttable_sortfunction);\n\t        /* and comment out this one */\n\t        row_array.sort(this.sorttable_sortfunction);\n\n\t        tb = this.sorttable_tbody;\n\t        for (var j=0; j<row_array.length; j++) {\n\t          tb.appendChild(row_array[j][1]);\n\t        }\n\n\t        delete row_array;\n\t      });\n\t    }\n    }\n  },\n\n  guessType: function(table, column) {\n    // guess the type of a column based on its first non-blank row\n    sortfn = sorttable.sort_alpha;\n    for (var i=0; i<table.tBodies[0].rows.length; i++) {\n      text = sorttable.getInnerText(table.tBodies[0].rows[i].cells[column]);\n      if (text != '') {\n        if (text.match(/^-?[�$�]?[\\d,.]+%?$/)) {\n          return sorttable.sort_numeric;\n        }\n        // check for a date: dd/mm/yyyy or dd/mm/yy\n        // can have / or . or - as separator\n        // can be mm/dd as well\n        possdate = text.match(sorttable.DATE_RE)\n        if (possdate) {\n          // looks like a date\n          first = parseInt(possdate[1]);\n          second = parseInt(possdate[2]);\n          if (first > 12) {\n            // definitely dd/mm\n            return sorttable.sort_ddmm;\n          } else if (second > 12) {\n            return sorttable.sort_mmdd;\n          } else {\n            // looks like a date, but we can't tell which, so assume\n            // that it's dd/mm (English imperialism!) and keep looking\n            sortfn = sorttable.sort_ddmm;\n          }\n        }\n      }\n    }\n    return sortfn;\n  },\n\n  getInnerText: function(node) {\n    // gets the text we want to use for sorting for a cell.\n    // strips leading and trailing whitespace.\n    // this is *not* a generic getInnerText function; it's special to sorttable.\n    // for example, you can override the cell text with a customkey attribute.\n    // it also gets .value for <input> fields.\n\n    if (!node) return \"\";\n\n    hasInputs = (typeof node.getElementsByTagName == 'function') &&\n                 node.getElementsByTagName('input').length;\n\n    if (node.getAttribute(\"sorttable_customkey\") != null) {\n      return node.getAttribute(\"sorttable_customkey\");\n    }\n    else if (typeof node.textContent != 'undefined' && !hasInputs) {\n      return node.textContent.replace(/^\\s+|\\s+$/g, '');\n    }\n    else if (typeof node.innerText != 'undefined' && !hasInputs) {\n      return node.innerText.replace(/^\\s+|\\s+$/g, '');\n    }\n    else if (typeof node.text != 'undefined' && !hasInputs) {\n      return node.text.replace(/^\\s+|\\s+$/g, '');\n    }\n    else {\n      switch (node.nodeType) {\n        case 3:\n          if (node.nodeName.toLowerCase() == 'input') {\n            return node.value.replace(/^\\s+|\\s+$/g, '');\n          }\n        case 4:\n          return node.nodeValue.replace(/^\\s+|\\s+$/g, '');\n          break;\n        case 1:\n        case 11:\n          var innerText = '';\n          for (var i = 0; i < node.childNodes.length; i++) {\n            innerText += sorttable.getInnerText(node.childNodes[i]);\n          }\n          return innerText.replace(/^\\s+|\\s+$/g, '');\n          break;\n        default:\n          return '';\n      }\n    }\n  },\n\n  reverse: function(tbody) {\n    // reverse the rows in a tbody\n    newrows = [];\n    for (var i=0; i<tbody.rows.length; i++) {\n      newrows[newrows.length] = tbody.rows[i];\n    }\n    for (var i=newrows.length-1; i>=0; i--) {\n       tbody.appendChild(newrows[i]);\n    }\n    delete newrows;\n  },\n\n  /* sort functions\n     each sort function takes two parameters, a and b\n     you are comparing a[0] and b[0] */\n  sort_numeric: function(a,b) {\n    aa = parseFloat(a[0].replace(/[^0-9.-]/g,''));\n    if (isNaN(aa)) aa = 0;\n    bb = parseFloat(b[0].replace(/[^0-9.-]/g,''));\n    if (isNaN(bb)) bb = 0;\n    return aa-bb;\n  },\n  sort_alpha: function(a,b) {\n    if (a[0]==b[0]) return 0;\n    if (a[0]<b[0]) return -1;\n    return 1;\n  },\n  sort_ddmm: function(a,b) {\n    mtch = a[0].match(sorttable.DATE_RE);\n    y = mtch[3]; m = mtch[2]; d = mtch[1];\n    if (m.length == 1) m = '0'+m;\n    if (d.length == 1) d = '0'+d;\n    dt1 = y+m+d;\n    mtch = b[0].match(sorttable.DATE_RE);\n    y = mtch[3]; m = mtch[2]; d = mtch[1];\n    if (m.length == 1) m = '0'+m;\n    if (d.length == 1) d = '0'+d;\n    dt2 = y+m+d;\n    if (dt1==dt2) return 0;\n    if (dt1<dt2) return -1;\n    return 1;\n  },\n  sort_mmdd: function(a,b) {\n    mtch = a[0].match(sorttable.DATE_RE);\n    y = mtch[3]; d = mtch[2]; m = mtch[1];\n    if (m.length == 1) m = '0'+m;\n    if (d.length == 1) d = '0'+d;\n    dt1 = y+m+d;\n    mtch = b[0].match(sorttable.DATE_RE);\n    y = mtch[3]; d = mtch[2]; m = mtch[1];\n    if (m.length == 1) m = '0'+m;\n    if (d.length == 1) d = '0'+d;\n    dt2 = y+m+d;\n    if (dt1==dt2) return 0;\n    if (dt1<dt2) return -1;\n    return 1;\n  },\n\n  shaker_sort: function(list, comp_func) {\n    // A stable sort function to allow multi-level sorting of data\n    // see: http://en.wikipedia.org/wiki/Cocktail_sort\n    // thanks to Joseph Nahmias\n    var b = 0;\n    var t = list.length - 1;\n    var swap = true;\n\n    while(swap) {\n        swap = false;\n        for(var i = b; i < t; ++i) {\n            if ( comp_func(list[i], list[i+1]) > 0 ) {\n                var q = list[i]; list[i] = list[i+1]; list[i+1] = q;\n                swap = true;\n            }\n        } // for\n        t--;\n\n        if (!swap) break;\n\n        for(var i = t; i > b; --i) {\n            if ( comp_func(list[i], list[i-1]) < 0 ) {\n                var q = list[i]; list[i] = list[i-1]; list[i-1] = q;\n                swap = true;\n            }\n        } // for\n        b++;\n\n    } // while(swap)\n  }\n}\n\n/* ******************************************************************\n   Supporting functions: bundled here to avoid depending on a library\n   ****************************************************************** */\n\n// Dean Edwards/Matthias Miller/John Resig\n\n/* for Mozilla/Opera9 */\nif (document.addEventListener) {\n    document.addEventListener(\"DOMContentLoaded\", sorttable.init, false);\n}\n\n/* for Internet Explorer */\n/*@cc_on @*/\n/*@if (@_win32)\n    document.write(\"<script id=__ie_onload defer src=javascript:void(0)><\\/script>\");\n    var script = document.getElementById(\"__ie_onload\");\n    script.onreadystatechange = function() {\n        if (this.readyState == \"complete\") {\n            sorttable.init(); // call the onload handler\n        }\n    };\n/*@end @*/\n\n/* for Safari */\nif (/WebKit/i.test(navigator.userAgent)) { // sniff\n    var _timer = setInterval(function() {\n        if (/loaded|complete/.test(document.readyState)) {\n            sorttable.init(); // call the onload handler\n        }\n    }, 10);\n}\n\n/* for other browsers */\nwindow.onload = sorttable.init;\n\n// written by Dean Edwards, 2005\n// with input from Tino Zijdel, Matthias Miller, Diego Perini\n\n// http://dean.edwards.name/weblog/2005/10/add-event/\n\nfunction dean_addEvent(element, type, handler) {\n\tif (element.addEventListener) {\n\t\telement.addEventListener(type, handler, false);\n\t} else {\n\t\t// assign each event handler a unique ID\n\t\tif (!handler.$$guid) handler.$$guid = dean_addEvent.guid++;\n\t\t// create a hash table of event types for the element\n\t\tif (!element.events) element.events = {};\n\t\t// create a hash table of event handlers for each element/event pair\n\t\tvar handlers = element.events[type];\n\t\tif (!handlers) {\n\t\t\thandlers = element.events[type] = {};\n\t\t\t// store the existing event handler (if there is one)\n\t\t\tif (element[\"on\" + type]) {\n\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t\t}\n\t\t}\n\t\t// store the event handler in the hash table\n\t\thandlers[handler.$$guid] = handler;\n\t\t// assign a global event handler to do all the work\n\t\telement[\"on\" + type] = handleEvent;\n\t}\n};\n// a counter used to create unique IDs\ndean_addEvent.guid = 1;\n\nfunction removeEvent(element, type, handler) {\n\tif (element.removeEventListener) {\n\t\telement.removeEventListener(type, handler, false);\n\t} else {\n\t\t// delete the event handler from the hash table\n\t\tif (element.events && element.events[type]) {\n\t\t\tdelete element.events[type][handler.$$guid];\n\t\t}\n\t}\n};\n\nfunction handleEvent(event) {\n\tvar returnValue = true;\n\t// grab the event object (IE uses a global event object)\n\tevent = event || fixEvent(((this.ownerDocument || this.document || this).parentWindow || window).event);\n\t// get a reference to the hash table of event handlers\n\tvar handlers = this.events[event.type];\n\t// execute each event handler\n\tfor (var i in handlers) {\n\t\tthis.$$handleEvent = handlers[i];\n\t\tif (this.$$handleEvent(event) === false) {\n\t\t\treturnValue = false;\n\t\t}\n\t}\n\treturn returnValue;\n};\n\nfunction fixEvent(event) {\n\t// add W3C standard event methods\n\tevent.preventDefault = fixEvent.preventDefault;\n\tevent.stopPropagation = fixEvent.stopPropagation;\n\treturn event;\n};\nfixEvent.preventDefault = function() {\n\tthis.returnValue = false;\n};\nfixEvent.stopPropagation = function() {\n  this.cancelBubble = true;\n}\n\n// Dean's forEach: http://dean.edwards.name/base/forEach.js\n/*\n\tforEach, version 1.0\n\tCopyright 2006, Dean Edwards\n\tLicense: http://www.opensource.org/licenses/mit-license.php\n*/\n\n// array-like enumeration\nif (!Array.forEach) { // mozilla already supports this\n\tArray.forEach = function(array, block, context) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tblock.call(context, array[i], i, array);\n\t\t}\n\t};\n}\n\n// generic enumeration\nFunction.prototype.forEach = function(object, block, context) {\n\tfor (var key in object) {\n\t\tif (typeof this.prototype[key] == \"undefined\") {\n\t\t\tblock.call(context, object[key], key, object);\n\t\t}\n\t}\n};\n\n// character enumeration\nString.forEach = function(string, block, context) {\n\tArray.forEach(string.split(\"\"), function(chr, index) {\n\t\tblock.call(context, chr, index, string);\n\t});\n};\n\n// globally resolve forEach enumeration\nvar forEach = function(object, block, context) {\n\tif (object) {\n\t\tvar resolve = Object; // default\n\t\tif (object instanceof Function) {\n\t\t\t// functions have a \"length\" property\n\t\t\tresolve = Function;\n\t\t} else if (object.forEach instanceof Function) {\n\t\t\t// the object implements a custom forEach method so use that\n\t\t\tobject.forEach(block, context);\n\t\t\treturn;\n\t\t} else if (typeof object == \"string\") {\n\t\t\t// the object is a string\n\t\t\tresolve = String;\n\t\t} else if (typeof object.length == \"number\") {\n\t\t\t// the object is array-like\n\t\t\tresolve = Array;\n\t\t}\n\t\tresolve.forEach(object, block, context);\n\t}\n};\n\n","window.elapsedToString = function(date) {\n    try {\n        const secondsPassed = (new Date().getTime() / 1000) - (date.getTime() / 1000);\n\n        if(secondsPassed < 0) return \"Magic happened in the future\";\n        if(secondsPassed < 20) return \"A few moments ago\";\n        if(secondsPassed < 120) return \"A few minutes ago\";\n\n        if(secondsPassed < 60 * 60) {\n            const minutes = Math.round(secondsPassed / 60);\n            return minutes + \" minute(s) ago\";\n        }\n\n        if(secondsPassed < 60 * 60 * 24) {\n            const hours = Math.round(secondsPassed / 60 / 60);\n            return hours + \" hour(s) ago\";\n        }\n\n        if(secondsPassed < 60 * 60 * 24 * 2) {\n            return \"Yesterday\";\n        }\n\n        if(secondsPassed < 60 * 60 * 24 * 30) {\n            const days = Math.round(secondsPassed / 60 / 60 / 24);\n            return days + \" days ago\";\n        }\n\n        return \"A long time ago, in a galaxy far, far away\";\n    }\n    catch(err) {\n    //console.error(err);\n        return \"It did happen, when I don't know\";\n    }\n};\n\nwindow.createElement = function(type, className, content) {\n    const element = document.createElement(type);\n    element.classList.add(className);\n    if(content !== \"\") element.innerHTML = content;\n    return element;\n};\n\nwindow.getQueryParam = function(name) {\n    const vars = [];\n    const hashes = window.location.href.slice(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n    for(const hash of hashes) {\n        const hashparts = hash.split(\"=\");\n        vars.push(hashparts[0]);\n        if(hashparts[0] === name) return hashparts[1];\n    }\n    return undefined;\n};\n\nwindow.escape = function(input) {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(input));\n    return div.innerHTML;\n};\n\nwindow.makeTargetText = function(targetType, targetPattern) {\n    // note that \"glob\" is the most common case\n    // when used from the command-line, that target-type\n    // is not even specified.\n    // therefore we suppress that one\n\n    // note that due to bug in 2018.3, all finished jobs\n    // will be shown as if of type \"list\"\n    // therefore we suppress that one\n\n    let returnText = \"\";\n    if(targetType !== \"glob\" && targetType !== \"list\") {\n        returnText = targetType + \" \";\n    }\n    returnText += targetPattern;\n    return returnText;\n};\n","export class Route {\n\n    constructor(path, name, page_selector, menuitem_selector, router) {\n        this.path = new RegExp(path);\n        this.name = name;\n        this.page_element = document.querySelector(page_selector);\n        this.router = router;\n        if(menuitem_selector) {\n            this.menuitem_element1 = document.querySelector(menuitem_selector + \"1\");\n            this.menuitem_element2 = document.querySelector(menuitem_selector + \"2\");\n        }\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getPath() {\n        return this.path;\n    }\n\n    getPageElement() {\n        return this.page_element;\n    }\n\n    getMenuItemElement1() {\n        return this.menuitem_element1;\n    }\n\n    getMenuItemElement2() {\n        return this.menuitem_element2;\n    }\n\n    static _createTd(className, content) {\n        const td = document.createElement(\"td\");\n        if(className) td.className = className;\n        td.innerText = content;\n        return td;\n    }\n\n    static _createDiv(className, content) {\n        const div = document.createElement(\"div\");\n        if(className) div.className = className;\n        div.innerText = content;\n        return div;\n    }\n\n    _runCommand(evt, targetString, commandString) {\n        this._runFullCommand(evt, \"\", targetString, commandString);\n    }\n\n    _runFullCommand(evt, targettype, targetString, commandString) {\n        this.router.commandbox._showManualRun(evt);\n        const target = document.querySelector(\"#target\");\n        const command = document.querySelector(\"#command\");\n        const targetbox = document.querySelector(\"#targetbox\");\n\n        // handle https://github.com/saltstack/salt/issues/48734\n        if(targetString === \"unknown-target\") {\n            // target was lost...\n            targetString = \"\";\n            targettype = \"\";\n        }\n        if(commandString.startsWith(\"wheel.\") && targetString.endsWith(\"_master\")) {\n            // target was {hostname}_master...\n            // too bad when the real hostname is actually like that :-(\n            targetString = \"\";\n            targettype = \"\";\n        }\n        if(commandString.startsWith(\"runners.\")) {\n            // runners do not have a target, so do not bother\n            targetString = \"\";\n            targettype = \"\";\n        }\n\n        if(!targetString) targetString = \"\";\n        if(!commandString) commandString = \"\";\n\n        if(targettype) {\n            let tt = targettype;\n            // show the extended selection controls when\n            targetbox.style.display = \"inherit\";\n            if(tt !== \"glob\" && tt !== \"list\" && tt !== \"compound\" && tt !== \"nodegroup\") {\n                // we don't support that, revert to standard (not default)\n                tt = \"glob\";\n            }\n            TargetType.setTargetType(tt);\n        }\n\n        target.value = targetString;\n        command.value = commandString;\n        // the menu may become (in)visible due to content of command field\n        this.router.commandbox.cmdmenu.verifyAll();\n    }\n\n    _decodeArgumentsText(rawArguments) {\n        const rawObject = rawArguments;\n        let argumentsText = \"\";\n\n        switch (typeof rawObject) {\n        case \"undefined\":\n            argumentsText = \"\";\n            break;\n        case \"object\": {      \n            // object args need special treatment\n            const keys = Object.keys(rawObject).sort();\n            for(const key of keys) {\n                // remove speciall parameters like __kwargs__\n                if(!key.includes(\"__\")) {\n                    argumentsText = argumentsText + key + \"=\" + rawObject[key];\n                }\n            }\n            break;\n        }\n        default:\n            argumentsText = JSON.stringify(rawObject);\n            break;\n        }\n\n        return argumentsText;\n    }\n\n}\n","import {Route} from './Route';\n\nexport class PageRoute extends Route {\n\n    constructor(path, name, page_selector, menuitem_selector, router) {\n        super(path, name, page_selector, menuitem_selector, router);\n\n        this._runCommand = this._runCommand.bind(this);\n        this._runningJobs = this._runningJobs.bind(this);\n        this._updateJobs = this._updateJobs.bind(this);\n        this._updateMinions = this._updateMinions.bind(this);\n    }\n\n    _updateMinions(data) {\n        const minions = data.return[0];\n\n        const list = this.getPageElement().querySelector(\"#minions\");\n        const hostnames = Object.keys(minions).sort();\n\n        // save for the autocompletion\n        window.localStorage.setItem(\"minions\", JSON.stringify(hostnames));\n\n        for(const hostname of hostnames) {\n            const minion_info = minions[hostname];\n\n            // minions can be offline, then the info will be false\n            if(minion_info === false) {\n                this._updateOfflineMinion(list, hostname);\n            } else {\n                this._updateMinion(list, minion_info, hostname);\n            }\n        }\n    }\n\n    _getElement(container, id) {\n        let element = document.getElementById(id);\n\n        if(element === null) {\n            // minion not found on screen...\n            // construct a basic element that can be updated\n            element = document.createElement(\"tr\");\n            element.id = id;\n            container.appendChild(element);\n            return element;\n        }\n\n        // remove existing content\n        while(element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n\n        return element;\n    }\n\n    _updateOfflineMinion(container, hostname) {\n        const element = this._getElement(container, hostname);\n\n        element.appendChild(Route._createTd(\"hostname\", hostname));\n\n        const offline = Route._createTd(\"status\", \"offline\");\n        offline.classList.add(\"offline\");\n        element.appendChild(offline);\n    }\n\n    _getBestIpNumber(minion) {\n        if(!minion) return null;\n        const ipv4 = minion.fqdn_ip4;\n        if(!ipv4) return null;\n        // either a string or something strange\n        if(!Array.isArray(ipv4)) return ipv4;\n\n        // so, it is an array\n\n        // get the public IP number (if any)\n        for(const s of ipv4) {\n            // local = 127.0.0.0/8\n            if(s.startsWith(\"127.\")) continue;\n            // private A = 10.0.0.0/8\n            if(s.startsWith(\"10.\")) continue;\n            // private B = 172.16.0.0/20\n            if(s.startsWith(\"172.16.\")) continue;\n            if(s.startsWith(\"172.17.\")) continue;\n            if(s.startsWith(\"172.18.\")) continue;\n            if(s.startsWith(\"172.19.\")) continue;\n            if(s.startsWith(\"172.20.\")) continue;\n            if(s.startsWith(\"172.21.\")) continue;\n            if(s.startsWith(\"172.22.\")) continue;\n            if(s.startsWith(\"172.23.\")) continue;\n            if(s.startsWith(\"172.24.\")) continue;\n            if(s.startsWith(\"172.25.\")) continue;\n            if(s.startsWith(\"172.26.\")) continue;\n            if(s.startsWith(\"172.27.\")) continue;\n            if(s.startsWith(\"172.28.\")) continue;\n            if(s.startsWith(\"172.29.\")) continue;\n            if(s.startsWith(\"172.30.\")) continue;\n            if(s.startsWith(\"172.31.\")) continue;\n            // private C = 192.168.0.0/16\n            if(s.startsWith(\"192.168.\")) continue;\n            // not a local/private address, therefore it is public\n            return s;\n        }\n\n        // no public IP number\n        // get the private IP number (if any)\n        for(const s of ipv4) {\n            // local = 127.0.0.0/8\n            if(s.startsWith(\"127.\")) continue;\n            // not a local address, therefore it is private\n            return s;\n        }\n\n        // just pick the first one, should then be a local address\n        return ipv4[0];\n    }\n\n    _updateMinion(container, minion, hostname) {\n\n        const element = this._getElement(container, hostname);\n\n        element.appendChild(Route._createTd(\"hostname\", hostname));\n\n        const ipv4 = this._getBestIpNumber(minion);\n        if(ipv4) {\n            const address = Route._createTd(\"status\", ipv4);\n            // ipnumbers do not sort well, reformat into something sortable\n            const ipv4parts = ipv4.split(\".\");\n            let sorttable_customkey = \"\";\n            if(ipv4parts.length === 4) {\n                // never mind adding '.'; this is only a sort-key\n                for(let i = 0; i < 4; i++) sorttable_customkey += ipv4parts[i].padStart(3, \"0\");\n                address.setAttribute(\"sorttable_customkey\", sorttable_customkey);\n            }\n            address.classList.add(\"address\");\n            address.setAttribute(\"tabindex\", -1);\n            address.addEventListener(\"click\", this._copyAddress);\n            element.appendChild(address);\n        } else {\n            const accepted = Route._createTd(\"status\", \"accepted\");\n            accepted.classList.add(\"accepted\");\n            element.appendChild(accepted);\n        }\n\n        let saltversion = \"---\";\n        if(minion && minion.saltversion) saltversion = minion.saltversion;\n        if(minion) element.appendChild(Route._createTd(\"saltversion\", saltversion));\n\n        let os = \"---\";\n        if(minion && minion.os && minion.osrelease) os = minion.os + \" \" + minion.osrelease;\n        else if(minion && minion.os) os = minion.os;\n        if(minion) {\n            const td = Route._createTd(\"os\", os);\n            if(minion.os) {\n                const img = document.createElement(\"img\");\n                img.setAttribute(\"src\", \"static/images/os-\" + minion.os.replace(\" \", \"-\").toLowerCase() + \".png\");\n                img.classList.add(\"osimage\");\n                td.prepend(img);\n            }\n            element.appendChild(td);\n        }\n    }\n\n    _addMinion(container, hostname, freeColumns = 0) {\n\n        let element = document.getElementById(hostname);\n        if(element !== null) {\n            // minion already on screen...\n            return;\n        }\n\n        element = document.createElement(\"tr\");\n        element.id = hostname;\n\n        element.appendChild(Route._createTd(\"hostname\", hostname));\n\n        const minion = Route._createTd(\"status\", \"accepted\");\n        minion.classList.add(\"accepted\");\n        element.appendChild(minion);\n\n        element.appendChild(Route._createTd(\"os\", \"loading...\"));\n\n        // fill out the number of columns to that of the header\n        while(element.cells.length < container.tHead.rows[0].cells.length - freeColumns) {\n            element.appendChild(Route._createTd(\"\", \"\"));\n        }\n\n        container.tBodies[0].appendChild(element);\n    }\n\n    _addNone(container) {\n        const tr = document.createElement(\"tr\");\n        const td = Route._createTd(\"hostname\", \"none\");\n        td.setAttribute(\"colspan\", container.rows[0].cells.length);\n        tr.appendChild(td);\n        container.appendChild(tr);\n    }\n\n    _updateJobs(data, numberOfJobs = 7, detailedJob = false) {\n        const jobContainer = this.getPageElement().querySelector(\".jobs tbody\");\n        const jobs = this._jobsToArray(data.return[0]);\n        this._sortJobs(jobs);\n\n        //Add <numberOfJobs> most recent jobs\n        let shown = 0;\n        let i = 0;\n        while(shown < numberOfJobs && jobs[i] !== undefined) {\n            const job = jobs[i];\n            i = i + 1;\n            if(job.Function === \"grains.append\") continue;\n            if(job.Function === \"grains.delkey\") continue;\n            if(job.Function === \"grains.delval\") continue;\n            if(job.Function === \"grains.items\") continue;\n            if(job.Function === \"grains.setval\") continue;\n            if(job.Function === \"pillar.items\") continue;\n            if(job.Function === \"pillar.obfuscate\") continue;\n            if(job.Function === \"runner.jobs.active\") continue;\n            if(job.Function === \"runner.jobs.list_job\") continue;\n            if(job.Function === \"runner.jobs.list_jobs\") continue;\n            if(job.Function === \"saltutil.find_job\") continue;\n            if(job.Function === \"saltutil.refresh_grains\") continue;\n            if(job.Function === \"saltutil.refresh_pillar\") continue;\n            if(job.Function === \"saltutil.running\") continue;\n            if(job.Function === \"schedule.delete\") continue;\n            if(job.Function === \"schedule.disable\") continue;\n            if(job.Function === \"schedule.disable_job\") continue;\n            if(job.Function === \"schedule.enable\") continue;\n            if(job.Function === \"schedule.enable_job\") continue;\n            if(job.Function === \"schedule.list\") continue;\n            if(job.Function === \"schedule.modify\") continue;\n            if(job.Function === \"schedule.run_job\") continue;\n            if(job.Function === \"sys.doc\") continue;\n            if(job.Function === \"wheel.config.values\") continue;\n            if(job.Function === \"wheel.key.accept\") continue;\n            if(job.Function === \"wheel.key.delete\") continue;\n            if(job.Function === \"wheel.key.list_all\") continue;\n            if(job.Function === \"wheel.key.reject\") continue;\n            if(job.Function === \"wheel.key.finger\") continue;\n\n            if(detailedJob === true) {\n                this._addDetailedJob(jobContainer, job);\n            } else {\n                this._addJob(jobContainer, job);\n            }\n            shown = shown + 1;\n        }\n        this.jobsLoaded = true;\n        if(this.keysLoaded && this.jobsLoaded) this.resolvePromise();\n    }\n\n    _runningJobs(data, jobsStatus = false) {\n        const jobs = data.return[0];\n\n        // update all running jobs\n        for(const k in jobs)\n        {\n            const job = jobs[k];\n\n            let targetText = \"\";\n            let targetField;\n            if(jobsStatus === true) {\n                targetField = document.querySelector(\".jobs #job\" + k + \" .status\");\n            } else {\n                // start with same text as for _addJob\n                targetText = window.makeTargetText(job[\"Target-type\"], job.Target) + \", \";\n                targetField = document.querySelector(\".jobs #job\" + k + \" .target\");\n            }\n            // then add the operational statistics\n            if(job.Running.length > 0)\n                targetText = targetText + job.Running.length + \" running\";\n            if(job.Returned.length > 0)\n                targetText = targetText + \", \" + job.Returned.length + \" returned\";\n\n            // the field may not (yet) be on the screen\n            if(!targetField) continue;\n            targetField.classList.remove(\"no_status\");\n            targetField.innerText = targetText;\n        }\n\n        // update all finished jobs\n        for(const tr of document.querySelector(\"table#jobs tbody\").rows) {\n            const statusField = tr.querySelector(\".no_status\");\n            if(!statusField) continue;\n            statusField.classList.remove(\"no_status\");\n            statusField.innerText = \"done\";\n        }\n    }\n\n    _addJob(container, job) {\n        const tr = document.createElement(\"tr\");\n\n        const td = document.createElement(\"td\");\n\n        td.id = \"job\" + job.id;\n        const targetText = window.makeTargetText(job[\"Target-type\"], job.Target);\n        td.appendChild(Route._createDiv(\"target\", targetText));\n\n        const functionText = job.Function;\n        td.appendChild(Route._createDiv(\"function\", functionText));\n\n        const startTimeText = Output.dateTimeStr(job.StartTime);\n        td.appendChild(Route._createDiv(\"time\", startTimeText));\n\n        tr.appendChild(td);\n\n        const menu = new DropDownMenu(tr);\n        menu.addMenuItem(\"Show&nbsp;details\", function(evt) {\n            window.location.assign(\"/job?id=\" + encodeURIComponent(job.id));\n        }.bind(this));\n\n        container.appendChild(tr);\n\n        tr.addEventListener(\"click\", this._createJobListener(job.id));\n    }\n\n    _addDetailedJob(container, job) {\n        const tr = document.createElement(\"tr\");\n        tr.id = \"job\" + job.id;\n        const jidText = job.id;\n        tr.appendChild(Route._createTd(\"job\" + job.id, jidText));\n\n        let targetText = window.makeTargetText(job[\"Target-type\"], job.Target);\n        if(targetText.length > 50) {\n            // prevent column becoming too wide\n            targetText = targetText.substring(0, 50) + \"...\";\n        }\n        tr.appendChild(Route._createTd(\"target\", targetText));\n\n        const argumentsText = this._decodeArgumentsText(job.Arguments[0]);\n        const functionText = job.Function + \" \" + argumentsText;\n        tr.appendChild(Route._createTd(\"function\", functionText));\n\n        const startTimeText = job.StartTime;\n        tr.appendChild(Route._createTd(\"starttime\", startTimeText));\n\n        const menu = new DropDownMenu(tr);\n        menu.addMenuItem(\"Show&nbsp;details\", function(evt) {\n            window.location.assign(\"/job?id=\" + encodeURIComponent(job.id));\n        }.bind(this));\n        menu.addMenuItem(\"Re-run&nbsp;job...\", function(evt) {\n            this._runFullCommand(evt, job[\"Target-type\"], job.Target, functionText);\n        }.bind(this));\n\n        const td = Route._createTd(\"status\", \"loading...\");\n        td.classList.add(\"no_status\");\n        tr.appendChild(td);\n    \n        // fill out the number of columns to that of the header\n        while(tr.cells.length < container.parentElement.tHead.rows[0].cells.length) {\n            tr.appendChild(Route._createTd(\"\", \"\"));\n        }\n\n        container.appendChild(tr);\n\n        tr.addEventListener(\"click\", evt => window.location.assign(\"/job?id=\" + encodeURIComponent(job.id)));\n    }\n\n    _createJobListener(id) {\n        const router = this.router;\n        return function() {\n            router.goTo(\"/job?id=\" + encodeURIComponent(id));\n        };\n    }\n\n    _jobsToArray(jobs) {\n        const keys = Object.keys(jobs);\n        const newArray = [];\n\n        for(const key of keys) {\n            const job = jobs[key];\n            job.id = key;\n            newArray.push(job);\n        }\n\n        return newArray;\n    }\n\n    _sortJobs(jobs) {\n        jobs.sort(function(a, b){\n            // The id is already a integer value based on the date, let's use\n            // it to sort the jobs\n            if(a.id < b.id) return 1;\n            if(a.id > b.id) return -1;\n            return 0;\n        });\n    }\n\n    _copyAddress(evt) {\n        const target = evt.target;\n        const selection = window.getSelection();\n        const range = document.createRange();\n\n        range.selectNodeContents(target);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        document.execCommand(\"copy\");\n\n        evt.stopPropagation();\n    }\n\n}\n","import { Route } from './routes';\n\nexport class DropDownMenu {\n\n    // Creates an empty dropdown menu\n    // The visual clue for the menu is added to the given element\n    constructor(element) {\n\n        this.callback = this.callback.bind(this);\n        this.verifyAll = this.verifyAll.bind(this);\n\n        // allow reduced code on the caller side\n        if (element.tagName === \"TR\") {\n            const nelement = Route._createTd(\"\", \"\");\n            element.appendChild(nelement);\n            element = nelement;\n        }\n\n        this.menuDropdown = Route._createDiv(\"run-command-button\", \"\");\n\n        switch (element.id) {\n        case \"cmdbox\":\n        // 1F4D6 (D83D+DCD6) = A BOOK\n            this.menuButton = Route._createDiv(\"menu-dropdown\", \"\\uD83D\\uDCD6\");\n            // hide the menu until it receives menu-items\n            this.verifyAll();\n            break;\n\n        default:\n        // 2261 = MATHEMATICAL OPERATOR IDENTICAL TO (aka \"hamburger\")\n        // assume it will be a command menu\n            this.menuButton = Route._createDiv(\"menu-dropdown\", \"\\u2261\");\n            // hide the menu until it receives menu-items\n            this.verifyAll();\n        }\n        this.menuDropdown.appendChild(this.menuButton);\n        this.menuDropdownContent = Route._createDiv(\"menu-dropdown-content\", \"\");\n        this.menuDropdown.appendChild(this.menuDropdownContent);\n        this.menuDropdown.addEventListener(\"mouseenter\", this.verifyAll);\n        element.appendChild(this.menuDropdown);\n    }\n\n    verifyAll() {\n        let visibleCount = 0;\n        if (this.menuDropdownContent) {\n            for (const chld of this.menuDropdownContent.children) {\n                const verifyCallback = chld.verifyCallback;\n                if (verifyCallback) verifyCallback(chld);\n                if (chld.style.display !== \"none\") visibleCount++;\n            }\n        }\n        // hide the menu when it has no visible menu-items\n        const display_visible = (this.menuDropdown.tagName === \"TD\") ? \"table-cell\" : \"inline-block\";\n        const display_invisible = \"none\";\n        this.menuDropdown.style.display = (visibleCount > 0) ? display_visible : display_invisible;\n    }\n\n    // Add a menu item at the end of this dropdown menu\n    // Runs the given callback function when selected\n    // When the title is actually a function then this\n    // function is called each time the menu opens\n    // This allows dynamic menuitem titles (use menuitem.innerText/innerHTML)\n    // or visibility (use menuitem.style.display = \"none\"/\"inline-block\")\n    addMenuItem(title, callback, value) {\n        const button = Route._createDiv(\"run-command-button\", \"...\");\n        if (typeof title === \"string\")\n            button.innerHTML = title;\n        else\n            button.verifyCallback = title;\n        button.addEventListener(\"click\", evt => this.callback(evt, callback, value));\n        this.menuDropdownContent.appendChild(button);\n        this.verifyAll();\n    }\n\n    callback(evt, callback, value) {\n        this._value = value;\n        callback(evt);\n    }\n\n    setTitle(title) {\n    // Setting the title implies that we are interested\n    // in the menu values, rather than their actions.\n    // Use a slightly different clue for that.\n    // 25BC = BLACK DOWN-POINTING TRIANGLE\n        this.menuButton.innerHTML = title + \"&nbsp;\\u25BC\";\n    }\n\n    showMenu() {\n        this.menuDropdown.style.display = \"inline-block\";\n    }\n\n    hideMenu() {\n        this.menuDropdown.style.display = \"none\";\n    }\n\n}\n","export class OutputDocumentation {\n\n    // test whether the returned data matches the requested data\n    static isDocuKeyMatch(key, filterKey) {\n\n        // no filter is always OK\n        if(!filterKey) return true;\n\n        // an exact match is great\n        if(key === filterKey) return true;\n\n        // a true prefix is also ok\n        if(key.startsWith(filterKey + \".\")) return true;\n\n        // no match\n        return false;\n    }\n\n\n    // we only treat output as documentation output when it sticks to strict rules\n    // all minions must return strings\n    // and when its key matches the requested documentation\n    // empty values are allowed due to errors in the documentation\n    // 'output' is needed like this to prevent an error during testing\n    static isDocumentationOutput(output, response, command) {\n\n        if(!output.isOutputFormatAllowed(\"doc\")) return false;\n\n        let result = false;\n\n        // reduce the search key to match the data in the response\n        command = OutputDocumentation.reduceFilterKey(command);\n\n        for(const hostname of Object.keys(response)) {\n\n            const output = response[hostname];\n\n            if(!output) {\n                // some commands do not have help-text\n                // e.g. wheel.key.get_key\n                continue;\n            }\n\n            if(typeof output !== \"object\") {\n                // strange --> no documentation object\n                return false;\n            }\n\n            // arrays are also objects,\n            // but not what we are looking for\n            if(Array.isArray(output)) {\n                return false;\n            }\n\n            for(const key of Object.keys(output)) {\n                // e.g. for \"test.rand_str\"\n                if(output[key] === null) {\n                    continue;\n                }\n\n                // but otherwise it must be a (documentation)string\n                if(typeof output[key] !== \"string\") {\n                    return false;\n                }\n\n                // is this what we were looking for?\n                if(OutputDocumentation.isDocuKeyMatch(key, command)) {\n                    result = true;\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    // reduce the search key to match the data in the response\n    static reduceFilterKey(filterKey) {\n        if(filterKey === \"wheel\") {\n            return \"\";\n        }\n        if(filterKey.startsWith(\"wheel.\")) {\n            // strip the prefix \"wheel.\"\n            return filterKey.substring(6);\n        }\n\n        if(filterKey === \"runners\") {\n            return \"\";\n        }\n        if(filterKey.startsWith(\"runners.\")) {\n            // strip the prefix \"runners.\"\n            return filterKey.substring(8);\n        }\n\n        return filterKey;\n    }\n\n\n    // documentation is requested from all targetted minions\n    // these all return roughly the same output\n    // it is a big waste of screen lines to show the output for each minion\n    // so the output is reduced to the output from a single minion only\n    // this is exactly what the salt commandline also does\n    // Parameters:\n    //   response: the data returned from all minions\n    //   visualKey: the name under which the result must be visualized\n    //              this replaces the traditional minion-name\n    //   filterKey: the prefix (or the full command) that the documentation\n    //              was requested for. The internal functions for WHEEL and\n    //              RUNNERS always return all documentation in that category\n    //              thus that response must be reduced.\n    static reduceDocumentationOutput(response, visualKey, filterKey) {\n        if(!response || typeof response !== \"object\") {\n            // strange --> don't try to fix anything\n            return;\n        }\n\n        // reduce the search key to match the data in the response\n        // i.e. remove the prefixes for \"wheel\" and \"runners\"\n        filterKey = OutputDocumentation.reduceFilterKey(filterKey);\n\n        let selectedMinion = null;\n        for(const hostname of Object.keys(response)) {\n\n            // When we already found the documentation ignore all others\n            if(selectedMinion) {\n                delete response[hostname];\n                continue;\n            }\n\n            // make sure it is an object (instead of e.g. \"false\" for an offline minion)\n            // when it is not, the whole entry is ignored\n            if(!response[hostname] || typeof response[hostname] !== \"object\") {\n                delete response[hostname];\n                continue;\n            }\n\n            // make sure that the entry matches with the requested command or prefix\n            // that's always the case for SYS.DOC output, but not for RUNNERS.DOC.RUNNER\n            // and/or RUNNERS.DOC.WHEEL.\n            const hostResponse = response[hostname];\n            for(const key of Object.keys(hostResponse)) {\n\n                // is this what we were looking for?\n                if(!OutputDocumentation.isDocuKeyMatch(key, filterKey)) {\n                    // no match, ignore the whole entry\n                    delete hostResponse[key];\n                }\n            }\n\n            // no documentation present (or left) on this minion?\n            // then discard the result of this minion\n            if(Object.keys(hostResponse).length === 0) {\n                delete response[hostname];\n                continue;\n            }\n\n            // we have found documentation output\n            // mark all other documentation for discarding\n            selectedMinion = hostname;\n        }\n\n        if(selectedMinion) {\n            // basically rename the key\n            const savedDocumentation = response[selectedMinion];\n            delete response[selectedMinion];\n            response[visualKey] = savedDocumentation;\n        } else {\n            // prepare a dummy response when no documentation could be found\n            // otherwise leave all documentation responses organized by minion\n            response[\"dummy\"] = { };\n            response[\"dummy\"][visualKey] = \"no documentation found\";\n        }\n    }\n\n    // add the output of a documentation command to the display\n    static addDocumentationOutput(outputContainer, response) {\n\n        // we expect no hostnames present\n        // as it should have been reduced already\n        for(const hostname of Object.keys(response)) {\n\n            const hostResponse = response[hostname];\n\n            for(const key of Object.keys(hostResponse).sort()) {\n\n                let out = hostResponse[key];\n                if(out === null) continue;\n                out = out.trimRight();\n\n                // internal links: remove the \".. rubric::\" prefix\n                // e.g. in \"sys.doc state.apply\"\n                out = out.replace(/[.][.] rubric:: */g, \"\");\n\n                // internal links: remove prefixes like \":mod:\" and \":py:func:\"\n                // e.g. in \"sys.doc state.apply\"\n                out = out.replace(/(:[a-z_]*)*:`/g, \"`\");\n\n                // internal links: remove link indicators in highlighted text\n                // e.g. in \"sys.doc state.apply\"\n                out = out.replace(/[ \\n]*<[^`]*>`/gm, \"`\");\n\n                // turn text into html\n                // e.g. in \"sys.doc cmd.run\"\n                out = out.replace(/&/g, \"&amp;\");\n\n                // turn text into html\n                // e.g. in \"sys.doc state.template\"\n                out = out.replace(/</g, \"&lt;\");\n\n                // turn text into html\n                // e.g. in \"sys.doc state.template\"\n                out = out.replace(/>/g, \"&gt;\");\n\n                // external links\n                // e.g. in \"sys.doc pkg.install\"\n                while(out.includes(\".. _\")) {\n                    // take only a line containing \".. _\"\n                    const reference = out.\n                        replace(/^(.|\\n|\\r)*[.][.] _/m, \"\").\n                        replace(/(\\n|\\r)(.|\\n|\\r)*$/m, \"\");\n                    const words = reference.split(\": \");\n                    if(words.length !== 2) { console.log(\"words\", words); break; }\n                    const link = words[0];\n                    const target = words[1];\n                    // add link to all references\n                    while(out.includes(link + \"_\")) {\n                        out = out.replace(\n                            link + \"_\",\n                            \"<a href='\" + target + \"' target='_blank'>\" + link + \"</a>\");\n                    }\n                    // remove the item from the link table\n                    out = out.replace(\".. _\" + reference, \"\");\n                }\n\n                // replace ``......``\n                // e.g. in \"sys.doc state.apply\"\n                out = out.replace(/``([^`]*)``/g, \"<span style='background-color: #575757'>$1</span>\");\n\n                // replace `......`\n                // e.g. in \"sys.doc state.apply\"\n                out = out.replace(/`([^`]*)`/g, \"<span style='color: yellow'>$1</span>\");\n\n                // remove whitespace at end of lines\n                out = out.replace(/  *\\n/gm, \"\");\n\n                // remove duplicate empty lines (usually due to previous rule)\n                out = out.replace(/\\n\\n\\n*/gm, \"\\n\\n\");\n\n                outputContainer.innerHTML +=\n          \"<div><span class='hostname'>\" + key + \"</span>:</br><pre style='height: initial; overflow-y: initial;'>\" + out + \"</pre></div>\";\n            }\n        }\n    }\n\n}","import {Output} from './Output';\n\nexport class OutputHighstate {\n\n    static isHighStateOutput(command, response) {\n\n        if(!Output.isOutputFormatAllowed(\"highstate\")) return false;\n\n        if(typeof response !== \"object\") return false;\n        if(Array.isArray(response)) return false;\n        if(command !== \"state.apply\" && command !== \"state.highstate\") return false;\n        for(const key of Object.keys(response)) {\n            const components = key.split(\"_|-\");\n            if(components.length !== 4) return false;\n        }\n        return true;\n    }\n\n    static getDurationClause(millis) {\n        if(millis === 1) {\n            return `${millis} millisecond`;\n        }\n        if(millis < 1000) {\n            return `${millis} milliseconds`;\n        }\n        if(millis === 1000) {\n            return `${millis/1000} second`;\n        }\n        return `${millis/1000} seconds`;\n    }\n\n    static getHighStateLabel(hostname, hostResponse) {\n        let anyFailures = false;\n        let anySkips = false;\n        // do not use Object.entries, that is not supported by the test framework\n        for(const key of Object.keys(hostResponse)) {\n            const task = hostResponse[key];\n            if(task.result === null) anySkips = true;\n            else if(!task.result) anyFailures = true;\n        }\n\n        if(anyFailures) {\n            return Output.getHostnameHtml(hostname, \"host_failure\");\n        }\n        if(anySkips) {\n            return Output.getHostnameHtml(hostname, \"host_skips\");\n        }\n        return Output.getHostnameHtml(hostname, \"host_success\");\n    }\n\n    static getHighStateOutput(hostResponse) {\n\n        // The tasks are in an (unordered) object with uninteresting keys\n        // convert it to an array that is in execution order\n        // first put all the values in an array\n        const tasks = [];\n        Object.keys(hostResponse).forEach(\n            function(taskKey) {\n                hostResponse[taskKey].___key___ = taskKey;\n                tasks.push(hostResponse[taskKey]);\n            }\n        );\n        // then sort the array\n        tasks.sort(function(a, b) { return a.__run_num__ - b.__run_num__; } );\n\n        const indent = \"    \";\n\n        const div = document.createElement(\"div\");\n\n        let succeeded = 0;\n        let failed = 0;\n        let skipped = 0;\n        let total_millis = 0;\n        let changes = 0;\n        for(const task of tasks) {\n\n            const taskDiv = document.createElement(\"div\");\n\n            const span = document.createElement(\"span\");\n            if(task.result === null) {\n                // 2714 = HEAVY CHECK MARK\n                span.style.color = \"yellow\";\n                span.innerText = \"\\u2714\";\n                skipped += 1;\n            } else if(task.result) {\n                // 2714 = HEAVY CHECK MARK\n                span.style.color = \"green\";\n                span.innerText = \"\\u2714\";\n                succeeded += 1;\n            } else {\n                // 2718 = HEAVY BALLOT X\n                span.style.color = \"red\";\n                span.innerText = \"\\u2718\";\n                failed += 1;\n            }\n            taskDiv.append(span);\n\n            taskDiv.append(document.createTextNode(\" \"));\n\n            if(task.name) {\n                taskDiv.append(document.createTextNode(task.name));\n            } else {\n                // make sure that the checkbox/ballot-x is on a reasonable line\n                // also for the next \"from\" clause (if any)\n                taskDiv.append(document.createTextNode(\"(anonymous task)\"));\n            }\n\n            if(task.__id__ && task.__id__ !== task.name) {\n                taskDiv.append(document.createTextNode(\" id=\" + encodeURIComponent(task.__id__)));\n            }\n\n            if(task.__sls__) {\n                taskDiv.append(document.createTextNode(\n                    \" (from \" + task.__sls__.replace(\".\", \"/\") + \".sls)\"));\n            }\n\n            const components = task.___key___.split(\"_|-\");\n            taskDiv.append(document.createElement(\"br\"));\n            taskDiv.append(document.createTextNode(\n                indent + \"Function is \" + components[0] + \".\" + components[3]));\n\n            if(task.comment) {\n                taskDiv.append(document.createElement(\"br\"));\n                let txt = task.comment;\n                // trim extra whitespace\n                txt = txt.replace(/[ \\r\\n]+$/g, \"\");\n                // indent extra lines\n                txt = txt.replace(/[\\n]+/g, \"\\n\" + indent);\n                taskDiv.append(document.createTextNode(indent + txt));\n            }\n\n            if(task.hasOwnProperty(\"changes\")) {\n                if(typeof task.changes !== \"object\" || Array.isArray(task.changes)) {\n                    taskDiv.append(document.createElement(\"br\"));\n                    taskDiv.append(document.createTextNode(indent + JSON.stringify(task.changes)));\n                } else {\n                    for(const key of Object.keys(task.changes).sort()) {\n                        changes = changes + 1;\n                        const change = task.changes[key];\n                        // 25BA = BLACK RIGHT-POINTING POINTER\n                        // don't use arrows here, these are higher than a regular\n                        // text-line and disturb the text-flow\n                        if(typeof change === \"string\" && change.includes(\"\\n\")) {\n                            taskDiv.append(document.createElement(\"br\"));\n                            // show multi-line text as a separate block\n                            taskDiv.append(document.createTextNode(indent + key + \":\"));\n                            const lines = change.trim().split(\"\\n\");\n                            for(const line of lines) {\n                                taskDiv.append(document.createElement(\"br\"));\n                                taskDiv.append(document.createTextNode(\"      \" + line));\n                            }\n                        } else if(typeof change !== \"object\" || Array.isArray(task.change)) {\n                            // show all other non-objects in a simple way\n                            taskDiv.append(document.createElement(\"br\"));\n                            taskDiv.append(document.createTextNode(\n                                indent + key + \": \" +\n                JSON.stringify(change)));\n                        } else {\n                            // treat old->new first\n                            if(change.hasOwnProperty(\"old\") && change.hasOwnProperty(\"new\")) {\n                                taskDiv.append(document.createElement(\"br\"));\n                                // place changes on one line\n                                taskDiv.append(document.createTextNode(\n                                    indent + key + \": \" +\n                  JSON.stringify(change.old) + \" \\u25BA \" +\n                  JSON.stringify(change.new)));\n                                delete change.old;\n                                delete change.new;\n                            }\n                            // then show whatever remains\n                            for(const taskkey of Object.keys(change).sort()) {\n                                taskDiv.append(document.createElement(\"br\"));\n                                taskDiv.append(document.createTextNode(\n                                    indent + key + \": \" + taskkey + \": \" +\n                  JSON.stringify(change[taskkey])));\n                            }\n                        }\n                    }\n                }\n            }\n\n            if(task.hasOwnProperty(\"start_time\")) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                    indent + \"Started at \" + task.start_time));\n            }\n\n            if(task.hasOwnProperty(\"duration\")) {\n                const millis = Math.round(task.duration);\n                total_millis += millis;\n                if(millis >= 10) {\n                    // anything below 10ms is not worth reporting\n                    // report only the \"slow\" jobs\n                    // it still counts for the grand total thought\n                    taskDiv.append(document.createElement(\"br\"));\n                    taskDiv.append(document.createTextNode(\n                        indent + \"Duration \" + OutputHighstate.getDurationClause(millis)));\n                }\n            }\n\n            // show any unknown attribute of a task\n            // do not use Object.entries, that is not supported by the test framework\n            for(const key of Object.keys(task)) {\n                const item = task[key];\n                if(key === \"___key___\") continue; // ignored, generated by us\n                if(key === \"__id__\") continue; // handled\n                if(key === \"__sls__\") continue; // handled\n                if(key === \"__run_num__\") continue; // handled, not shown\n                if(key === \"changes\") continue; // handled\n                if(key === \"comment\") continue; // handled\n                if(key === \"duration\") continue; // handled\n                if(key === \"host\") continue; // ignored, same as host\n                if(key === \"name\") continue; // handled\n                if(key === \"pchanges\") continue; // ignored, also ignored by cli\n                if(key === \"result\") continue; // handled\n                if(key === \"start_time\") continue; // handled\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                    indent + key + \" = \" + JSON.stringify(item)));\n            }\n\n            div.append(taskDiv);\n        }\n\n        // add a summary line\n        let line = \"\";\n\n        if(succeeded) line += \", \" + succeeded + \" succeeded\";\n        if(skipped) line += \", \" + skipped + \" skipped\";\n        if(failed) line += \", \" + failed + \" failed\";\n        const total = succeeded + skipped + failed;\n        if(total !== succeeded && total !== skipped && total !== failed) {\n            line += \", \" + (succeeded + skipped + failed) + \" total\";\n        }\n\n        // note that the number of changes may be higher or lower\n        // than the number of tasks. tasks may contribute multiple\n        // changes, or tasks may have no changes.\n        if(changes === 1) line += \", \" + changes + \" change\";\n        else if(changes) line += \", \" + changes + \" changes\";\n\n        // multiple durations and significant?\n        if(total > 1 && total_millis >= 10) {\n            line += \", \" + OutputHighstate.getDurationClause(total_millis);\n        }\n\n        if(line) {\n            div.append(document.createTextNode(line.substring(2)));\n        }\n\n\n        return div;\n    }\n\n}","export class OutputJson {\n\n    // format an object as JSON\n    // returns NULL when it is not a simple object\n    // i.e. no multi-line objects, no indentation here\n    static formatSimpleJSON(value) {\n\n        if(value === null) {\n            // null is an object, but not really\n            // leave that to the builtin function\n            return JSON.stringify(value);\n        }\n\n        if(value === undefined) {\n            // JSON.stringify does not return a string for this\n            // but again a value undefined, we need a string\n            return \"undefined\";\n        }\n\n        if(typeof value !== \"object\") {\n            // a simple type\n            // leave that to the builtin function\n            return JSON.stringify(value);\n        }\n\n        if(Array.isArray(value) && value.length === 0) {\n            // show the brackets for an empty array a bit wider apart\n            return \"[ ]\";\n        }\n\n        if(!Array.isArray(value) && Object.keys(value).length === 0) {\n            // show the brackets for an empty object a bit wider apart\n            return \"{ }\";\n        }\n\n        return null;\n    }\n\n    // format an object as JSON\n    // based on an initial indentation and an indentation increment\n    static formatJSON(value, indentLevel=0) {\n\n        // indent each level with 4 spaces\n        const indentStep = 4;\n\n        let str = OutputJson.formatSimpleJSON(value);\n        if(str !== null) {\n            return str;\n        }\n\n        if(Array.isArray(value)) {\n            // an array\n            // put each element on its own line\n            str = \"[\";\n            let separator = \"\";\n            for(const elem of value) {\n                str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) +\n          OutputJson.formatJSON(elem, indentLevel + indentStep);\n                separator = \",\";\n            }\n            str += \"\\n\" + \" \".repeat(indentLevel) + \"]\";\n            return str;\n        }\n\n        // regular object\n        // put each name+value on its own line\n        const keys = Object.keys(value);\n        str = \"{\";\n        let separator = \"\";\n        // do not use Object.entries, that is not supported by the test framework\n        for(const key of Object.keys(value).sort()) {\n            const item = value[key];\n            str += separator + \"\\n\" + \" \".repeat(indentLevel + indentStep) + \"\\\"\" + key + \"\\\": \" +\n        OutputJson.formatJSON(item, indentLevel + indentStep);\n            separator = \",\";\n        }\n        str += \"\\n\" + \" \".repeat(indentLevel) + \"}\";\n        return str;\n    }\n\n}","export class OutputNested {\n\n    // heavily inspired by the implementation for NESTED output\n    // as originally implemented in salt/output/nested.py from Salt\n\n    static ustring(indent, msg, prefix='', suffix='') {\n        return \" \".repeat(indent) + prefix + msg + suffix;\n    }\n\n    static display(ret, indent, prefix, out) {\n        if(ret === null) {\n            out.push(OutputNested.ustring(indent, \"None\", prefix));\n        } else if(ret === undefined) {\n            out.push(OutputNested.ustring(indent, \"undefined\", prefix));\n        } else if(typeof ret === \"boolean\" || typeof ret === \"number\") {\n            out.push(OutputNested.ustring(indent, ret, prefix));\n        } else if(typeof ret === \"string\") {\n            let first_line = true;\n            ret = ret.replace(/\\n$/, \"\");\n            for(const line of ret.split(\"\\n\")) {\n                let line_prefix = prefix;\n                if(!first_line)\n                    line_prefix = \".\".repeat(prefix.length);\n                out.push(OutputNested.ustring(indent, line, line_prefix));\n                first_line = false;\n            }\n        } else if(typeof ret === \"object\" && Array.isArray(ret)) {\n            for(const ind of ret) {\n                if(typeof ind === \"object\" /* including array */ ) {\n                    out.push(OutputNested.ustring(indent, '|_'));\n                    let prefix;\n                    if(typeof ind === \"object\" && !Array.isArray(ind))\n                        prefix = '';\n                    else\n                        prefix ='-\\u00A0';\n                    OutputNested.display(ind, indent + 2, prefix, out);\n                } else {\n                    OutputNested.display(ind, indent, '-\\u00A0', out);\n                }\n            }\n        } else if(typeof ret === \"object\") {\n            if(indent) out.push(OutputNested.ustring(indent, '----------'));\n            for(const key of Object.keys(ret).sort()) {\n                const val = ret[key];\n                out.push(OutputNested.ustring(indent, key, prefix, ':'));\n                if(val !== null && val !== \"\") {\n                    OutputNested.display(val, indent + 4, '', out);\n                }\n            }\n        }\n        return out;\n    }\n\n    static formatNESTED(value, indentLevel=0) {\n        const lines = OutputNested.display(value, 0, '', []);\n        return lines.join('\\n');\n    }\n\n}","export class OutputSaltGuiHighstate {\n\n    // no separate `isHighStateOutput` here\n    // the implementation from OutputHighstate is (re)used\n\n    static getDurationClause(millis) {\n        if(millis === 1) {\n            return `${millis} millisecond`;\n        }\n        if(millis < 1000) {\n            return `${millis} milliseconds`;\n        }\n        if(millis === 1000) {\n            return `${millis/1000} second`;\n        }\n        return `${millis/1000} seconds`;\n    }\n\n    static getHighStateLabel(hostname, hostResponse) {\n        let anyFailures = false;\n        let anySkips = false;\n        // do not use Object.entries, that is not supported by the test framework\n        for(const key of Object.keys(hostResponse)) {\n            const task = hostResponse[key];\n            if(task.result === null) anySkips = true;\n            else if(!task.result) anyFailures = true;\n        }\n\n        if(anyFailures) {\n            return Output.getHostnameHtml(hostname, \"host_failure\");\n        }\n        if(anySkips) {\n            return Output.getHostnameHtml(hostname, \"host_skips\");\n        }\n        return Output.getHostnameHtml(hostname, \"host_success\");\n    }\n\n    static addChangesInfo(taskDiv, task, indent) {\n        if(!task.hasOwnProperty(\"changes\")) {\n            return 0;\n        }\n\n        if(typeof task.changes !== \"object\" || Array.isArray(task.changes)) {\n            taskDiv.append(document.createElement(\"br\"));\n            taskDiv.append(document.createTextNode(indent + JSON.stringify(task.changes)));\n            return 0;\n        }\n\n        let changes = 0;\n        for(const key of Object.keys(task.changes).sort()) {\n\n            changes = changes + 1;\n\n            const change = task.changes[key];\n\n            if(typeof change === \"string\" && change.includes(\"\\n\")) {\n                taskDiv.append(document.createElement(\"br\"));\n                // show multi-line text as a separate block\n                taskDiv.append(document.createTextNode(indent + key + \":\"));\n                const lines = change.trim().split(\"\\n\");\n                for(const line of lines) {\n                    taskDiv.append(document.createElement(\"br\"));\n                    taskDiv.append(document.createTextNode(\"      \" + line));\n                }\n                continue;\n            }\n\n            if(Array.isArray(change)) {\n                for(const idx in change) {\n                    const task = change[idx];\n                    taskDiv.append(document.createElement(\"br\"));\n                    taskDiv.append(document.createTextNode(\n                        indent + key + \"[\" + idx + \"]: \" + JSON.stringify(task)));\n                }\n                continue;\n            }\n\n            if(typeof change !== \"object\") {\n                // show all other non-objects in a simple way\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                    indent + key + \": \" +\n          JSON.stringify(change)));\n                continue;\n            }\n\n            // treat old->new first\n            if(change.hasOwnProperty(\"old\") && change.hasOwnProperty(\"new\")) {\n                taskDiv.append(document.createElement(\"br\"));\n                // place changes on one line\n                // 25BA = BLACK RIGHT-POINTING POINTER\n                // don't use arrows here, these are higher than a regular\n                // text-line and disturb the text-flow\n                taskDiv.append(document.createTextNode(\n                    indent + key + \": \" +\n          JSON.stringify(change.old) + \" \\u25BA \" +\n          JSON.stringify(change.new)));\n                delete change.old;\n                delete change.new;\n            }\n            // then show whatever remains\n            for(const taskkey of Object.keys(change).sort()) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                    indent + key + \": \" + taskkey + \": \" +\n          JSON.stringify(change[taskkey])));\n            }\n        }\n    }\n\n    static getHighStateOutput(hostResponse) {\n\n        // The tasks are in an (unordered) object with uninteresting keys\n        // convert it to an array that is in execution order\n        // first put all the values in an array\n        const tasks = [];\n        Object.keys(hostResponse).forEach(\n            function(taskKey) {\n                hostResponse[taskKey].___key___ = taskKey;\n                tasks.push(hostResponse[taskKey]);\n            }\n        );\n        // then sort the array\n        tasks.sort(function(a, b) { return a.__run_num__ - b.__run_num__; } );\n\n        const indent = \"    \";\n\n        const div = document.createElement(\"div\");\n\n        let succeeded = 0;\n        let failed = 0;\n        let skipped = 0;\n        let total_millis = 0;\n        let changes = 0;\n        for(const task of tasks) {\n\n            const taskDiv = document.createElement(\"div\");\n\n            const span = document.createElement(\"span\");\n            if(task.result === null) {\n                // 2714 = HEAVY CHECK MARK\n                span.style.color = \"yellow\";\n                span.innerText = \"\\u2714\";\n                skipped += 1;\n            } else if(task.result) {\n                // 2714 = HEAVY CHECK MARK\n                span.style.color = \"green\";\n                span.innerText = \"\\u2714\";\n                succeeded += 1;\n            } else {\n                // 2718 = HEAVY BALLOT X\n                span.style.color = \"red\";\n                span.innerText = \"\\u2718\";\n                failed += 1;\n            }\n            taskDiv.append(span);\n\n            taskDiv.append(document.createTextNode(\" \"));\n\n            if(task.name) {\n                taskDiv.append(document.createTextNode(task.name));\n            } else {\n                // make sure that the checkbox/ballot-x is on a reasonable line\n                // also for the next \"from\" clause (if any)\n                taskDiv.append(document.createTextNode(\"(anonymous task)\"));\n            }\n\n            if(task.__id__ && task.__id__ !== task.name) {\n                taskDiv.append(document.createTextNode(\" id=\" + encodeURIComponent(task.__id__)));\n            }\n\n            if(task.__sls__) {\n                taskDiv.append(document.createTextNode(\n                    \" (from \" + task.__sls__.replace(\".\", \"/\") + \".sls)\"));\n            }\n\n            const components = task.___key___.split(\"_|-\");\n            taskDiv.append(document.createElement(\"br\"));\n            taskDiv.append(document.createTextNode(\n                indent + \"Function is \" + components[0] + \".\" + components[3]));\n\n            if(task.comment) {\n                taskDiv.append(document.createElement(\"br\"));\n                let txt = task.comment;\n                // trim extra whitespace\n                txt = txt.replace(/[ \\r\\n]+$/g, \"\");\n                // indent extra lines\n                txt = txt.replace(/[\\n]+/g, \"\\n\" + indent);\n                taskDiv.append(document.createTextNode(indent + txt));\n            }\n\n            changes += OutputSaltGuiHighstate.addChangesInfo(taskDiv, task, indent);\n\n            if(task.hasOwnProperty(\"start_time\")) {\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                    indent + \"Started at \" + Output.dateTimeStr(task.start_time)));\n            }\n\n            if(task.hasOwnProperty(\"duration\")) {\n                const millis = Math.round(task.duration);\n                total_millis += millis;\n                if(millis >= 10) {\n                    // anything below 10ms is not worth reporting\n                    // report only the \"slow\" jobs\n                    // it still counts for the grand total thought\n                    taskDiv.append(document.createElement(\"br\"));\n                    taskDiv.append(document.createTextNode(\n                        indent + \"Duration \" + OutputSaltGuiHighstate.getDurationClause(millis)));\n                }\n            }\n\n            // show any unknown attribute of a task\n            // do not use Object.entries, that is not supported by the test framework\n            for(const key of Object.keys(task)) {\n                const item = task[key];\n                if(key === \"___key___\") continue; // ignored, generated by us\n                if(key === \"__id__\") continue; // handled\n                if(key === \"__sls__\") continue; // handled\n                if(key === \"__run_num__\") continue; // handled, not shown\n                if(key === \"changes\") continue; // handled\n                if(key === \"comment\") continue; // handled\n                if(key === \"duration\") continue; // handled\n                if(key === \"host\") continue; // ignored, same as host\n                if(key === \"name\") continue; // handled\n                if(key === \"pchanges\") continue; // ignored, also ignored by cli\n                if(key === \"result\") continue; // handled\n                if(key === \"start_time\") continue; // handled\n                taskDiv.append(document.createElement(\"br\"));\n                taskDiv.append(document.createTextNode(\n                    indent + key + \" = \" + JSON.stringify(item)));\n            }\n\n            div.append(taskDiv);\n        }\n\n        // add a summary line\n        let line = \"\";\n\n        if(succeeded) line += \", \" + succeeded + \" succeeded\";\n        if(skipped) line += \", \" + skipped + \" skipped\";\n        if(failed) line += \", \" + failed + \" failed\";\n        const total = succeeded + skipped + failed;\n        if(total !== succeeded && total !== skipped && total !== failed) {\n            line += \", \" + (succeeded + skipped + failed) + \" total\";\n        }\n\n        // note that the number of changes may be higher or lower\n        // than the number of tasks. tasks may contribute multiple\n        // changes, or tasks may have no changes.\n        if(changes === 1) line += \", \" + changes + \" change\";\n        else if(changes) line += \", \" + changes + \" changes\";\n\n        // multiple durations and significant?\n        if(total > 1 && total_millis >= 10) {\n            line += \", \" + OutputSaltGuiHighstate.getDurationClause(total_millis);\n        }\n\n        if(line) {\n            div.append(document.createTextNode(line.substring(2)));\n        }\n\n        return div;\n    }\n\n}","export class OutputYaml {\n\n    // format an object as YAML\n    // returns NULL when it is not a simple object\n    // i.e. no multi-line objects, no indentation here\n    static formatSimpleYAML(value) {\n\n        if(value === null) {\n            return \"null\";\n        }\n\n        if(value === undefined) {\n            return \"undefined\";\n        }\n\n        if(typeof value === \"boolean\") {\n            return value ? \"true\" : \"false\";\n        }\n\n        if(typeof value === \"string\") {\n            let needQuotes = false;\n\n            // simple number with extra 0's at the start is still a string\n            if(value.match(/^0[0-9]+$/)) return value;\n\n            if(!isNaN(Number(value))) needQuotes = true;\n\n            if(value.match(/^$/)) needQuotes = true;\n\n            if(value.match(/^ /)) needQuotes = true;\n            if(value.match(/ $/)) needQuotes = true;\n\n            if(value.match(/^@/)) needQuotes = true;\n            if(value.match(/^`/)) needQuotes = true;\n            if(value.match(/^%/)) needQuotes = true;\n\n            if(!value.match(/^[-a-z0-9_()./:+ ]+$/i)) needQuotes = true;\n\n            if(!needQuotes) return value;\n            return \"'\" + value + \"'\";\n        }\n\n        if(typeof value !== \"object\") {\n            return \"\" + value;\n        }\n\n        if(Array.isArray(value) && value.length === 0) {\n            // show the brackets for an empty array a bit wider apart\n            return \"[ ]\";\n        }\n\n        if(!Array.isArray(value) && Object.keys(value).length === 0) {\n            // show the brackets for an empty object a bit wider apart\n            return \"{ }\";\n        }\n\n        return null;\n    }\n\n    // format an object as YAML\n    // based on an initial indentation and an indentation increment\n    static formatYAML(value, indentLevel=0) {\n\n        // indent each level with this number of spaces\n        // note that list items are indented with 2 spaces\n        // independently of this setting to match the prefix \"- \"\n        const indentStep = 2;\n\n        const str = OutputYaml.formatSimpleYAML(value);\n        if(str !== null) {\n            return str;\n        }\n\n        if(Array.isArray(value)) {\n            let out = \"\";\n            let separator = \"\";\n            for(const item of value) {\n                out += separator + \"-\\u00A0\" + OutputYaml.formatYAML(item, indentLevel + 2);\n                separator = \"\\n\" + \" \".repeat(indentLevel);\n            }\n            return out;\n        }\n\n        // regular object\n        let out = \"\";\n        let separator = \"\";\n        for(const key of Object.keys(value).sort()) {\n            const item = value[key];\n            out += separator + key + \":\";\n            const str = OutputYaml.formatSimpleYAML(item);\n            if(str !== null) {\n                out += \" \" + str;\n            } else if(Array.isArray(item)) {\n                out += \"\\n\" + \" \".repeat(indentLevel) + OutputYaml.formatYAML(item, indentLevel);\n            } else if(typeof item === \"object\") {\n                out += \"\\n\" + \" \".repeat(indentLevel + indentStep) + OutputYaml.formatYAML(item, indentLevel + indentStep);\n            } else {\n                out += \"x\" + OutputYaml.formatYAML(item, indentLevel + indentStep);\n            }\n            separator = \"\\n\" + \" \".repeat(indentLevel);\n        }\n        return out;\n    }\n\n}","import {OutputDocumentation} from './OutputDocumentation';\nimport {OutputHighstate} from './OutputHighstate';\nimport {OutputJson} from './OutputJson';\nimport {OutputNested} from './OutputNested';\nimport {OutputSaltGuiHighstate} from './OutputSaltGuiHighstate';\nimport {OutputYaml} from './OutputYaml';\n\n// Functions to turn responses from the salt system into visual information\n// The following variations exist:\n// A) documentation output\n//    one of the responsing nodes is selected\n//    all other nodes are then ignored\n// B) state output\n//    the response is formatted as a list of tasks\n// C) error output\n//    the response is formatted as text\n// D) other output\n//    the response is formatted as json text\n//\n// Additionally the following preparations may be needed:\n// 1) Output from WHEEL functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n// 2) Output from RUNNERS functions\n//    This output is re-organized to let it appear as if the output comes\n//    from a single node called \"master\".\n\nexport class Output {\n\n    static isOutputFormatAllowed(requestedOutputFormat) {\n        let supportedOutputFormats = null;\n        // window.localStorage is not defined during unit testing\n        if(window.localStorage) supportedOutputFormats = window.localStorage.getItem(\"output_formats\");\n        if(supportedOutputFormats === \"undefined\") supportedOutputFormats = null;\n        if(supportedOutputFormats === null) supportedOutputFormats = \"doc,saltguihighstate,json\";\n        return supportedOutputFormats.includes(requestedOutputFormat);\n    }\n\n    // Re-organize the output to let it appear as if the output comes\n    // from a single node called \"RUNNER\" or \"MASTER\".\n    // This way all responses are organized by minion\n    static addVirtualMinion(response, command) {\n\n        if(command.startsWith(\"runners.\")) {\n            // Add a new level in the object\n            return { \"RUNNER\": response };\n        }\n\n        if(command.startsWith(\"wheel.\")) {\n            // Add a new level in the object\n            return { \"WHEEL\": response };\n        }\n\n        // otherwise return the original\n        return response;\n    }\n\n    // compose the host/minion-name label that is shown with each response\n    static getHostnameHtml(hostname, extraClass=\"\") {\n        const span = document.createElement(\"span\");\n        span.classList.add(\"hostname\");\n        if(extraClass) span.classList.add(extraClass);\n        span.innerText = hostname;\n        return span;\n    }\n\n    // the output is only text\n    // note: do not return a text-node\n    static getTextOutput(hostResponse) {\n    // strip trailing whitespace\n        hostResponse = hostResponse.replace(/[ \\r\\n]+$/g, \"\");\n\n        // replace all returned JIDs to links\n        // typically found in the output of an async job\n        // patJid is defined in scripts/parsecmdline.js\n        if(hostResponse.match(patJid)) {\n            const a = document.createElement(\"a\");\n            a.href = \"/job?id=\" + encodeURIComponent(hostResponse);\n            a.innerText = hostResponse;\n            return a;\n        }\n\n        // all regular text\n        const span = document.createElement(\"span\");\n        span.innerText = hostResponse;\n        return span;\n    }\n\n\n    // format an object in the preferred style\n    static formatObject(obj) {\n        if(Output.isOutputFormatAllowed(\"json\")) {\n            return OutputJson.formatJSON(obj);\n        }\n\n        if(Output.isOutputFormatAllowed(\"yaml\")) {\n            return OutputYaml.formatYAML(obj);\n        }\n\n        if(Output.isOutputFormatAllowed(\"nested\")) {\n            return OutputNested.formatNESTED(obj);\n        }\n\n        // when nothing is allowed, JSON is always allowed\n        return OutputJson.formatJSON(obj);\n    }\n\n\n    // this is the default output form\n    // just format the returned objects\n    // note: do not return a text-node\n    static getNormalOutput(hostResponse) {\n        const content = Output.formatObject(hostResponse);\n        const element = document.createElement(content.includes(\"\\n\") ? \"div\" : \"span\");\n        element.innerText = content;\n        return element;\n    }\n\n\n    static hasProperties(obj, props) {\n        if(!obj || typeof obj !== \"object\") {\n            return false;\n        }\n        for(const prop of props) {\n            if(!obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    static isAsyncOutput(response) {\n        let keys = Object.keys(response);\n        if(keys.length !== 2) return false;\n        keys = keys.sort();\n        if(keys[0] !== \"jid\") return false;\n        if(keys[1] !== \"minions\") return false;\n        return true;\n    }\n\n\n    // reformat a date-time string\n    // supported formats:\n    // (time) 19:05:01.561754\n    // (datetime) 2019, Jan 26 19:05:22.808348\n    // current action is (only):\n    // - reduce the number of digits for the fractional seconds\n    static dateTimeStr(str) {\n\n        // no available setting, then return the original\n        const datetime_fraction_digits_str = window.localStorage.getItem(\"datetime_fraction_digits\");\n        if(datetime_fraction_digits_str === null) return str;\n\n        // setting is not a number, return the original\n        let datetime_fraction_digits_nr = Number.parseInt(datetime_fraction_digits_str);\n        if(isNaN(datetime_fraction_digits_nr)) return str;\n\n        // stick to the min/max values without complaining\n        if(datetime_fraction_digits_nr < 0) datetime_fraction_digits_nr = 0;\n        if(datetime_fraction_digits_nr > 6) datetime_fraction_digits_nr = 6;\n\n        // find the fractional part (assume only one '.' in the string)\n        let dotPos = str.indexOf(\".\");\n        if(dotPos < 0) return str;\n\n        // with no digits, also remove the dot\n        if(datetime_fraction_digits_nr === 0) dotPos -= 1;\n\n        return str.substring(0, dotPos + datetime_fraction_digits_nr + 1);\n    }\n\n\n    // the orchestrator for the output\n    // determines what format should be used and uses that\n    static addResponseOutput(outputContainer, minions, response, command) {\n\n        // remove old content\n        outputContainer.innerText = \"\";\n\n        // reformat runner/wheel output into regular output\n        response = Output.addVirtualMinion(response, command);\n\n        if(typeof response === \"string\") {\n            // do not format a string as an object\n            outputContainer.innerText = response;\n            return;\n        }\n\n        if(typeof response !== \"object\" || Array.isArray(response)) {\n            outputContainer.innerText = Output.formatObject(response);\n            return;\n        }\n\n        // it might be documentation\n        const commandArg = command.trim().replace(/^[a-z.]* */i, \"\");\n        const isDocumentationOutput = OutputDocumentation.isDocumentationOutput(Output, response, commandArg);\n        if(isDocumentationOutput) {\n            OutputDocumentation.reduceDocumentationOutput(response, commandArg, commandArg);\n            OutputDocumentation.addDocumentationOutput(outputContainer, response);\n            return;\n        }\n\n        const allDiv = document.createElement(\"div\");\n\n        if(!command.startsWith(\"runners.\") &&\n       !command.startsWith(\"wheel.\") &&\n       !Output.isAsyncOutput(response)) {\n            // runners/wheel responses are not per minion\n            // Do not produce a #response line for async-start confirmation\n            const span = document.createElement(\"span\");\n\n            const cntResponses = Object.keys(response).length;\n            const cntMinions = minions.length;\n\n            let txt;\n\n            if(cntResponses === 1) {\n                txt = cntResponses + \" response\";\n            } else {\n                txt = cntResponses + \" responses\";\n            }\n\n            if(cntMinions !== cntResponses) {\n                txt = txt + \", \" + (cntMinions - cntResponses) + \" no response\";\n            }\n\n            if(cntResponses > 0 && cntMinions !== cntResponses) {\n                txt = txt + \", \" + cntMinions + \" total\";\n            }\n\n            // some room for the triangle\n            txt = txt + \" \";\n\n            span.innerText = txt;\n            allDiv.appendChild(span);\n        }\n\n        const masterTriangle = document.createElement(\"span\");\n        masterTriangle.innerText = \"\\u25bd\";\n        masterTriangle.style = \"cursor: pointer\";\n        allDiv.appendChild(masterTriangle);\n\n        outputContainer.appendChild(allDiv);\n\n        masterTriangle.addEventListener(\"click\", _ => {\n            // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n            // 25BD = WHITE DOWN-POINTING TRIANGLE\n            if(masterTriangle.innerText !== \"\\u25bd\") {\n                masterTriangle.innerText = \"\\u25bd\";\n            } else {\n                masterTriangle.innerText = \"\\u25b7\";\n            }\n\n            for(const div of outputContainer.childNodes) {\n                // only click on items that are collapsible\n                const childs = div.getElementsByClassName(\"triangle\");\n                if(childs.length !== 1) continue;\n                // do not collapse the \"all\" item again\n                const tr = childs[0];\n                if(tr === masterTriangle) continue;\n                // only click on items that are not already the same as \"all\"\n                if(tr.innerText === masterTriangle.innerText) continue;\n                // (un)collapse the minion\n                const evt = new MouseEvent(\"click\", {});\n                tr.dispatchEvent(evt);\n            }\n        });\n\n        let nrMultiLineBlocks = 0;\n\n        // for all other types we consider the output per minion\n        // this is more generic and it simplifies the handlers\n        for(const hostname of minions.sort()) {\n\n            const isSuccess = true;\n            const retCode = 0;\n\n            let hostResponse = response[hostname];\n            if(Output.hasProperties(hostResponse, [\"retcode\", \"return\", \"success\"])) {\n                hostResponse = hostResponse.return;\n            }\n            else if(command.startsWith(\"runner.\") && hostResponse && hostResponse.hasOwnProperty(\"return\")) {\n                hostResponse = hostResponse.return.return;\n            }\n\n            let hostOutput = null;\n            let hostMultiLine = null;\n            let fndRepresentation = false;\n\n            // the standard label is the hostname,\n            // future: colored based on the successflag\n            // future: colored based on the retcode\n            let hostClass = \"host_success\";\n            if(!isSuccess) hostClass = \"host_failure\";\n            if(!response.hasOwnProperty(hostname)) hostClass = \"host_noresponse\";\n            let hostLabel = Output.getHostnameHtml(hostname, hostClass);\n\n            if(!fndRepresentation && !response.hasOwnProperty(hostname)) {\n                hostOutput = Output.getTextOutput(\"(no response)\");\n                fndRepresentation = true;\n            }\n\n            if(!fndRepresentation && typeof hostResponse === \"string\") {\n                hostOutput = Output.getTextOutput(hostResponse);\n                hostMultiLine = hostResponse.includes(\"\\n\");\n                fndRepresentation = true;\n            }\n\n            if(!fndRepresentation && typeof hostResponse !== \"object\") {\n                hostOutput = Output.getNormalOutput(hostResponse);\n                hostMultiLine = false;\n                fndRepresentation = true;\n            }\n\n            // null is an object, but treat it separatelly\n            if(!fndRepresentation && hostResponse === null) {\n                hostOutput = Output.getNormalOutput(hostResponse);\n                hostMultiLine = false;\n                fndRepresentation = true;\n            }\n\n            // an array is an object, but treat it separatelly\n            if(!fndRepresentation && Array.isArray(hostResponse)) {\n                hostOutput = Output.getNormalOutput(hostResponse);\n                hostMultiLine = hostResponse.length > 0;\n                fndRepresentation = true;\n            }\n\n            // it might be highstate output\n            const commandCmd = command.trim().replace(/ .*/, \"\");\n            const isHighStateOutput = OutputHighstate.isHighStateOutput(commandCmd, hostResponse);\n            // enhanced highstate display\n            if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"saltguihighstate\")) {\n                hostLabel = OutputSaltGuiHighstate.getHighStateLabel(hostname, hostResponse);\n                hostOutput = OutputSaltGuiHighstate.getHighStateOutput(hostResponse);\n                hostMultiLine = true;\n                fndRepresentation = true;\n            }\n            // regular highstate display\n            if(!fndRepresentation && isHighStateOutput && Output.isOutputFormatAllowed(\"highstate\")) {\n                hostLabel = OutputHighstate.getHighStateLabel(hostname, hostResponse);\n                hostOutput = OutputHighstate.getHighStateOutput(hostResponse);\n                hostMultiLine = true;\n                fndRepresentation = true;\n            }\n\n            // nothing special? then it is normal output\n            if(!fndRepresentation) {\n                hostOutput = Output.getNormalOutput(hostResponse);\n                hostMultiLine = Object.keys(hostResponse).length > 0;\n            }\n\n            // one response does not need to be collapsible\n            const cnt = Object.keys(response).length;\n            if(cnt === 1) {\n                hostMultiLine = false;\n            }\n\n            if(hostMultiLine) nrMultiLineBlocks += 1;\n\n            // compose the actual output\n            const div = document.createElement(\"div\");\n\n            div.append(hostLabel);\n\n            div.appendChild(document.createTextNode(\": \"));\n\n            // multiple line, collapsible\n            // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n            // 25BD = WHITE DOWN-POINTING TRIANGLE\n            let triangle = null;\n            if(hostMultiLine) {\n                triangle = document.createElement(\"span\");\n                triangle.innerText = \"\\u25bd\";\n                triangle.style = \"cursor: pointer\";\n                triangle.classList.add(\"triangle\");\n                div.appendChild(triangle);\n                div.appendChild(document.createElement(\"br\"));\n\n                triangle.addEventListener(\"click\", _ => {\n                    // 25B7 = WHITE RIGHT-POINTING TRIANGLE\n                    // 25BD = WHITE DOWN-POINTING TRIANGLE\n                    if(triangle.innerText !== \"\\u25bd\") {\n                        triangle.innerText = \"\\u25bd\";\n                        hostOutput.style.display = \"\";\n                    } else {\n                        triangle.innerText = \"\\u25b7\";\n                        hostOutput.style.display = \"none\";\n                    }\n                });\n            }\n\n            div.append(hostOutput);\n\n            outputContainer.append(div);\n        }\n\n        if(nrMultiLineBlocks <= 1) {\n            // No collapsible elements, hide the master\n            // Also hide with 1 collapsible element\n            masterTriangle.style.display = \"none\";\n        }\n\n    }\n}","import {PageRoute} from './PageRoute';\nimport {Route} from './Route';\nimport {DropDownMenu} from '../DropDownMenu';\nimport {Output} from '../output';\n\nexport class GrainsMinionRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]grainsminion$\", \"Grains\", \"#page_grainsminion\", \"#button_grains\", router);\n\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._showGrains = this._showGrains.bind(this);\n\n        document.querySelector(\"#button_close_grainsminion\").addEventListener(\"click\", _ => {\n            this.router.goTo(\"/grains\");\n        });\n    }\n\n    onShow() {\n        const minions = this;\n\n        const minion = decodeURIComponent(window.getQueryParam(\"minion\"));\n\n        const title = document.getElementById(\"grainsminion_title\");\n        title.innerText = \"Grains on \" + minion;\n\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getGrainsItems(minion).then(minions._showGrains);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n        });\n    }\n\n    _showGrains(data) {\n        const minion = decodeURIComponent(window.getQueryParam(\"minion\"));\n\n        const grains = data.return[0][minion];\n\n        const gmp = document.getElementById(\"grainsminion_page\");\n        const menu = new DropDownMenu(gmp);\n        menu.addMenuItem(\"Add&nbsp;grain...\", function(evt) {\n            // use placeholders for name and value\n            this._runCommand(evt, minion, \"grains.setval \\\"name\\\" \\\"value\\\"\");\n        }.bind(this));\n        menu.addMenuItem(\"Refresh&nbsp;grains...\", function(evt) {\n            this._runCommand(evt, minion, \"saltutil.refresh_grains\");\n        }.bind(this));\n\n        const container = document.getElementById(\"grainsminion_list\");\n\n        // new menu's are always added at the bottom of the div\n        // fix that by re-adding the minion list\n        gmp.appendChild(container);\n\n        while(container.tBodies[0].rows.length > 0) {\n            container.tBodies[0].deleteRow(0);\n        }\n\n        if(!grains) return;\n\n        const keys = Object.keys(grains).sort();\n        for(const k of keys) {\n            const grain = document.createElement('tr');\n\n            const name = Route._createTd(\"grain_name\", k);\n            grain.appendChild(name);\n\n            const grain_value = Output.formatObject(grains[k]);\n\n            const menu = new DropDownMenu(grain);\n            menu.addMenuItem(\"Edit&nbsp;grain...\", function(evt) {\n                this._runCommand(evt, minion, \"grains.setval \\\"\" + k + \"\\\" \" + JSON.stringify(grains[k]));\n            }.bind(this));\n            if(grain_value.startsWith(\"[\")) {\n                menu.addMenuItem(\"Add&nbsp;value...\", function(evt) {\n                    this._runCommand(evt, minion, \"grains.append \\\"\" + k + \"\\\" \\\"value\\\"\");\n                }.bind(this));\n            }\n            menu.addMenuItem(\"Delete&nbsp;key...\", function(evt) {\n                this._runCommand(evt, minion, \"grains.delkey \\\"\" + k + \"\\\"\");\n            }.bind(this));\n            menu.addMenuItem(\"Delete&nbsp;value...\", function(evt) {\n                this._runCommand(evt, minion, \"grains.delval \\\"\" + k + \"\\\"\");\n            }.bind(this));\n\n            // menu comes before this data on purpose\n            const value = Route._createTd(\"grain_value\", grain_value);\n            grain.appendChild(value);\n\n            container.tBodies[0].appendChild(grain);\n\n            grain.addEventListener(\"click\", evt => this._runCommand(evt, minion, \"grains.setval \\\"\" + k + \"\\\" \" + JSON.stringify(grains[k])));\n        }\n    }\n}\n","import {PageRoute} from './PageRoute';\nimport {Route} from './Route';\nimport {DropDownMenu} from '../DropDownMenu';\n\nrequire('../../sorttable/sorttable');\n\nexport class GrainsRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]grains$\", \"Grains\", \"#page_grains\", \"#button_grains\", router);\n\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._updateKeys = this._updateKeys.bind(this);\n        this._updateMinion = this._updateMinion.bind(this);\n\n        // collect the list of displayed minions\n        let previewGrainsText = window.localStorage.getItem(\"preview_grains\");\n        if(!previewGrainsText || previewGrainsText === \"undefined\") {\n            previewGrainsText = \"[]\";\n        }\n        this._previewGrains = JSON.parse(previewGrainsText);\n        if(!Array.isArray(this._previewGrains)) {\n            this._previewGrains = [ ];\n        }\n        // add all the required columns\n        const tr = document.querySelector(\"#page_grains thead tr\");\n        while(tr.childElementCount > 6) {\n            tr.removeChild(tr.lastChild);\n        }\n        for(let i = 0; i < this._previewGrains.length; i++) {\n            const th = document.createElement(\"th\");\n            th.innerText = this._previewGrains[i];\n            tr.appendChild(th);\n        }\n        // the new columns are not yet sortable, make sure they are\n        sorttable.makeSortable(document.querySelector(\"#page_grains table\"));\n    }\n\n    onShow() {\n        const minions = this;\n\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getMinions().then(minions._updateMinions);\n            minions.router.api.getKeys().then(minions._updateKeys);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n        });\n    }\n\n    _updateKeys(data) {\n        const keys = data.return;\n\n        const list = this.getPageElement().querySelector('#minions');\n\n        const hostnames = keys.minions.sort();\n        for(const hostname of hostnames) {\n            this._addMinion(list, hostname, 1 + this._previewGrains.length);\n\n            // preliminary dropdown menu\n            const element = document.getElementById(hostname);\n            const menu = new DropDownMenu(element);\n            this._addMenuItemShowGrains(menu, hostname);\n\n            for(let i = 0; i < this._previewGrains.length; i++) {\n                element.appendChild(Route._createTd(\"\", \"\"));\n            }\n\n            element.addEventListener(\"click\", evt => window.location.assign(\"grainsminion?minion=\" + encodeURIComponent(hostname)));\n        }\n\n        this.keysLoaded = true;\n        if(this.keysLoaded && this.jobsLoaded) this.resolvePromise();\n    }\n\n    _updateOfflineMinion(container, hostname) {\n        super._updateOfflineMinion(container, hostname);\n\n        const element = document.getElementById(hostname);\n\n        // force same columns on all rows\n        element.appendChild(Route._createTd(\"saltversion\", \"\"));\n        element.appendChild(Route._createTd(\"os\", \"\"));\n        element.appendChild(Route._createTd(\"graininfo\", \"\"));\n        element.appendChild(Route._createTd(\"run-command-button\", \"\"));\n        for(let i = 0; i < this._previewGrains.length; i++) {\n            element.appendChild(Route._createTd(\"\", \"\"));\n        }\n    }\n\n    _updateMinion(container, minion, hostname) {\n        super._updateMinion(container, minion, hostname);\n\n        const element = document.getElementById(hostname);\n\n        const cnt = Object.keys(minion).length;\n        const grainInfoText = cnt + \" grains\";\n        const grainInfoTd = Route._createTd(\"graininfo\", grainInfoText);\n        grainInfoTd.setAttribute(\"sorttable_customkey\", cnt);\n        element.appendChild(grainInfoTd);\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemShowGrains(menu, hostname);\n\n        // add all the required columns\n        while(element.childElementCount > 6) {\n            element.removeChild(element.lastChild);\n        }\n        for(let i = 0; i < this._previewGrains.length; i++) {\n            const td = document.createElement(\"td\");\n            const grainName = this._previewGrains[i];\n            if(grainName in minion) {\n                td.innerText = Output.formatObject(minion[grainName]);\n                td.classList.add(\"grain_value\");\n            }\n            element.appendChild(td);\n        }\n\n        element.addEventListener(\"click\", evt => window.location.assign(\"grainsminion?minion=\" + encodeURIComponent(hostname)));\n    }\n\n    _addMenuItemShowGrains(menu, hostname) {\n        menu.addMenuItem(\"Show&nbsp;grains\", function(evt) {\n            window.location.assign(\"grainsminion?minion=\" + encodeURIComponent(hostname));\n        }.bind(this));\n    }\n}\n","import {Route} from './Route';\n\nexport class JobRoute extends Route {\n\n    constructor(router) {\n        super(\"^[\\/]job$\", \"Job\", \"#page_job\", \"\", router);\n        this._onJobData = this._onJobData.bind(this);\n    }\n\n    onShow() {\n        const job = this;\n        const id = decodeURIComponent(window.getQueryParam(\"id\"));\n        return new Promise(function(resolve, reject) {\n            job.resolvePromise = resolve;\n            job.router.api.getJob(id).then(job._onJobData);\n        });\n    }\n\n    _isResultOk(result) {\n        if(!result.success) return false;\n        if(result.retcode !== 0) return false;\n        return true;\n    }\n\n    _onJobData(data) {\n        const job = this;\n        const info = data.info[0];\n        job.getPageElement().querySelector(\".output\").innerText = \"\";\n\n        document.querySelector(\"#button_close_job\").addEventListener(\"click\", _ => {\n            this.router.goTo(\"/jobs\");\n        });\n\n        const argumentsText = this._decodeArgumentsText(info.Arguments[0]);\n        const commandText = info.Function + \" \" + argumentsText;\n        const jobinfo = document.getElementById(\"job_page\");\n        const menuSection = jobinfo.querySelector(\".job_menu\");\n        const menu = new DropDownMenu(menuSection);\n\n        // 1: re-run with original target pattern\n        menu.addMenuItem(\"Re-run&nbsp;job...\", function(evt) {\n            this._runFullCommand(evt, info[\"Target-type\"], info.Target, commandText);\n        }.bind(this));\n\n        // 2: re-run list of minions\n        let minionList = \"\";\n        if(info.Minions) {\n            for(const m of info.Minions) {\n                minionList += \",\" + m;\n            }\n        }\n        if(minionList && minionList === \",\" + info.Minions[0]) {\n            // suppress a trivial case\n            minionList = null;\n        }\n        if(minionList) {\n            const lst = minionList.substring(1);\n            menu.addMenuItem(\"Re-run&nbsp;job&nbsp;on&nbsp;all&nbsp;minions...\", function(evt) {\n                this._runFullCommand(evt, \"list\", lst, commandText);\n            }.bind(this));\n        }\n\n        // 3: re-run all failed (error+timeout)\n        minionList = \"\";\n        let has1 = false, has2 = false;\n        if(info.Minions) {\n            for(const m of info.Minions) {\n                if(!(m in info.Result)) has1 = true;\n                if(m in info.Result && !this._isResultOk(info.Result[m])) has2 = true;\n                if(!(m in info.Result) || !this._isResultOk(info.Result[m])) {\n                    minionList += \",\" + m;\n                }\n            }\n        }\n        // only when we have both types in the list\n        // otherwise the #4 or #5 is sufficient\n        if(has1 && has2 && minionList) {\n            const lst = minionList.substring(1);\n            menu.addMenuItem(\"Re-run&nbsp;job&nbsp;on&nbsp;unsuccessful&nbsp;minions...\", function(evt) {\n                this._runFullCommand(evt, \"list\", lst, commandText);\n            }.bind(this));\n        }\n\n        // 4: re-run all failed (error)\n        minionList = \"\";\n        if(info.Minions) {\n            for(const m of info.Minions) {\n                if(m in info.Result && !this._isResultOk(info.Result[m])) {\n                    minionList += \",\" + m;\n                }\n            }\n        }\n        if(minionList) {\n            const lst = minionList.substring(1);\n            menu.addMenuItem(\"Re-run&nbsp;job&nbsp;on&nbsp;failed&nbsp;minions...\", function(evt) {\n                this._runFullCommand(evt, \"list\", lst, commandText);\n            }.bind(this));\n        }\n\n        // 5: re-run all failed (timeout)\n        minionList = \"\";\n        if(info.Minions) {\n            for(const m of info.Minions) {\n                if(!(m in info.Result)) {\n                    minionList += \",\" + m;\n                }\n            }\n        }\n        if(minionList) {\n            const lst = minionList.substring(1);\n            menu.addMenuItem(\"Re-run&nbsp;job&nbsp;on&nbsp;non&nbsp;responding&nbsp;minions...\", function(evt) {\n                this._runFullCommand(evt, \"list\", lst, commandText);\n            }.bind(this));\n        }\n\n        const functionText = commandText + \" on \" +\n      window.makeTargetText(info[\"Target-type\"], info.Target);\n        jobinfo.querySelector(\".function\").innerText = functionText;\n\n        jobinfo.querySelector(\".time\").innerText = Output.dateTimeStr(info.StartTime);\n\n        const output = job.getPageElement().querySelector(\".output\");\n        // use same formatter as direct commands\n        let minions = [\"WHEEL\"];\n        if(info.Minions) minions = info.Minions;\n        Output.addResponseOutput(output, minions, info.Result, info.Function);\n\n        this.resolvePromise();\n    }\n\n}\n","import {PageRoute} from './PageRoute';\n\nexport class JobsRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]jobs$\", \"Jobs\", \"#page_jobs\", \"#button_jobs\", router);\n        this.jobsLoaded = false;\n    }\n\n    onShow() {\n        const jobs = this;\n        return new Promise(function(resolve, reject) {\n            jobs.resolvePromise = resolve;\n            if(jobs.jobsLoaded) resolve();\n            jobs.router.api.getJobs().then(data => {\n                jobs._updateJobs(data, 50, true);\n            });\n            jobs.router.api.getJobsActive().then(data => {\n                jobs._runningJobs(data, true);\n            });\n        });\n    }\n\n}\n","import {PageRoute} from './PageRoute';\nimport {Route} from './Route';\nimport {DropDownMenu} from '../DropDownMenu';\n\nexport class KeysRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]keys$\", \"Keys\", \"#page_keys\", \"#button_keys\", router);\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._updateKeys = this._updateKeys.bind(this);\n        this._updateKeysFingerprint = this._updateKeysFingerprint.bind(this);\n    }\n\n    onShow() {\n        const keys = this;\n        const p1 = keys.router.api.getKeys();\n        const p2 = keys.router.api.getKeysFingerprint();\n\n        Promise.all([p1, p2])\n            .then(function(data){\n                // process result of 1st promise\n                keys._updateKeys(data[0]);\n                // process result of 2nd promise\n                keys._updateKeysFingerprint(data[1]);\n            });\n        return new Promise(function(resolve, reject) {\n            keys.resolvePromise = resolve;\n            if(keys.keysLoaded && keys.jobsLoaded) resolve();\n            keys.router.api.getJobs().then(keys._updateJobs);\n            keys.router.api.getJobsActive().then(keys._runningJobs);\n        });\n    }\n\n    _updateKeysFingerprint(data) {\n        const keys = data.return[0].data.return;\n\n        for(const property of Object.keys(keys)) {\n            if(property === \"local\") continue;\n            const hosts = keys[property];\n            for(const hostname of Object.keys(hosts)) {\n                const item = document.querySelector(\"#\" + hostname + \" .os\");\n                if(item) {\n                    // remove td.os for accepted minions and add td.fingerprint\n                    item.parentElement.insertBefore(Route._createTd(\"fingerprint\", \"\"), item);\n                    item.parentElement.removeChild(item);\n                }\n\n                // update td.fingerprint with fingerprint value\n                const fingerprintElement = document.querySelector(\"#\" + hostname + \" .fingerprint\");\n                const fingerprint = hosts[hostname];\n                if(fingerprintElement) fingerprintElement.innerText = fingerprint;\n            }\n        }\n    }\n\n    _updateKeys(data) {\n        const keys = data.return;\n        const list = this.getPageElement().querySelector(\"#minions\");\n\n        // Unaccepted goes first because that is where the user must decide\n        const hostnames_pre = keys.minions_pre.sort();\n        for(const hostname of hostnames_pre) {\n            this._addPreMinion(list, hostname);\n        }\n\n        const hostnames_accepted = keys.minions.sort();\n        for(const hostname of hostnames_accepted) {\n            this._addMinion(list, hostname, 1);\n\n            // preliminary dropdown menu\n            const element = document.getElementById(hostname);\n            const menu = new DropDownMenu(element);\n            this._addMenuItemReject(menu, hostname, \" include_accepted=true\");\n            this._addMenuItemDelete(menu, hostname, \"\");\n        }\n\n        const hostnames_denied = keys.minions_denied.sort();\n        for(const hostname of hostnames_denied) {\n            this._addDeniedMinion(list, hostname);\n        }\n\n        const hostnames_rejected = keys.minions_rejected.sort();\n        for(const hostname of hostnames_rejected) {\n            this._addRejectedMinion(list, hostname);\n        }\n\n        let summary = \"\";\n        if(hostnames_pre.length === 0)\n            summary += \", no unaccepted keys\";\n        if(hostnames_accepted.length === 0)\n            summary += \", no accepted keys\";\n        if(hostnames_denied.length === 0)\n            summary += \", no denied keys\";\n        if(hostnames_rejected.length === 0)\n            summary += \", no rejected keys\";\n        if(summary) {\n            const div = Route._createDiv(\"msg\", summary.replace(/, n/, \"N\"));\n            this.getPageElement().querySelector(\".minion-list\").appendChild(div);\n        }\n\n        this.keysLoaded = true;\n        if(this.keysLoaded && this.jobsLoaded) this.resolvePromise();\n    }\n\n    _updateOfflineMinion(container, hostname) {\n        super._updateOfflineMinion(container, hostname);\n\n        const element = document.getElementById(hostname);\n\n        // force same columns on all rows\n        element.appendChild(Route._createTd(\"fingerprint\", \"\"));\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemReject(menu, hostname, \" include_accepted=true\");\n        this._addMenuItemDelete(menu, hostname, \"\");\n    }\n\n    _addRejectedMinion(container, hostname) {\n        const element = this._getElement(container, hostname);\n\n        element.appendChild(Route._createTd(\"hostname\", hostname));\n\n        const rejected = Route._createTd(\"status\", \"rejected\");\n        rejected.classList.add(\"rejected\");\n        element.appendChild(rejected);\n\n        // force same columns on all rows\n        element.appendChild(Route._createTd(\"fingerprint\", \"\"));\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemDelete(menu, hostname, \"\");\n        this._addMenuItemAccept(menu, hostname, \" include_rejected=true\");\n\n        container.tBodies[0].appendChild(element);\n    }\n\n    _addDeniedMinion(container, hostname) {\n        const element = this._getElement(container, hostname);\n\n        element.appendChild(Route._createTd(\"hostname\", hostname));\n\n        const denied = Route._createTd(\"status\", \"denied\");\n        denied.classList.add(\"denied\");\n        element.appendChild(denied);\n\n        // force same columns on all rows\n        element.appendChild(Route._createTd(\"fingerprint\", \"\"));\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemAccept(menu, hostname, \" include_denied=true\");\n        this._addMenuItemReject(menu, hostname, \" include_denied=true\");\n        this._addMenuItemDelete(menu, hostname, \"\");\n\n        container.tBodies[0].appendChild(element);\n    }\n\n    _addPreMinion(container, hostname) {\n        const element = this._getElement(container, hostname);\n\n        element.appendChild(Route._createTd(\"hostname\", hostname));\n\n        const pre = Route._createTd(\"status\", \"unaccepted\");\n        pre.classList.add(\"unaccepted\");\n        element.appendChild(pre);\n\n        // force same columns on all rows\n        element.appendChild(Route._createTd(\"fingerprint\", \"\"));\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemAccept(menu, hostname, \"\");\n        this._addMenuItemReject(menu, hostname, \"\");\n        this._addMenuItemDelete(menu, hostname, \"\");\n\n        container.tBodies[0].appendChild(element);\n    }\n\n    _addMenuItemAccept(menu, hostname, extra) {\n        menu.addMenuItem(\"Accept&nbsp;key...\", function(evt) {\n            this._runCommand(evt, hostname, \"wheel.key.accept\" + extra);\n        }.bind(this));\n    }\n\n    _addMenuItemReject(menu, hostname, extra) {\n        menu.addMenuItem(\"Reject&nbsp;key...\", function(evt) {\n            this._runCommand(evt, hostname, \"wheel.key.reject\" + extra);\n        }.bind(this));\n    }\n\n    _addMenuItemDelete(menu, hostname, extra) {\n        menu.addMenuItem(\"Delete&nbsp;key...\", function(evt) {\n            this._runCommand(evt, hostname, \"wheel.key.delete\" + extra);\n        }.bind(this));\n    }\n}\n","import {Route} from './Route';\n\nexport class LoginRoute extends Route {\n\n    constructor(router) {\n        super(\"^[\\/]login$\", \"Login\", \"#page_login\", \"\", router);\n\n        this.loginPending = false;\n\n        this.onLogin = this.onLogin.bind(this);\n        this.onLoginSuccess = this.onLoginSuccess.bind(this);\n        this.onLoginFailure = this.onLoginFailure.bind(this);\n        this.registerEventListeners();\n    }\n\n    onShow() {\n        const eauthSelector = document.querySelector(\"#login-form #eauth\");\n        const eauthValue = window.localStorage.getItem(\"eauth\");\n        eauthSelector.value = eauthValue ? eauthValue : \"pam\";\n    }\n\n    registerEventListeners() {\n        const submit = document.querySelector(\"#login-form\");\n        submit.addEventListener(\"submit\", this.onLogin);\n    }\n\n    onLogin(evt) {\n        evt.preventDefault();\n        if(this.loginPending) return; //Don't continue if waiting on a request\n\n        const username = document.querySelector(\"#username\").value;\n        const password = document.querySelector(\"#password\").value;\n        const eauth = document.querySelector(\"#eauth\").value;\n\n        this.toggleForm(false);\n        this.router.api.login(username, password, eauth)\n            .then(this.onLoginSuccess, this.onLoginFailure);\n    }\n\n    onLoginSuccess() {\n        this.toggleForm(true);\n\n        const notice = document.querySelector(\".notice-wrapper\");\n\n        const success = Route._createDiv(\"notice\", \"Please wait...\");\n        success.style.backgroundColor = \"#4CAF50\";\n        notice.replaceChild(success, notice.firstChild);\n\n        document.querySelector(\"#username\").disabled = true;\n        document.querySelector(\"#password\").disabled = true;\n        document.querySelector(\"#eauth\").disabled = true;\n\n        notice.className = \"notice-wrapper\";\n        notice.focus(); //Used to trigger a reflow (to restart animation)\n        notice.className = \"notice-wrapper show\";\n\n        this.router.goTo(\"/\");\n    }\n\n    onLoginFailure() {\n        this.toggleForm(true);\n\n        const notice = document.querySelector(\".notice-wrapper\");\n\n        const authFailed = Route._createDiv(\"notice\", \"Authentication failed\");\n        authFailed.style.backgroundColor = \"#F44336\";\n\n        notice.replaceChild(authFailed, notice.firstChild);\n        notice.className = \"notice-wrapper\";\n        notice.focus(); //Used to trigger a reflow (to restart animation)\n        notice.className = \"notice-wrapper show\";\n    }\n\n    toggleForm(allowSubmit) {\n        this.loginPending = !allowSubmit;\n        document.querySelector(\"#login-form input[type='submit']\")\n            .disabled = !allowSubmit;\n    }\n\n}\n","import {PageRoute} from './PageRoute';\nimport {DropDownMenu} from '../DropDownMenu';\n\nexport class MinionsRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]$\", \"Minions\", \"#page_minions\", \"#button_minions\", router);\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._updateKeys = this._updateKeys.bind(this);\n    }\n\n    onShow() {\n        const minions = this;\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getMinions().then(minions._updateMinions);\n            minions.router.api.getKeys().then(minions._updateKeys);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n            //we need these functions to populate the dropdown boxes\n            minions.router.api.getConfigValues().then(minions._configvalues);\n        });\n    }\n\n    _configvalues(data) {\n    // store for later use\n\n        const templates = data.return[0].data.return.saltgui_templates;\n        window.localStorage.setItem(\"templates\", JSON.stringify(templates));\n\n        const public_pillars = data.return[0].data.return.saltgui_public_pillars;\n        window.localStorage.setItem(\"public_pillars\", JSON.stringify(public_pillars));\n\n        const preview_grains = data.return[0].data.return.saltgui_preview_grains;\n        window.localStorage.setItem(\"preview_grains\", JSON.stringify(preview_grains));\n\n        let nodegroups = data.return[0].data.return.nodegroups;\n        if(!nodegroups) nodegroups = {};\n        window.localStorage.setItem(\"nodegroups\", JSON.stringify(nodegroups));\n\n        const output_formats = data.return[0].data.return.saltgui_output_formats;\n        window.localStorage.setItem(\"output_formats\", JSON.stringify(output_formats));\n\n        const datetime_fraction_digits = data.return[0].data.return.saltgui_datetime_fraction_digits;\n        window.localStorage.setItem(\"datetime_fraction_digits\", JSON.stringify(datetime_fraction_digits));\n    }\n\n    _updateKeys(data) {\n        const keys = data.return;\n\n        const list = this.getPageElement().querySelector(\"#minions\");\n\n        const hostnames = keys.minions.sort();\n        for(const hostname of hostnames) {\n            this._addMinion(list, hostname, 1);\n\n            // preliminary dropdown menu\n            const element = document.getElementById(hostname);\n            const menu = new DropDownMenu(element);\n            this._addMenuItemStateApply(menu, hostname);\n\n            element.addEventListener(\"click\", evt => this._runCommand(evt, hostname, \"state.apply\"));\n        }\n\n        this.keysLoaded = true;\n        if(this.keysLoaded && this.jobsLoaded) this.resolvePromise();\n    }\n\n    _updateOfflineMinion(container, hostname) {\n        super._updateOfflineMinion(container, hostname);\n\n        const element = document.getElementById(hostname);\n\n        // force same columns on all rows\n        element.appendChild(Route._createTd(\"saltversion\", \"\"));\n        element.appendChild(Route._createTd(\"os\", \"\"));\n        element.appendChild(Route._createTd(\"run-command-button\", \"\"));\n    }\n\n    _updateMinion(container, minion, hostname) {\n        super._updateMinion(container, minion, hostname);\n\n        const element = document.getElementById(hostname);\n        const menu = new DropDownMenu(element);\n        this._addMenuItemStateApply(menu, hostname);\n\n        element.addEventListener(\"click\", evt => this._runCommand(evt, hostname, \"state.apply\"));\n    }\n\n    _addMenuItemStateApply(menu, hostname) {\n        menu.addMenuItem(\"Apply&nbsp;state...\", function(evt) {\n            this._runCommand(evt, hostname, \"state.apply\");\n        }.bind(this));\n    }\n}\n","import {PageRoute} from './PageRoute';\nimport {DropDownMenu} from '../DropDownMenu';\nimport {Output} from '../output';\n\nexport class PillarsMinionRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]pillarsminion$\", \"Pillars\", \"#page_pillarsminion\", \"#button_pillars\", router);\n\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._showPillars = this._showPillars.bind(this);\n\n        document.querySelector(\"#button_close_pillarsminion\").addEventListener(\"click\", _ => {\n            this.router.goTo(\"/pillars\");\n        });\n    }\n\n    onShow() {\n        const minions = this;\n\n        const minion = decodeURIComponent(window.getQueryParam(\"minion\"));\n\n        const title = document.getElementById(\"pillarsminion_title\");\n        title.innerText = \"Pillars on \" + minion;\n\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getPillarItems(minion).then(minions._showPillars);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n        });\n    }\n\n    _showPillars(data) {\n        const minion = decodeURIComponent(window.getQueryParam(\"minion\"));\n\n        const pillars = data.return[0][minion];\n\n        const pmp = document.getElementById(\"pillarsminion_page\");\n        const menu = new DropDownMenu(pmp);\n        this._addMenuItemRefreshPillar(menu, minion);\n\n        const container = document.getElementById(\"pillarsminion_list\");\n\n        // new menu's are always added at the bottom of the div\n        // fix that by re-adding the minion list\n        pmp.appendChild(container);\n\n        while(container.tBodies[0].rows.length > 0) {\n            container.tBodies[0].deleteRow(0);\n        }\n\n        if(!pillars) return;\n\n        // collect the public pillars and compile their regexps\n        let publicPillarsText = window.localStorage.getItem(\"public_pillars\");\n        if(!publicPillarsText || publicPillarsText === \"undefined\") publicPillarsText = \"[]\";\n        let public_pillars = JSON.parse(publicPillarsText);\n        if(!Array.isArray(public_pillars)) public_pillars = [ ];\n        for(let i = 0; i < public_pillars.length; i++) {\n            try {\n                public_pillars[i] = new RegExp(public_pillars[i]);\n            }\n            catch(err) {\n                // most likely a syntax error in the RE\n                public_pillars[i] = null;\n            }\n        }\n\n        const keys = Object.keys(pillars).sort();\n        for(const k of keys) {\n            const pillar = document.createElement('tr');\n\n            const name = PillarsMinionRoute._createTd(\"pillar_name\", k);\n            pillar.appendChild(name);\n\n            // menu comes before this data if there was any\n\n            // 8 bullet characters\n            const value_hidden = \"\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\";\n            const pillar_hidden = PillarsMinionRoute._createTd(\"pillar_hidden\", value_hidden);\n            // initially use the hidden view\n            pillar.appendChild(pillar_hidden);\n\n            const value_shown = Output.formatObject(pillars[k]);\n            const pillar_shown = PillarsMinionRoute._createTd(\"pillar_shown\", value_shown);\n            // initially hide the normal view\n            pillar_shown.style.display = \"none\";\n            // add the non-masked representation, not shown yet\n            pillar.appendChild(pillar_shown);\n\n            // show public pillars immediatelly\n            for(let i = 0; i < public_pillars.length; i++) {\n                if(public_pillars[i] && public_pillars[i].test(k)) {\n                    // same code as when clicking the hidden value\n                    pillar_hidden.style.display = \"none\";\n                    pillar_shown.style.display = \"\";\n                    break;\n                }\n            }\n\n            pillar_hidden.addEventListener(\"click\", function(evt) {\n                pillar_hidden.style.display = \"none\";\n                pillar_shown.style.display = \"\";\n            });\n\n            pillar_shown.addEventListener(\"click\", function(evt) {\n                pillar_shown.style.display = \"none\";\n                pillar_hidden.style.display = \"\";\n            });\n\n            container.tBodies[0].appendChild(pillar);\n        }\n\n        if(!keys.length) {\n            const noPillarsMsg = PillarsMinionRoute._createTd(\"msg\", \"No pillars found\");\n            container.tBodies[0].appendChild(noPillarsMsg);\n        }\n    }\n\n    _addMenuItemRefreshPillar(menu, hostname) {\n        menu.addMenuItem(\"Refresh&nbsp;pillar...\", function(evt) {\n            this._runCommand(evt, hostname, \"saltutil.refresh_pillar\");\n        }.bind(this));\n    }\n}\n","import {PageRoute} from './PageRoute';\nimport {DropDownMenu} from '../DropDownMenu';\n\nexport class PillarsRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]pillars$\", \"Pillars\", \"#page_pillars\", \"#button_pillars\", router);\n\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._updateKeys = this._updateKeys.bind(this);\n        this._updateMinion = this._updateMinion.bind(this);\n    }\n\n    onShow() {\n        const minions = this;\n\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getPillarObfuscate(null).then(minions._updateMinions);\n            minions.router.api.getKeys().then(minions._updateKeys);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n        });\n    }\n\n    _updateKeys(data) {\n        const keys = data.return;\n\n        const list = this.getPageElement().querySelector('#minions');\n\n        const hostnames = keys.minions.sort();\n        for(const hostname of hostnames) {\n            this._addMinion(list, hostname, 1);\n\n            // preliminary dropdown menu\n            const element = document.getElementById(hostname);\n            const menu = new DropDownMenu(element);\n            this._addMenuItemShowPillars(menu, hostname);\n\n            element.addEventListener(\"click\", evt => window.location.assign(\"pillarsminion?minion=\" + encodeURIComponent(hostname)));\n        }\n\n        this.keysLoaded = true;\n        if(this.keysLoaded && this.jobsLoaded) this.resolvePromise();\n    }\n\n    _updateOfflineMinion(container, hostname) {\n        super._updateOfflineMinion(container, hostname);\n\n        const element = document.getElementById(hostname);\n\n        // force same columns on all rows\n        element.appendChild(PillarsRoute._createTd(\"pillarinfo\", \"\"));\n        element.appendChild(PillarsRoute._createTd(\"run-command-button\", \"\"));\n    }\n\n    _updateMinion(container, minion, hostname) {\n        super._updateMinion(container, null, hostname);\n\n        const element = document.getElementById(hostname);\n\n        const cnt = Object.keys(minion).length;\n        let pillarInfoText;\n        if(cnt === 0) {\n            pillarInfoText = \"No pillars\";\n        } else if(cnt === 1) {\n            pillarInfoText = cnt + \" pillar\";\n        } else {\n            pillarInfoText = cnt + \" pillars\";\n        }\n        const pillarInfoTd = PillarsRoute._createTd(\"pillarinfo\", pillarInfoText);\n        pillarInfoTd.setAttribute(\"sorttable_customkey\", cnt);\n        element.appendChild(pillarInfoTd);\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemShowPillars(menu, hostname);\n\n        element.addEventListener(\"click\", evt => window.location.assign(\"pillarsminion?minion=\" + encodeURIComponent(hostname)));\n    }\n\n    _addMenuItemShowPillars(menu, hostname) {\n        menu.addMenuItem(\"Show&nbsp;pillars\", function(evt) {\n            window.location.assign(\"pillarsminion?minion=\" + encodeURIComponent(hostname));\n        }.bind(this));\n    }\n}\n","import {PageRoute} from './PageRoute';\nimport {DropDownMenu} from '../DropDownMenu';\n\nexport class SchedulesRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]schedules$\", \"Schedules\", \"#page_schedules\", \"#button_schedules\", router);\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._updateKeys = this._updateKeys.bind(this);\n        this._updateMinion = this._updateMinion.bind(this);\n    }\n\n    onShow() {\n        const minions = this;\n\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getScheduleList(null)\n                .then(minions._updateMinions, minions._updateMinions);\n            minions.router.api.getKeys().then(minions._updateKeys);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n        });\n    }\n\n    // This one has some historic ballast:\n    // Meta-data is returned on the same level as\n    // the list of scheduled items\n    static _fixMinion(data) {\n        const ret = { \"schedules\": {}, \"enabled\": true };\n        for(const k in data) {\n            if(k === \"enabled\") {\n                ret.enabled = data.enabled;\n                continue;\n            }\n            if(k === \"schedule\" && JSON.stringify(data[k]) === \"{}\") {\n                continue;\n            }\n            ret.schedules[k] = data[k];\n        }\n        return ret;\n    }\n\n    _updateKeys(data) {\n        const keys = data.return;\n\n        const list = this.getPageElement().querySelector('#minions');\n\n        const hostnames = keys.minions.sort();\n        for(const hostname of hostnames) {\n            this._addMinion(list, hostname, 1);\n\n            // preliminary dropdown menu\n            const element = document.getElementById(hostname);\n            const menu = new DropDownMenu(element);\n            this._addMenuItemShowSchedules(menu, hostname);\n\n            element.addEventListener(\"click\", evt => window.location.assign(\"schedulesminion?minion=\" + encodeURIComponent(hostname)));\n        }\n\n        this.keysLoaded = true;\n        if(this.keysLoaded && this.jobsLoaded) this.resolvePromise();\n    }\n\n    _updateOfflineMinion(container, hostname) {\n        super._updateOfflineMinion(container, hostname);\n\n        const element = document.getElementById(hostname);\n\n        // force same columns on all rows\n        element.appendChild(SchedulesRoute._createTd(\"scheduleinfo\", \"\"));\n        element.appendChild(SchedulesRoute._createTd(\"run-command-button\", \"\"));\n    }\n\n    _updateMinion(container, minion, hostname) {\n\n        minion = SchedulesRoute._fixMinion(minion);\n\n        const cnt = Object.keys(minion.schedules).length;\n        let scheduleinfo = cnt + \" schedule\" + (cnt === 1 ? \"\" : \"s\");\n        if(!minion.enabled)\n            scheduleinfo += \" (disabled)\";\n\n        let element = document.getElementById(hostname);\n        if(element === null) {\n            // offline minion not found on screen...\n            // construct a basic element that can be updated here\n            element = document.createElement('tr');\n            element.id = hostname;\n            container.appendChild(element);\n        }\n        while(element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n\n        element.appendChild(SchedulesRoute._createTd(\"hostname\", hostname));\n\n        const statusDiv = SchedulesRoute._createTd(\"status\", \"accepted\");\n        statusDiv.classList.add(\"accepted\");\n        element.appendChild(statusDiv);\n\n        const td = SchedulesRoute._createTd(\"scheduleinfo\", scheduleinfo);\n        td.setAttribute(\"sorttable_customkey\", cnt);\n        element.appendChild(td);\n\n        const menu = new DropDownMenu(element);\n        this._addMenuItemShowSchedules(menu, hostname);\n\n        element.addEventListener(\"click\", evt => window.location.assign(\"schedulesminion?minion=\" + encodeURIComponent(hostname)));\n    }\n\n    _addMenuItemShowSchedules(menu, hostname) {\n        menu.addMenuItem(\"Show&nbsp;schedules\", function(evt) {\n            window.location.assign(\"schedulesminion?minion=\" + encodeURIComponent(hostname));\n        }.bind(this));\n    }\n}\n","import {PageRoute} from './PageRoute';\nimport {SchedulesRoute} from './SchedulesRoute';\nimport {DropDownMenu} from '../DropDownMenu';\n\nexport class SchedulesMinionRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]schedulesminion$\", \"Schedules\", \"#page_schedulesminion\", \"#button_schedules\", router);\n\n        this.keysLoaded = false;\n        this.jobsLoaded = false;\n\n        this._showSchedules = this._showSchedules.bind(this);\n\n        document.querySelector(\"#button_close_schedulesminion\").addEventListener(\"click\", _ => {\n            this.router.goTo(\"/schedules\");\n        });\n    }\n\n    onShow() {\n        const minions = this;\n\n        const minion = decodeURIComponent(window.getQueryParam(\"minion\"));\n\n        // preliminary title\n        const title = document.getElementById(\"schedulesminion_title\");\n        title.innerText = \"Schedules on \" + minion;\n\n        return new Promise(function(resolve, reject) {\n            minions.resolvePromise = resolve;\n            if(minions.keysLoaded && minions.jobsLoaded) resolve();\n            minions.router.api.getScheduleList(minion).then(minions._showSchedules);\n            minions.router.api.getJobs().then(minions._updateJobs);\n            minions.router.api.getJobsActive().then(minions._runningJobs);\n        });\n    }\n\n    _showSchedules(data) {\n        const minion = decodeURIComponent(window.getQueryParam(\"minion\"));\n\n        let schedules = data.return[0][minion];\n        schedules = SchedulesRoute._fixMinion(schedules);\n\n        const title = document.getElementById(\"schedulesminion_title\");\n        let txt = \"Schedules on \" + minion;\n        if(!schedules.enabled) txt += \" (disabled)\";\n        title.innerText = txt;\n\n        const page = document.getElementById(\"schedulesminion_page\");\n\n        const menu = new DropDownMenu(page);\n        menu.addMenuItem(\"Enable&nbsp;scheduler...\", function(evt) {\n            this._runCommand(evt, minion, \"schedule.enable\");\n        }.bind(this));\n        menu.addMenuItem(\"Disable&nbsp;scheduler...\", function(evt) {\n            this._runCommand(evt, minion, \"schedule.disable\");\n        }.bind(this));\n\n        const container = document.getElementById(\"schedulesminion_list\");\n        page.append(container);\n\n        while(container.tBodies[0].rows.length > 0) {\n            container.tBodies[0].deleteRow(0);\n        }\n\n\n        if(!schedules) return;\n\n        const keys = Object.keys(schedules.schedules).sort();\n        for(const k of keys) {\n\n            const schedule = schedules.schedules[k];\n\n            // simplify the schedule information\n            if(\"name\" in schedule)\n                delete schedule.name;\n            if(\"enabled\" in schedule && schedule.enabled)\n                delete schedule.enabled;\n            if(\"jid_include\" in schedule && schedule.jid_include)\n                delete schedule.jid_include;\n            if(\"maxrunning\" in schedule && schedule.maxrunning === 1)\n                delete schedule.maxrunning;\n\n            const tr = document.createElement('tr');\n\n            const name = SchedulesMinionRoute._createTd(\"schedule_name\", k);\n            tr.appendChild(name);\n\n            const isJobDisabled = schedule.hasOwnProperty(\"enabled\") && !schedule.enabled;\n\n            const menu = new DropDownMenu(tr);\n            let cmd = \"schedule.modify \" + k;\n            for(const key in schedule) {\n                cmd = cmd + \" \" + key + \"=\" + JSON.stringify(schedule[key]);\n            }\n            menu.addMenuItem(\"Modify&nbsp;job...\", function(evt) {\n                this._runCommand(evt, minion, cmd);\n            }.bind(this));\n            menu.addMenuItem(\"Enable&nbsp;job...\", function(evt) {\n                this._runCommand(evt, minion, \"schedule.enable_job \" + k);\n            }.bind(this));\n            menu.addMenuItem(\"Disable&nbsp;job...\", function(evt) {\n                this._runCommand(evt, minion, \"schedule.disable_job \" + k);\n            }.bind(this));\n            menu.addMenuItem(\"Delete&nbsp;job...\", function(evt) {\n                this._runCommand(evt, minion, \"schedule.delete \" + k);\n            }.bind(this));\n            menu.addMenuItem(\"Run&nbsp;job...\", function(evt) {\n                let cmd = \"schedule.run_job\";\n                if(isJobDisabled) cmd += \" force=true\";\n                cmd += \" \" + k;\n                this._runCommand(evt, minion, cmd);\n            }.bind(this));\n\n            // menu comes before this data on purpose\n            const schedule_value = Output.formatObject(schedule);\n            const value = SchedulesMinionRoute._createTd(\"schedule_value\", schedule_value);\n            if(isJobDisabled) value.classList.add(\"disabled_schedule\");\n            tr.appendChild(value);\n\n            container.tBodies[0].appendChild(tr);\n\n            tr.addEventListener(\"click\", evt => this._runCommand(evt, minion, cmd));\n        }\n\n        if(!keys.length) {\n            const noSchedulesMsg = SchedulesMinionRoute._createDiv(\"msg\", \"No schedules found\");\n            container.tBodies[0].appendChild(noSchedulesMsg);\n        }\n    }\n}\n","import {PageRoute} from './PageRoute';\nimport {DropDownMenu} from '../DropDownMenu';\n\nexport class TemplatesRoute extends PageRoute {\n\n    constructor(router) {\n        super(\"^[\\/]templates$\", \"Templates\", \"#page_templates\", \"#button_templates\", router);\n        this.jobsLoaded = false;\n\n        this._updateTemplates = this._updateTemplates.bind(this);\n        this._applyTemplate = this._applyTemplate.bind(this);\n    }\n\n    onShow() {\n        const templates = this;\n        return new Promise(function(resolve, reject) {\n            templates.resolvePromise = resolve;\n            if(templates.jobsLoaded) resolve();\n            templates.router.api.getJobs().then(templates._updateJobs);\n            templates.router.api.getJobsActive().then(templates._runningJobs);\n            templates.router.api.getConfigValues().then(templates._updateTemplates);\n        });\n    }\n\n    _updateTemplates(data) {\n        const container = this.getPageElement().querySelector(\".templates\");\n    \n        // should we update it or just use from cache (see commandbox) ?\n        const templates = data.return[0].data.return.saltgui_templates;\n        window.localStorage.setItem(\"templates\", JSON.stringify(templates));\n        const keys = Object.keys(templates).sort();\n        for(const key of keys) {\n            const template = templates[key];\n            this._addTemplate(container, key, template);\n        }\n    }\n\n    _addTemplate(container, name, template) {\n        const tr = document.createElement(\"tr\");\n\n        tr.appendChild(TemplatesRoute._createTd(\"name\", name));\n\n        // calculate description\n        const description = template[\"description\"];\n        if(!description) {\n            tr.appendChild(TemplatesRoute._createTd(\"description value_none\", \"(none)\"));\n        } else {\n            tr.appendChild(TemplatesRoute._createTd(\"description\", description));\n        }\n\n        // calculate targettype\n        const targettype = template[\"targettype\"];\n        // calculate target\n        const target = template[\"target\"];\n        if(!targettype && !target) {\n            tr.appendChild(TemplatesRoute._createTd(\"target value_none\", \"(none)\"));\n        } else if(/* targettype && */ !target) {\n            tr.appendChild(TemplatesRoute._createTd(\"target\", targettype));\n        } else if(!targettype /* && target */) {\n            tr.appendChild(TemplatesRoute._createTd(\"target\", target));\n        } else {\n            tr.appendChild(TemplatesRoute._createTd(\"target\", targettype + \" \" + target));\n        }\n\n        // calculate command\n        const command = template[\"command\"];\n        if(!command) {\n            tr.appendChild(TemplatesRoute._createTd(\"command value_none\", \"(none)\"));\n        } else {\n            tr.appendChild(TemplatesRoute._createTd(\"command\", command));\n        }\n\n        const menu = new DropDownMenu(tr);\n        menu.addMenuItem(\"Apply&nbsp;template...\", function(evt) {\n            this._applyTemplate(evt, targettype, target, command);\n        }.bind(this));\n\n        container.tBodies[0].appendChild(tr);\n\n        tr.addEventListener(\"click\", evt => this._applyTemplate(evt, targettype, target, command));\n    }\n\n    _applyTemplate(evt, targettype, target, command) {\n        this._runFullCommand(evt, targettype, target, command);\n    }\n\n}\n","export class HTTPError extends Error {\n    constructor(status, message) {\n        super();\n        this.status = status;\n        this.message = message;\n    }\n}\n\n\nexport class Api {\n    constructor(apiurl=\"\") {\n        this.APIURL = apiurl;\n    }\n\n    isAuthenticated() {\n    // use the /stats api call to see if we are allowed to access SaltGUI\n    // (if the session cookie is still valid)\n        return this.apiRequest(\"GET\", \"/stats\", {})\n            .then(response => {\n                return window.sessionStorage.getItem(\"token\") !== null;\n            }, response => { return false; } );\n    }\n\n    login(username, password, eauth=\"pam\") {\n        const params = {\n            username: username,\n            password: password,\n            eauth: eauth\n        };\n\n        // store it as the default login method\n        window.localStorage.setItem(\"eauth\", eauth);\n\n        return this.apiRequest(\"POST\", \"/login\", params)\n            .then(data => {\n                const response = data.return[0];\n                if(Object.keys(response.perms).length === 0) {\n                    // we are allowed to login but there are no permissions available\n                    throw new HTTPError(403, \"Unauthorized\");\n                }\n                window.sessionStorage.setItem(\"token\", response.token);\n            });\n    }\n\n    logout() {\n    // only delete the session here as the router should take care of\n    // redirecting to the login screen\n        return this.apiRequest(\"POST\", \"/logout\", {})\n            .then(response => {\n                window.sessionStorage.removeItem(\"token\");\n            });\n    }\n\n    getMinions() {\n        return this.apiRequest(\"GET\", \"/minions\", {});\n    }\n\n    getKeys() {\n        return this.apiRequest(\"GET\", \"/keys\", {});\n    }\n\n    getKeysFingerprint() {\n        const params = {\n            client: \"wheel\",\n            fun: \"key.finger\",\n            match: \"*\"\n        };\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    getJobs() {\n        return this.apiRequest(\"GET\", \"/jobs\", {});\n    }\n\n    getJob(id) {\n        return this.apiRequest(\"GET\", \"/jobs/\" + id, {});\n    }\n\n    getGrainsItems(minion) {\n        const params = {\n            client: \"local\",\n            fun: \"grains.items\",\n            tgt_type: \"list\",\n            tgt: minion\n        };\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    getPillarItems(minion) {\n        const params = {\n            client: \"local\",\n            fun: \"pillar.items\"\n        };\n        if(minion) {\n            params.tgt_type = \"list\";\n            params.tgt = minion;\n        } else {\n            params.tgt_type = \"glob\";\n            params.tgt = \"*\";\n        }\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    getPillarObfuscate(minion) {\n        const params = {\n            client: \"local\",\n            fun: \"pillar.obfuscate\"\n        };\n        if(minion) {\n            params.tgt_type = \"list\";\n            params.tgt = minion;\n        } else {\n            params.tgt_type = \"glob\";\n            params.tgt = \"*\";\n        }\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    getScheduleList(minion) {\n        const params = {\n            client: \"local\",\n            fun: \"schedule.list\",\n            kwarg: { return_yaml: false }\n        };\n        if(minion) {\n            params.tgt_type = \"list\";\n            params.tgt = minion;\n        } else {\n            params.tgt_type = \"glob\";\n            params.tgt = \"*\";\n        }\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    getJobsActive() {\n        const params = {\n            client: \"runner\",\n            fun: \"jobs.active\"\n        };\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    getConfigValues() {\n        const params = {\n            client: \"wheel\",\n            fun: \"config.values\"\n        };\n        return this.apiRequest(\"POST\", \"/\", params).catch(console.error);\n    }\n\n    apiRequest(method, route, params) {\n        const location = this.APIURL + route;\n        const token = window.sessionStorage.getItem(\"token\");\n        const headers = {\n            \"Accept\": \"application/json\",\n            \"X-Auth-Token\": token !== null ? token : \"\",\n            \"Cache-Control\": \"no-cache\"\n        };\n        const options = {\n            method: method,\n            url: location,\n            headers: headers\n        };\n\n        if(method === \"POST\") options.body = JSON.stringify(params);\n\n        return fetch(location, options)\n            .then(response => {\n                if(response.ok) return response.json();\n                // fetch does not reject on > 300 http status codes, so let's\n                // do it ourselves\n                throw new HTTPError(response.status, response.statusText);\n            });\n    }\n}\n","// documentation utilities\n\nexport class Documentation {\n\n    // formatting of the documentation is done as a regular output type\n    // that is therefore in output.js\n\n    constructor (commandbox) {\n        this.commandbox = commandbox;\n        this._manualRunMenuSysDocRun = this._manualRunMenuSysDocRun.bind(this);\n\n        commandbox.cmdmenu.addMenuItem(\n            this._manualRunMenuSysDocPrepare,\n            this._manualRunMenuSysDocRun);\n    }\n\n    _manualRunMenuSysDocPrepare(menuitem) {\n        let target = document.querySelector(\".run-command #target\").value;\n        target = target ? \"target\" : \"all minions\";\n        let command = document.querySelector(\".run-command #command\").value;\n        // remove the command arguments\n        command = command.trim().replace(/ .*/, \"\");\n        command = command.trim().replace(/[.]*$/, \"\");\n        if(!command.match(/^[a-z_][a-z0-9_.]*$/i)) {\n            // When it is not a command, don't treat it as a command.\n            // This RE still allows some illegal command formats, but\n            // that is something that sys.doc/runners.doc can handle.\n            menuitem.style.display = \"none\";\n        } else if(!command) {\n            // this spot was reserved for `sys.doc` without parameters\n            // but that is far too slow for normal use\n            menuitem.style.display = \"none\";\n        } else if(command === \"runners\" || command.startsWith(\"runners.\")) {\n            // actually \"command\" is not passed, but we select that part of the actual result\n            // because `runners.doc.runner` always returns all documentation for \"runners\"\n            command = command.substring(8);\n            if(command) command = \" \" + command;\n            menuitem.innerText = \"Run 'runners.doc.runner\" + command + \"'\";\n            menuitem.style.display = \"block\";\n        } else if(command === \"wheel\" || command.startsWith(\"wheel.\")) {\n            // actually \"command\" is not passed, but we select that part of the actual result\n            // because `runners.doc.wheel` always returns all documentation for \"wheel\"\n            command = command.substring(6);\n            if(command) command = \" \" + command;\n            menuitem.innerText = \"Run 'runners.doc.wheel\" + command + \"'\";\n            menuitem.style.display = \"block\";\n        } else {\n            menuitem.innerText = \"Run 'sys.doc \" + command + \"' on \" + target;\n            menuitem.style.display = \"block\";\n        }\n    }\n\n    _manualRunMenuSysDocRun() {\n        const button = document.querySelector(\".run-command input[type='submit']\");\n        if(button.disabled) return;\n        const output = document.querySelector(\".run-command pre\");\n\n        let target = document.querySelector(\".run-command #target\").value;\n        // the help text is taken from the first minion that answers\n        // when no target is selected, just ask all minions\n        if(target === \"\") target = \"*\";\n\n        // do not use the command-parser\n        let command = document.querySelector(\".run-command #command\").value;\n        // remove arguments\n        command = command.trim().replace(/ .*/, \"\");\n        // remove trailing dots\n        command = command.trim().replace(/[.]*$/, \"\");\n        // command can be empty here (but the gui prevents that)\n\n        button.disabled = true;\n        output.innerText = \"Loading...\";\n\n        let docCommand;\n        let dummyCommand;\n        if(command === \"runners\" || command.startsWith(\"runners.\")) {\n            // runners command. docCommand is WITHOUT further arguments\n            docCommand = \"runners.doc.runner\";\n            dummyCommand = \"runners.doc.runner \" + command;\n        } else if(command === \"wheel\" || command.startsWith(\"wheel.\")) {\n            // wheel command. docCommand is WITHOUT further arguments\n            docCommand = \"runners.doc.wheel\";\n            dummyCommand = \"runners.doc.wheel \" + command;\n        } else {\n            // regular command. docCommand is WITH further argument\n            docCommand = \"sys.doc \" + command;\n            dummyCommand = \"sys.doc \" + command;\n        }\n\n        const tgtType = TargetType.menuTargetType._value;\n\n        this.commandbox._getRunParams(tgtType, target, docCommand).then(\n            response => this.commandbox._onRunReturn(response.return[0], dummyCommand)\n        );\n    }\n\n}","import {DropDownMenu} from './DropDownMenu';\n\nexport class RunType {\n\n    static createMenu() {\n        const runblock = document.getElementById(\"runblock\");\n        RunType.menuRunType = new DropDownMenu(runblock);\n        // do not show the menu title at first\n        RunType.menuRunType.setTitle(\"\");\n        RunType.menuRunType.addMenuItem(\"Normal\", this._updateRunTypeText, \"normal\");\n        RunType.menuRunType.addMenuItem(\"Async\", this._updateRunTypeText, \"async\");\n    }\n\n    static _updateRunTypeText() {\n        const runType = RunType.getRunType();\n\n        switch(runType) {\n        case \"normal\":\n            // now that the menu is used show the menu title\n            RunType.menuRunType.setTitle(\"Normal\");\n            break;\n        case \"async\":\n            RunType.menuRunType.setTitle(\"Async\");\n            break;\n        }\n    }\n\n    static setRunTypeDefault() {\n        RunType.menuRunType._value = \"normal\";\n        RunType._updateRunTypeText();\n        // reset the title to the absolute minimum\n        // so that the menu does not stand out in trivial situations\n        RunType.menuRunType.setTitle(\"\");\n    }\n\n    static getRunType() {\n        const runType = RunType.menuRunType._value;\n        if(runType === undefined || runType === \"\") return \"normal\";\n        return runType;\n    }\n\n}\n","import {DropDownMenu} from './DropDownMenu';\n\nexport class TargetType {\n\n    static createMenu() {\n        const targetbox = document.getElementById(\"targetbox\");\n        TargetType.menuTargetType = new DropDownMenu(targetbox);\n        // do not show the menu title at first\n        TargetType.menuTargetType.addMenuItem(\"Normal\", this.manualUpdateTargetTypeText, \"glob\");\n        TargetType.menuTargetType.addMenuItem(\"List\", this.manualUpdateTargetTypeText, \"list\");\n        TargetType.menuTargetType.addMenuItem(TargetType._targetTypeNodeGroupPrepare, this.manualUpdateTargetTypeText, \"nodegroup\");\n        TargetType.menuTargetType.addMenuItem(\"Compound\", this.manualUpdateTargetTypeText, \"compound\");\n        TargetType.setTargetTypeDefault();\n    }\n\n    // It takes a while before we known the list of nodegroups\n    // so this conclusion must be re-evaluated each time\n    static _targetTypeNodeGroupPrepare(menuitem) {\n        const nodegroups = window.localStorage.getItem(\"nodegroups\");\n        if(nodegroups && nodegroups !== \"{}\") {\n            menuitem.innerText = \"Nodegroup\";\n            menuitem.style.display = \"block\";\n        } else {\n            menuitem.style.display = \"none\";\n        }\n    }\n\n    static autoSelectTargetType(target) {\n\n        if(TargetType.menuTargetType._value !== undefined &&\n      TargetType.menuTargetType._value !== \"\" &&\n      !TargetType.menuTargetType._system) {\n            // user has selected the value, do not touch it\n            return;\n        }\n\n        if(target.includes(\"@\") || target.includes(\" \") ||\n       target.includes(\"(\") || target.includes(\")\")) {\n            // \"@\" is a strong indicator for compound target\n            // but \"space\", \"(\" and \")\" are also typical for compound target\n            TargetType.menuTargetType._value = \"compound\";\n            TargetType._updateTargetTypeText();\n            return;\n        }\n\n        if(target.includes(\",\")) {\n            // \",\" is a strong indicator for list target (when it is also not compound)\n            TargetType.menuTargetType._value = \"list\";\n            TargetType._updateTargetTypeText();\n            return;\n        }\n\n        if(target.startsWith(\"#\")) {\n            // \"#\" at the start of a line is a strong indicator for nodegroup target\n            // this is not a SALTSTACK standard, but our own invention\n            TargetType.menuTargetType._value = \"nodegroup\";\n            TargetType._updateTargetTypeText();\n            return;\n        }\n\n        // do not show it when default and not explicitly selected\n        TargetType.setTargetTypeDefault();\n    }\n\n    static manualUpdateTargetTypeText() {\n        TargetType.menuTargetType._system = false;\n        TargetType._updateTargetTypeText();\n    }\n\n    static _updateTargetTypeText() {\n        const targetType = TargetType.getTargetType();\n\n        switch(targetType) {\n        case \"compound\":\n            TargetType.menuTargetType.setTitle(\"Compound\");\n            break;\n        case \"glob\":\n            // now that the menu is used show the menu title\n            TargetType.menuTargetType.setTitle(\"Normal\");\n            break;\n        case \"list\":\n            TargetType.menuTargetType.setTitle(\"List\");\n            break;\n        case \"nodegroup\":\n            TargetType.menuTargetType.setTitle(\"Nodegroup\");\n            break;\n        }\n    }\n\n    static setTargetTypeDefault() {\n        TargetType.menuTargetType._value = \"glob\";\n        // reset the title to the absolute minimum\n        // so that the menu does not stand out in trivial situations\n        TargetType.menuTargetType.setTitle(\"\");\n        TargetType.menuTargetType._system = true;\n    }\n\n    static setTargetType(tt) {\n        TargetType.menuTargetType._value = tt;\n        TargetType.menuTargetType._system = true;\n        TargetType._updateTargetTypeText();\n    }\n\n    static getTargetType() {\n        const targetType = TargetType.menuTargetType._value;\n        if(targetType === undefined || targetType === \"\") return \"glob\";\n        return targetType;\n    }\n\n}\n","// Function to parse a commandline\n// The line is broken into individual tokens\n// Each token that is recognized as a JS type will get that type\n// Otherwise the token is considered to be a string\n// name-value pairs in the form \"name=value\" are added to the \"params\" dictionary\n// other parameters are added to the \"args\" array\n// e.g.:\n//   test \"1 2 3\" 4 x=7 {\"a\":1, \"b\":2}\n// is a command line of 5 tokens\n//   string: \"test\"\n//   string: \"1 2 3\"\n//   number: 4\n//   number: 7\n//   dictionary: {\"a\":1, \"b\": 2}\n// the array will be filled with 4 elements\n// the dictionary will be filled with one element named \"x\"\n\n\n// note that \"none\" is not case-insensitive, but \"null\" is\nconst patNull = /^(None|null|Null|NULL)$/;\n\nconst patBooleanFalse = /^(false|False|FALSE)$/;\nconst patBooleanTrue = /^(true|True|TRUE)$/;\n\nconst patJid = /^[2-9][0-9][0-9][0-9][01][0-9][0-3][0-9][0-2][0-9][0-5][0-9][0-5][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/;\n\nconst patInteger = /^((0)|([-+]?[1-9][0-9]*))$/;\n\nconst patFloat = /^([-+]?(([0-9]+)|([0-9]+[.][0-9]*)|([0-9]*[.][0-9]+))([eE][-+]?[0-9]+)?)$/;\n\nexport class CommandLineParser {\n    parse(toRun, args, params) {\n    // just in case the user typed some extra whitespace\n    // at the start of the line\n        toRun = toRun.trim();\n\n        while (toRun.length > 0) {\n            let name = null;\n\n            let firstSpaceChar = toRun.indexOf(\" \");\n            if (firstSpaceChar < 0)\n                firstSpaceChar = toRun.length;\n            const firstEqualSign = toRun.indexOf(\"=\");\n            if (firstEqualSign >= 0 && firstEqualSign < firstSpaceChar) {\n                // we have the name of a named parameter\n                name = toRun.substr(0, firstEqualSign);\n                toRun = toRun.substr(firstEqualSign + 1);\n                if (toRun === \"\" || toRun[0] === \" \") {\n                    return \"Must have value for named parameter '\" + name + \"'\";\n                }\n            }\n\n            // Determine whether the JSON string starts with a known\n            // character for a JSON type\n            let endChar = undefined;\n            let objType = undefined;\n            if (toRun[0] === \"{\") {\n                endChar = \"}\";\n                objType = \"dictionary\";\n            } else if (toRun[0] === \"[\") {\n                endChar = \"]\";\n                objType = \"array\";\n            } else if (toRun[0] === \"\\\"\") {\n                // note that json does not support single-quoted strings\n                endChar = \"\\\"\";\n                objType = \"double-quoted-string\";\n            }\n\n            let value;\n            if (endChar && objType) {\n                // The string starts with a character for a known JSON type\n                let p = 1;\n                while (true) {\n                    // Try until the next closing character\n                    let n = toRun.indexOf(endChar, p);\n                    if (n < 0) {\n                        return \"No valid \" + objType + \" found\";\n                    }\n\n                    // parse what we have found so far\n                    // the string ends with a closing character\n                    // but that may not be enough, e.g. \"{a:{}\"\n                    const s = toRun.substring(0, n + 1);\n                    try {\n                        value = JSON.parse(s);\n                    }\n                    catch (err) {\n                        // the string that we tried to parse is not valid json\n                        // continue to add more text from the input\n                        p = n + 1;\n                        continue;\n                    }\n\n                    // the first part of the string is valid JSON\n                    n = n + 1;\n                    if (n < toRun.length && toRun[n] !== \" \") {\n                        return \"Valid \" + objType + \", but followed by text:\" + toRun.substring(n) + \"...\";\n                    }\n\n                    // valid JSON and not followed by strange characters\n                    toRun = toRun.substring(n);\n                    break;\n                }\n            } else {\n                // everything else is a string (without quotes)\n                // when we are done, we'll see whether it actually is a number\n                // or any of the known constants\n                let str = \"\";\n                while (toRun.length > 0 && toRun[0] !== \" \") {\n                    str += toRun[0];\n                    toRun = toRun.substring(1);\n                }\n\n                // try to find whether the string is actually a known constant\n                // or integer or float\n                if (patNull.test(str)) {\n                    value = null;\n                } else if (patBooleanFalse.test(str)) {\n                    value = false;\n                } else if (patBooleanTrue.test(str)) {\n                    value = true;\n                } else if (patJid.test(str)) {\n                    // jids look like numbers but must be strings\n                    value = str;\n                } else if (patInteger.test(str)) {\n                    value = parseInt(str);\n                } else if (patFloat.test(str)) {\n                    value = parseFloat(str);\n                    if (!isFinite(value)) {\n                        return \"Numeric argument has overflowed or is infinity\";\n                    }\n                } else {\n                    value = str;\n                }\n            }\n\n            if (name !== null) {\n                // named parameter\n                params[name] = value;\n            } else {\n                // anonymous parameter\n                args.push(value);\n            }\n\n            // ignore the whitespace before the next part\n            toRun = toRun.trim();\n        }\n\n        // succesfull (no error message return)\n        return null;\n    }\n}","import {DropDownMenu} from './DropDownMenu';\nimport {Documentation} from './Documentation';\nimport {RunType} from './RunType';\nimport {TargetType} from './TargetType';\nimport {Output} from './output';\nimport {CommandLineParser} from './CommandLineParser';\n\nexport class CommandBox {\n\n    constructor(api) {\n        this.api = api;\n\n        this.commandLineParser = new CommandLineParser();\n\n        this._getRunParams = this._getRunParams.bind(this);\n        this._onRun = this._onRun.bind(this);\n        this._onRunReturn = this._onRunReturn.bind(this);\n        this._showManualRun = this._showManualRun.bind(this);\n        this._hideManualRun = this._hideManualRun.bind(this);\n\n        const cmdbox = document.querySelector(\".run-command #cmdbox\");\n        this.cmdmenu = new DropDownMenu(cmdbox);\n\n        this.documentation = new Documentation(this);\n        this._registerEventListeners();\n\n        RunType.createMenu();\n        TargetType.createMenu();\n\n        const title = document.querySelector(\".run-command #templatemenuhere\");\n        const menu = new DropDownMenu(title);\n        let templatesText = window.localStorage.getItem(\"templates\");\n        if(!templatesText || templatesText === \"undefined\") templatesText = \"{}\";\n        const templates = JSON.parse(templatesText);\n        const keys = Object.keys(templates).sort();\n        const page = this;\n        for(const key of keys) {\n            const template = templates[key];\n            let description = template[\"description\"];\n            if(!description) description = \"(\" + key + \")\";\n            menu.addMenuItem(\n                description,\n                function() {\n                    page._applyTemplate(template);\n                }\n            );\n        }\n    }\n\n    _registerEventListeners() {\n        document.querySelector(\"#popup_runcommand\")\n            .addEventListener(\"click\", this._hideManualRun);\n        document.querySelector(\"#button_manualrun\")\n            .addEventListener(\"click\", this._showManualRun);\n        document.querySelector(\"#button_close_cmd\")\n            .addEventListener(\"click\", this._hideManualRun);\n\n        document.querySelector(\".run-command input[type='submit']\")\n            .addEventListener(\"click\", this._onRun);\n\n        this._addKeyEventListener(\"#target\", _ => {\n            const target = document.querySelector(\".run-command #target\").value;\n            TargetType.autoSelectTargetType(target);\n        });\n\n        this._addKeyEventListener(\"#command\", this.cmdmenu.verifyAll);\n    }\n\n    _applyTemplate(template) {\n\n        if(template.targettype) {\n            let tt = template.targettype;\n            const targetbox = document.querySelector(\"#targetbox\");\n            // show the extended selection controls when\n            targetbox.style.display = \"inherit\";\n            if(tt !== \"glob\" && tt !== \"list\" && tt !== \"compound\" && tt !== \"nodegroup\") {\n                // we don't support that, revert to standard (not default)\n                tt = \"glob\";\n            }\n            TargetType.setTargetType(tt);\n        } else {\n            // not in the template, revert to default\n            TargetType.setTargetTypeDefault();\n        }\n\n        if(template.target) {\n            const target = document.querySelector(\".run-command #target\");\n            target.value = template.target;\n        }\n\n        if(template.command) {\n            const command = document.querySelector(\".run-command #command\");\n            command.value = template.command;\n        }\n    }\n\n    _addKeyEventListener(selector, func) {\n    // keydown is too early, keypress also does not work\n        document.querySelector(selector).addEventListener(\"keyup\", func);\n        // cut/paste do not work everywhere\n        document.querySelector(selector).addEventListener(\"cut\", func);\n        document.querySelector(selector).addEventListener(\"paste\", func);\n        // blur/focus should not be needed but are a valuable fallback\n        document.querySelector(selector).addEventListener(\"blur\", func);\n        document.querySelector(selector).addEventListener(\"focus\", func);\n    }\n\n    _onRun() {\n        const button = document.querySelector(\".run-command input[type='submit']\");\n        if(button.disabled) return;\n        const output = document.querySelector(\".run-command pre\");\n\n        const target = document.querySelector(\".run-command #target\").value;\n        const command = document.querySelector(\".run-command #command\").value;\n\n        const tgtType = TargetType.menuTargetType._value;\n\n        const func = this._getRunParams(tgtType, target, command);\n        if(func === null) return;\n\n        button.disabled = true;\n        output.innerText = \"Loading...\";\n\n        func.then(response => {\n            this._onRunReturn(response.return[0], command);\n        });\n    }\n\n    _onRunReturn(response, command) {\n        const outputContainer = document.querySelector(\".run-command pre\");\n        let minions = Object.keys(response);\n        if(command.startsWith(\"runners.\")) minions = [\"RUNNER\"];\n        if(command.startsWith(\"wheel.\")) minions = [\"WHEEL\"];\n        Output.addResponseOutput(outputContainer, minions, response, command);\n        const button = document.querySelector(\".run-command input[type='submit']\");\n        button.disabled = false;\n    }\n\n    _showManualRun(evt) {\n        const manualRun = document.querySelector(\"#popup_runcommand\");\n        manualRun.style.display = \"block\";\n\n        document.body.style[\"overflow-y\"] = \"hidden\";\n        document.querySelector(\".run-command pre\").innerText = \"Waiting for command...\";\n\n        const target = document.querySelector(\".run-command #target\").value;\n        TargetType.autoSelectTargetType(target);\n\n        RunType.setRunTypeDefault();\n\n        // (re-)populate the dropdown box\n        const targetlist = document.getElementById(\"targetlist\");\n        while(targetlist.firstChild) {\n            targetlist.removeChild(targetlist.firstChild);\n        }\n        const nodegroups = JSON.parse(window.localStorage.getItem(\"nodegroups\"));\n        if(nodegroups) {\n            for(const nodegroup of Object.keys(nodegroups).sort()) {\n                const option = document.createElement(\"option\");\n                option.value = \"#\" + nodegroup;\n                targetlist.appendChild(option);\n            }\n        }\n        const minions = JSON.parse(window.localStorage.getItem(\"minions\"));\n        if(minions) {\n            for(const minion of minions.sort()) {\n                const option = document.createElement(\"option\");\n                option.value = minion;\n                targetlist.appendChild(option);\n            }\n        }\n\n        evt.stopPropagation();\n    }\n\n    _hideManualRun(evt) {\n    //Don't close if they click inside the window\n        if(evt.target.className !== \"popup\" && evt.target.className !== \"nearlyvisiblebutton\") return;\n\n        const manualRun = document.querySelector(\"#popup_runcommand\");\n        manualRun.style.display = \"none\";\n\n        document.body.style[\"overflow-y\"] = \"scroll\";\n\n        // reset to default, so that its value is initially hidden\n        RunType.setRunTypeDefault();\n        TargetType.setTargetTypeDefault();\n\n        // test whether the command may have caused an update to the list\n        // the user may have altered the text after running the command, just ignore that\n        const command = document.querySelector(\".run-command #command\").value.split(\" \")[0];\n        const output = document.querySelector(\".run-command pre\").innerText;\n        const screenModifyingCommands = [\n            \"grains.append\",\n            \"grains.delkey\",\n            \"grains.delval\",\n            \"grains.setval\",\n            \"saltutil.refresh_grains\",\n            \"saltutil.refresh_pillar\",\n            \"schedule.delete\",\n            \"schedule.disable\",\n            \"schedule.disable_job\",\n            \"schedule.enable\",\n            \"schedule.enable_job\",\n            \"schedule.modify\",\n            \"wheel.key.accept\",\n            \"wheel.key.delete\",\n            \"wheel.key.reject\",\n        ];\n        if(screenModifyingCommands.includes(command) && output !== \"Waiting for command...\") {\n            location.reload();\n        }\n\n        evt.stopPropagation();\n    }\n\n    _showError(message) {\n        this._onRunReturn(message, \"\");\n    }\n\n    _getRunParams(tgtType, target, toRun) {\n\n        // The leading # was used to indicate a nodegroup\n        if(tgtType === \"nodegroup\" && target.startsWith(\"#\")) {\n            target = target.substring(1);\n        }\n\n        if(toRun === \"\") {\n            this._showError(\"'Command' field cannot be empty\");\n            return null;\n        }\n\n        // collection for unnamed parameters\n        const args = [ ];\n\n        // collection for named parameters\n        const kwargs = { };\n\n    \n        const ret = this.commandLineParser.parse(toRun, args, kwargs);\n        if(ret !== null) {\n            // that is an error message being returned\n            this._showError(ret);\n            return null;\n        }\n\n        if(args.length === 0) {\n            this._showError(\"First (unnamed) parameter is the function name, it is mandatory\");\n            return null;\n        }\n\n        const functionToRun = args.shift();\n\n        if(typeof functionToRun !== \"string\") {\n            this._showError(\"First (unnamed) parameter is the function name, it must be a string, not a \" + typeof functionToRun);\n            return null;\n        }\n\n        // RUNNERS commands do not have a target (MASTER is the target)\n        // WHEEL commands also do not have a target\n        // but we use the TARGET value to form the usually required MATCH parameter\n        // therefore for WHEEL commands it is still required\n        if(target === \"\" && functionToRun !== \"runners\" && !functionToRun.startsWith(\"runners.\")) {\n            this._showError(\"'Target' field cannot be empty\");\n            return null;\n        }\n\n        // SALT API returns a 500-InternalServerError when it hits an unknown group\n        // Let's improve on that\n        if(tgtType === \"nodegroup\") {\n            const nodegroups = JSON.parse(window.localStorage.getItem(\"nodegroups\"));\n            if(!nodegroups || !(target in nodegroups)) {\n                this._showError(\"Unknown nodegroup '\" + target + \"'\");\n                return null;\n            }\n        }\n\n        let params = { };\n        if(functionToRun.startsWith(\"runners.\")) {\n            params = kwargs;\n            params.client = \"runner\";\n            // use only the part after \"runners.\" (8 chars)\n            params.fun = functionToRun.substring(8);\n            if(args.length > 0) params.arg = args;\n        } else if(functionToRun.startsWith(\"wheel.\")) {\n            // wheel.key functions are treated slightly different\n            // we re-use the \"target\" field to fill the parameter \"match\"\n            // as used by the salt.wheel.key functions\n            params = kwargs;\n            params.client = \"wheel\";\n            // use only the part after \"wheel.\" (6 chars)\n            params.fun = functionToRun.substring(6);\n            params.match = target;\n        } else {\n            params.client = \"local\";\n            params.fun = functionToRun;\n            params.tgt = target;\n            if(tgtType) params.tgt_type = tgtType;\n            if(args.length !== 0) params.arg = args;\n            if(Object.keys(kwargs).length > 0) params.kwarg = kwargs;\n        }\n\n        const runType = RunType.getRunType();\n        if(params.client === \"local\" && runType === \"async\") {\n            params.client = \"local_async\";\n            // return looks like:\n            // { \"jid\": \"20180718173942195461\", \"minions\": [ ... ] }\n        }\n\n        return this.api.apiRequest(\"POST\", \"/\", params)\n            .catch(error => {\n                this._showError(error.message);\n                return error;\n            });\n    }\n}\n","import {\n    LoginRoute,\n    MinionsRoute, \n    KeysRoute, \n    GrainsRoute, \n    GrainsMinionRoute, \n    SchedulesRoute, \n    SchedulesMinionRoute, \n    PillarsRoute,\n    PillarsMinionRoute, \n    JobRoute, \n    JobsRoute, \n    TemplatesRoute\n} from './routes';\n\nimport {Api} from './Api';\nimport {CommandBox} from './CommandBox';\n\nexport class Router {\n\n    constructor() {\n        this.api = new Api();\n        this.commandbox = new CommandBox(this.api);\n        this.currentRoute = undefined;\n        this.routes = [];\n\n        // show template menu item if templates defined\n        const templatesText = window.localStorage.getItem(\"templates\");\n        if(templatesText && templatesText !== \"undefined\") {\n            const item1 = document.querySelector(\"#button_templates1\");\n            item1.style.display = \"inline-block\";\n            const item2 = document.querySelector(\"#button_templates2\");\n            item2.style.display = \"inline-block\";\n        }\n    }\n\n\n    bootstrap() {\n        this.registerRoute(new LoginRoute(this));\n        this.registerRoute(new MinionsRoute(this));\n        this.registerRoute(new KeysRoute(this));\n        this.registerRoute(new GrainsRoute(this));\n        this.registerRoute(new GrainsMinionRoute(this));\n        this.registerRoute(new SchedulesRoute(this));\n        this.registerRoute(new SchedulesMinionRoute(this));\n        this.registerRoute(new PillarsRoute(this));\n        this.registerRoute(new PillarsMinionRoute(this));\n        this.registerRoute(new JobRoute(this));\n        this.registerRoute(new JobsRoute(this));\n        this.registerRoute(new TemplatesRoute(this));\n\n        this._registerEventListeners();\n\n        this.api\n            .isAuthenticated()\n            .then(valid_session => this.goTo(\n                valid_session ? window.location.pathname + window.location.search : \"/login\"))\n            .catch(error => {\n                console.error(error);\n                this.goTo(\"/login\");\n            });\n    }\n\n    _registerEventListeners() {\n        const router = this;\n\n        document.querySelector(\".logo\")\n            .addEventListener(\"click\", _ => {\n                if(window.location.pathname === \"/login\") return;\n                router.goTo(\"/\");\n            });\n\n        document.querySelector(\"#button_minions1\")\n            .addEventListener(\"click\", _ => {\n                window.location.replace(\"/\");\n            });\n        document.querySelector(\"#button_minions2\")\n            .addEventListener(\"click\", _ => {\n                window.location.replace(\"/\");\n            });\n\n        document.querySelector(\"#button_grains1\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/grains\");\n            });\n        document.querySelector(\"#button_grains2\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/grains\");\n            });\n\n        document.querySelector(\"#button_schedules1\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/schedules\");\n            });\n        document.querySelector(\"#button_schedules2\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/schedules\");\n            });\n\n        document.querySelector(\"#button_pillars1\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/pillars\");\n            });\n        document.querySelector(\"#button_pillars2\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/pillars\");\n            });\n\n        document.querySelector(\"#button_keys1\")\n            .addEventListener(\"click\", _ => {\n                window.location.replace(\"/keys\");\n            });\n        document.querySelector(\"#button_keys2\")\n            .addEventListener(\"click\", _ => {\n                window.location.replace(\"/keys\");\n            });\n\n        document.querySelector(\"#button_jobs1\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/jobs\");\n            });\n        document.querySelector(\"#button_jobs2\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/jobs\");\n            });\n\n        document.querySelector(\"#button_templates1\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/templates\");\n            });\n        document.querySelector(\"#button_templates2\")\n            .addEventListener('click', _ => {\n                window.location.replace(\"/templates\");\n            });\n\n        document.querySelector(\"#button_logout1\")\n            .addEventListener(\"click\", _ => {\n                this.api.logout().then(() => {\n                    window.location.replace(\"/\");\n                });\n            });\n        document.querySelector(\"#button_logout2\")\n            .addEventListener(\"click\", _ => {\n                this.api.logout().then(() => {\n                    window.location.replace(\"/\");\n                });\n            });\n    }\n\n    registerRoute(route) {\n        this.routes.push(route);\n        if(route.onRegister) route.onRegister();\n    }\n\n    goTo(path) {\n        if(this.switchingRoute) return;\n        if(window.location.pathname === path && this.currentRoute) return;\n        for(const route of this.routes) {\n            if(!route.getPath().test(path.split(\"?\")[0])) continue;\n\n            window.history.pushState({}, undefined, path);\n            this.showRoute(route);\n            return;\n        }\n    }\n\n    showRoute(route) {\n        const router = this;\n        route.getPageElement().style.display = \"\";\n\n        const minionMenuItem = document.getElementById(\"button_minions1\");\n        const jobsMenuItem = document.getElementById(\"button_jobs1\");\n\n        Array.from(document.querySelectorAll(\".menu_item_active\")).forEach(\n            function (e){ e.classList.remove(\"menu_item_active\"); }\n        );\n\n        const elem1 = route.getMenuItemElement1();\n        if(elem1) {\n            elem1.classList.add(\"menu_item_active\");\n            // activate also parent menu item if child element is selected\n            if(elem1.id === \"button_pillars1\" || elem1.id === \"button_schedules1\" || elem1.id === \"button_grains1\") {\n                minionMenuItem.classList.add(\"menu_item_active\");\n            }\n            if(elem1.id === \"button_jobs1\" || elem1.id === \"button_templates1\") {\n                jobsMenuItem.classList.add(\"menu_item_active\");\n            }\n        }\n\n        const elem2 = route.getMenuItemElement2();\n        if(elem2) {\n            elem2.classList.add(\"menu_item_active\");\n        }\n\n        router.switchingRoute = true;\n\n        const afterLoad = function(route) {\n            if(router.currentRoute !== undefined) {\n                router.hideRoute(router.currentRoute);\n            }\n\n            router.currentRoute = route;\n            document.title = \"SaltGUI - \" + router.currentRoute.getName();\n            router.currentRoute.getPageElement().className = \"route current\";\n            router.switchingRoute = false;\n        };\n\n        let response;\n        if(route.onShow) response = route.onShow();\n\n        if(response && response.then) response.then(afterLoad(route));\n        else afterLoad(route);\n    }\n\n    hideRoute(route) {\n        route.getPageElement().className = \"route\";\n        setTimeout(function() {\n            //Hide element after fade, so it does not expand the body\n            route.getPageElement().style.display = \"none\";\n        }, 500);\n        if(route.onHide) route.onHide();\n    }\n\n}","import {Router} from './Router';\n\nimport './utils';\n\nwindow.addEventListener(\"load\", () => {\n    const router = new Router();\n    router.bootstrap();\n});"],"sourceRoot":""}